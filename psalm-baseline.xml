<?xml version="1.0" encoding="UTF-8"?>
<files psalm-version="3.16@d03e5ef057d6adc656c0ff7e166c50b73b4f48f3">
  <file src="src/PubSubHubbub/AbstractCallback.php">
    <DocblockTypeContradiction occurrences="4">
      <code>! $httpResponse instanceof HttpResponse &amp;&amp; ! $httpResponse instanceof PhpResponse</code>
      <code>$this-&gt;httpResponse === null</code>
      <code>$this-&gt;storage === null</code>
      <code>is_array($options)</code>
    </DocblockTypeContradiction>
    <MixedArgument occurrences="4">
      <code>$callbackUrl</code>
      <code>$callbackUrl</code>
      <code>$name</code>
      <code>$options['storage']</code>
    </MixedArgument>
    <MixedAssignment occurrences="7">
      <code>$callbackUrl</code>
      <code>$callbackUrl</code>
      <code>$https</code>
      <code>$https</code>
      <code>$iisUrlRewritten</code>
      <code>$name</code>
      <code>$unencodedUrl</code>
    </MixedAssignment>
    <MixedInferredReturnType occurrences="5">
      <code>bool|string</code>
      <code>string</code>
      <code>string</code>
      <code>string</code>
      <code>string</code>
    </MixedInferredReturnType>
    <MixedOperand occurrences="2">
      <code>$_SERVER['QUERY_STRING']</code>
      <code>$callbackUrl</code>
    </MixedOperand>
    <MixedReturnStatement occurrences="8">
      <code>$_SERVER[$temp]</code>
      <code>$_SERVER[$temp]</code>
      <code>$_SERVER['HTTP_HOST']</code>
      <code>$callbackUrl</code>
      <code>$callbackUrl</code>
      <code>$headers[$header]</code>
      <code>$name</code>
      <code>$unencodedUrl</code>
    </MixedReturnStatement>
    <PropertyNotSetInConstructor occurrences="2">
      <code>$httpResponse</code>
      <code>$storage</code>
    </PropertyNotSetInConstructor>
    <RedundantCondition occurrences="1">
      <code>is_array($options)</code>
    </RedundantCondition>
  </file>
  <file src="src/PubSubHubbub/CallbackInterface.php">
    <MissingReturnType occurrences="2">
      <code>handle</code>
      <code>setHttpResponse</code>
    </MissingReturnType>
  </file>
  <file src="src/PubSubHubbub/HttpResponse.php">
    <DocblockTypeContradiction occurrences="1">
      <code>is_int($code)</code>
    </DocblockTypeContradiction>
    <InvalidScalarArgument occurrences="1">
      <code>strlen($content)</code>
    </InvalidScalarArgument>
    <MixedArgument occurrences="2">
      <code>$header['replace']</code>
      <code>$header['replace']</code>
    </MixedArgument>
    <MixedArrayAccess occurrences="9">
      <code>$header['name']</code>
      <code>$header['name']</code>
      <code>$header['name']</code>
      <code>$header['name']</code>
      <code>$header['replace']</code>
      <code>$header['replace']</code>
      <code>$header['value']</code>
      <code>$header['value']</code>
      <code>$header['value']</code>
    </MixedArrayAccess>
    <MixedAssignment occurrences="3">
      <code>$header</code>
      <code>$header</code>
      <code>$header</code>
    </MixedAssignment>
    <MixedInferredReturnType occurrences="1">
      <code>string|null</code>
    </MixedInferredReturnType>
    <MixedOperand occurrences="4">
      <code>$header['name']</code>
      <code>$header['name']</code>
      <code>$header['value']</code>
      <code>$header['value']</code>
    </MixedOperand>
    <MixedReturnStatement occurrences="1">
      <code>$header['value']</code>
    </MixedReturnStatement>
    <RedundantCondition occurrences="1">
      <code>200 == $this-&gt;statusCode</code>
    </RedundantCondition>
    <RedundantConditionGivenDocblockType occurrences="2">
      <code>! is_int($code) || (100 &gt; $code)</code>
      <code>is_int($code)</code>
    </RedundantConditionGivenDocblockType>
  </file>
  <file src="src/PubSubHubbub/Model/AbstractModel.php">
    <NullArgument occurrences="1">
      <code>null</code>
    </NullArgument>
  </file>
  <file src="src/PubSubHubbub/Model/Subscription.php">
    <DocblockTypeContradiction occurrences="3">
      <code>is_string($key)</code>
      <code>is_string($key)</code>
      <code>null === $this-&gt;now</code>
    </DocblockTypeContradiction>
    <FalsableReturnStatement occurrences="1">
      <code>false</code>
    </FalsableReturnStatement>
    <MixedArgument occurrences="4">
      <code>$result</code>
      <code>$result</code>
      <code>$result</code>
      <code>$result</code>
    </MixedArgument>
    <MixedAssignment occurrences="5">
      <code>$data['created_time']</code>
      <code>$result</code>
      <code>$result</code>
      <code>$result</code>
      <code>$result</code>
    </MixedAssignment>
    <MixedInferredReturnType occurrences="1">
      <code>array</code>
    </MixedInferredReturnType>
    <MixedMethodCall occurrences="3">
      <code>current</code>
      <code>current</code>
      <code>getArrayCopy</code>
    </MixedMethodCall>
    <MixedOperand occurrences="1">
      <code>$data['lease_seconds']</code>
    </MixedOperand>
    <MixedPropertyFetch occurrences="1">
      <code>$result-&gt;current()-&gt;created_time</code>
    </MixedPropertyFetch>
    <MixedReturnStatement occurrences="1">
      <code>$result-&gt;current()-&gt;getArrayCopy()</code>
    </MixedReturnStatement>
    <PropertyNotSetInConstructor occurrences="1">
      <code>$now</code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="src/PubSubHubbub/PubSubHubbub.php">
    <DocblockTypeContradiction occurrences="2">
      <code>isset(static::$httpClient)</code>
      <code>null === static::$escaper</code>
    </DocblockTypeContradiction>
    <MissingReturnType occurrences="1">
      <code>setEscaper</code>
    </MissingReturnType>
    <MixedInferredReturnType occurrences="1">
      <code>array</code>
    </MixedInferredReturnType>
    <MixedReturnStatement occurrences="1">
      <code>$feed-&gt;getHubs()</code>
    </MixedReturnStatement>
    <RedundantConditionGivenDocblockType occurrences="1">
      <code>$source instanceof Reader\Feed\AbstractFeed</code>
    </RedundantConditionGivenDocblockType>
    <UndefinedInterfaceMethod occurrences="1">
      <code>getHubs</code>
    </UndefinedInterfaceMethod>
  </file>
  <file src="src/PubSubHubbub/Publisher.php">
    <DocblockTypeContradiction occurrences="9">
      <code>! is_string($value) &amp;&amp; $value !== null</code>
      <code>is_array($name)</code>
      <code>is_array($options)</code>
      <code>is_string($name)</code>
      <code>is_string($name)</code>
      <code>is_string($url)</code>
      <code>is_string($url)</code>
      <code>is_string($url)</code>
      <code>is_string($value)</code>
    </DocblockTypeContradiction>
    <MixedArgument occurrences="10">
      <code>$name</code>
      <code>$options['hubUrls']</code>
      <code>$options['parameters']</code>
      <code>$options['updatedTopicUrls']</code>
      <code>$topicUrl</code>
      <code>$url</code>
      <code>$url</code>
      <code>$url</code>
      <code>$value</code>
      <code>$value</code>
    </MixedArgument>
    <MixedArgumentTypeCoercion occurrences="2">
      <code>$name</code>
      <code>$name</code>
    </MixedArgumentTypeCoercion>
    <MixedAssignment occurrences="6">
      <code>$topicUrl</code>
      <code>$url</code>
      <code>$url</code>
      <code>$url</code>
      <code>$value</code>
      <code>$value</code>
    </MixedAssignment>
    <MixedOperand occurrences="1">
      <code>$response-&gt;getContent()</code>
    </MixedOperand>
    <RedundantConditionGivenDocblockType occurrences="7">
      <code>empty($url) || ! is_string($url) || ! Uri::factory($url)-&gt;isValid()</code>
      <code>empty($url) || ! is_string($url) || ! Uri::factory($url)-&gt;isValid()</code>
      <code>empty($url) || ! is_string($url) || ! Uri::factory($url)-&gt;isValid()</code>
      <code>is_string($url)</code>
      <code>is_string($url)</code>
      <code>is_string($url)</code>
      <code>is_string($value)</code>
    </RedundantConditionGivenDocblockType>
  </file>
  <file src="src/PubSubHubbub/Subscriber.php">
    <DocblockTypeContradiction occurrences="11">
      <code>! is_string($value) &amp;&amp; $value !== null</code>
      <code>$this-&gt;storage === null</code>
      <code>is_array($name)</code>
      <code>is_array($options)</code>
      <code>is_string($name)</code>
      <code>is_string($name)</code>
      <code>is_string($url)</code>
      <code>is_string($url)</code>
      <code>is_string($url)</code>
      <code>is_string($url)</code>
      <code>is_string($value)</code>
    </DocblockTypeContradiction>
    <InvalidPropertyAssignmentValue occurrences="1">
      <code>$bool</code>
    </InvalidPropertyAssignmentValue>
    <InvalidScalarArgument occurrences="1">
      <code>rand()</code>
    </InvalidScalarArgument>
    <MissingParamType occurrences="1">
      <code>$token</code>
    </MissingParamType>
    <MissingPropertyType occurrences="1">
      <code>$testStaticToken</code>
    </MissingPropertyType>
    <MissingReturnType occurrences="1">
      <code>setTestStaticToken</code>
    </MissingReturnType>
    <MixedArgument occurrences="21">
      <code>$auth[0]</code>
      <code>$auth[1]</code>
      <code>$authentication</code>
      <code>$duplicateKey</code>
      <code>$name</code>
      <code>$options['authentications']</code>
      <code>$options['callbackUrl']</code>
      <code>$options['hubUrls']</code>
      <code>$options['leaseSeconds']</code>
      <code>$options['parameters']</code>
      <code>$options['preferredVerificationMode']</code>
      <code>$options['storage']</code>
      <code>$options['topicUrl']</code>
      <code>$options['usePathParameter']</code>
      <code>$params['hub.verify_token']</code>
      <code>$url</code>
      <code>$url</code>
      <code>$url</code>
      <code>$url</code>
      <code>$value</code>
      <code>$value</code>
    </MixedArgument>
    <MixedArgumentTypeCoercion occurrences="5">
      <code>$key</code>
      <code>$key</code>
      <code>$name</code>
      <code>$url</code>
      <code>uksort($params, 'strnatcmp')</code>
    </MixedArgumentTypeCoercion>
    <MixedArrayAccess occurrences="2">
      <code>$auth[0]</code>
      <code>$auth[1]</code>
    </MixedArrayAccess>
    <MixedAssignment occurrences="11">
      <code>$auth</code>
      <code>$authentication</code>
      <code>$duplicateKey</code>
      <code>$keyduplicate</code>
      <code>$params[$name]</code>
      <code>$url</code>
      <code>$url</code>
      <code>$value</code>
      <code>$value</code>
      <code>$value</code>
      <code>$value</code>
    </MixedAssignment>
    <MixedInferredReturnType occurrences="1">
      <code>string</code>
    </MixedInferredReturnType>
    <MixedOperand occurrences="4">
      <code>$keyduplicate</code>
      <code>$params['hub.lease_seconds']</code>
      <code>$params['hub.topic']</code>
      <code>$value</code>
    </MixedOperand>
    <MixedReturnStatement occurrences="1">
      <code>$this-&gt;testStaticToken</code>
    </MixedReturnStatement>
    <PossiblyFalsePropertyAssignmentValue occurrences="1">
      <code>false</code>
    </PossiblyFalsePropertyAssignmentValue>
    <PossiblyInvalidArgument occurrences="1">
      <code>$params['hub.verify_token']</code>
    </PossiblyInvalidArgument>
    <PropertyNotSetInConstructor occurrences="2">
      <code>$leaseSeconds</code>
      <code>$storage</code>
    </PropertyNotSetInConstructor>
    <RedundantConditionGivenDocblockType occurrences="10">
      <code>$this-&gt;getLeaseSeconds() !== null</code>
      <code>empty($url) || ! is_string($url) || ! Uri::factory($url)-&gt;isValid()</code>
      <code>empty($url) || ! is_string($url) || ! Uri::factory($url)-&gt;isValid()</code>
      <code>empty($url) || ! is_string($url) || ! Uri::factory($url)-&gt;isValid()</code>
      <code>empty($url) || ! is_string($url) || ! Uri::factory($url)-&gt;isValid()</code>
      <code>is_string($url)</code>
      <code>is_string($url)</code>
      <code>is_string($url)</code>
      <code>is_string($url)</code>
      <code>is_string($value)</code>
    </RedundantConditionGivenDocblockType>
  </file>
  <file src="src/PubSubHubbub/Subscriber/Callback.php">
    <DocblockTypeContradiction occurrences="1">
      <code>$this-&gt;feedUpdate === null</code>
    </DocblockTypeContradiction>
    <InvalidScalarArgument occurrences="6">
      <code>$contentType</code>
      <code>$contentType</code>
      <code>$contentType</code>
      <code>$contentType</code>
      <code>$contentType</code>
      <code>$this-&gt;getSubscriberCount()</code>
    </InvalidScalarArgument>
    <MixedArgument occurrences="9">
      <code>$_SERVER['REQUEST_METHOD']</code>
      <code>$_SERVER['REQUEST_METHOD']</code>
      <code>$httpGetData['hub_challenge']</code>
      <code>$httpGetData['hub_mode']</code>
      <code>$httpGetData['hub_mode']</code>
      <code>$httpGetData['hub_topic']</code>
      <code>$httpGetData['hub_verify_token']</code>
      <code>$params['xhub.subscription']</code>
      <code>$queryString</code>
    </MixedArgument>
    <MixedAssignment occurrences="3">
      <code>$data['lease_seconds']</code>
      <code>$queryString</code>
      <code>$verifyToken</code>
    </MixedAssignment>
    <MixedInferredReturnType occurrences="1">
      <code>false|string</code>
    </MixedInferredReturnType>
    <MixedReturnStatement occurrences="1">
      <code>$httpGetData['xhub_subscription']</code>
    </MixedReturnStatement>
    <ParamNameMismatch occurrences="1">
      <code>$httpGetData</code>
    </ParamNameMismatch>
    <PossiblyFalseArgument occurrences="2">
      <code>$this-&gt;_getRawBody()</code>
      <code>$verifyTokenKey</code>
    </PossiblyFalseArgument>
    <PossiblyNullArgument occurrences="1">
      <code>$httpGetData['hub_verify_token']</code>
    </PossiblyNullArgument>
    <PossiblyNullArrayAccess occurrences="1">
      <code>$httpGetData['hub_verify_token']</code>
    </PossiblyNullArrayAccess>
    <PossiblyUndefinedMethod occurrences="1">
      <code>setHeader</code>
    </PossiblyUndefinedMethod>
    <PropertyNotSetInConstructor occurrences="5">
      <code>$currentSubscriptionData</code>
      <code>$feedUpdate</code>
      <code>$subscriptionKey</code>
      <code>Callback</code>
      <code>Callback</code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="src/Reader/AbstractEntry.php">
    <DocblockTypeContradiction occurrences="1">
      <code>$this-&gt;xpath</code>
    </DocblockTypeContradiction>
    <InvalidArgument occurrences="1">
      <code>$entry</code>
    </InvalidArgument>
    <MixedArgument occurrences="2">
      <code>$all['core']</code>
      <code>$extension</code>
    </MixedArgument>
    <MixedArrayOffset occurrences="1">
      <code>$this-&gt;extensions[$extension]</code>
    </MixedArrayOffset>
    <MixedAssignment occurrences="4">
      <code>$className</code>
      <code>$extension</code>
      <code>$extension</code>
      <code>$feed</code>
    </MixedAssignment>
    <MixedInferredReturnType occurrences="2">
      <code>null|Extension\AbstractEntry</code>
      <code>string</code>
    </MixedInferredReturnType>
    <MixedMethodCall occurrences="2">
      <code>getClassName</code>
    </MixedMethodCall>
    <MixedReturnStatement occurrences="2">
      <code>$this-&gt;data['type']</code>
      <code>$this-&gt;extensions[$name . '\Entry']</code>
    </MixedReturnStatement>
    <PossiblyNullPropertyAssignmentValue occurrences="1">
      <code>$entry-&gt;ownerDocument</code>
    </PossiblyNullPropertyAssignmentValue>
    <PropertyNotSetInConstructor occurrences="1">
      <code>$xpath</code>
    </PropertyNotSetInConstructor>
    <UndefinedMethod occurrences="1">
      <code>Reader::getPluginLoader()</code>
    </UndefinedMethod>
  </file>
  <file src="src/Reader/AbstractFeed.php">
    <InvalidScalarArgument occurrences="1">
      <code>$this-&gt;key()</code>
    </InvalidScalarArgument>
    <MissingParamType occurrences="2">
      <code>$args</code>
      <code>$method</code>
    </MissingParamType>
    <MissingReturnType occurrences="5">
      <code>getExtensions</code>
      <code>indexEntries</code>
      <code>loadExtensions</code>
      <code>registerNamespaces</code>
      <code>setOriginalSourceUri</code>
    </MissingReturnType>
    <MixedArgument occurrences="6">
      <code>$all['core']</code>
      <code>$extension</code>
      <code>$extension</code>
      <code>$method</code>
      <code>$this-&gt;entries[$this-&gt;key()]</code>
      <code>$this-&gt;entries[$this-&gt;key()]</code>
    </MixedArgument>
    <MixedArrayOffset occurrences="1">
      <code>$this-&gt;extensions[$extension]</code>
    </MixedArrayOffset>
    <MixedAssignment occurrences="4">
      <code>$extension</code>
      <code>$extension</code>
      <code>$feed</code>
      <code>$plugin</code>
    </MixedAssignment>
    <MixedInferredReturnType occurrences="2">
      <code>Extension\AbstractFeed</code>
      <code>string</code>
    </MixedInferredReturnType>
    <MixedMethodCall occurrences="3">
      <code>setDomDocument</code>
      <code>setType</code>
      <code>setXpath</code>
    </MixedMethodCall>
    <MixedOperand occurrences="1">
      <code>$method</code>
    </MixedOperand>
    <MixedReturnStatement occurrences="2">
      <code>$this-&gt;data['type']</code>
      <code>$this-&gt;extensions[$name . '\Feed']</code>
    </MixedReturnStatement>
    <PropertyNotSetInConstructor occurrences="1">
      <code>$originalSourceUri</code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="src/Reader/Collection/Author.php">
    <MixedArrayAccess occurrences="1">
      <code>$element['name']</code>
    </MixedArrayAccess>
    <MixedAssignment occurrences="2">
      <code>$authors[]</code>
      <code>$element</code>
    </MixedAssignment>
  </file>
  <file src="src/Reader/Collection/Category.php">
    <MixedArrayAccess occurrences="1">
      <code>$element['term']</code>
    </MixedArrayAccess>
    <MixedAssignment occurrences="3">
      <code>$categories[]</code>
      <code>$categories[]</code>
      <code>$element</code>
    </MixedAssignment>
  </file>
  <file src="src/Reader/Entry/AbstractEntry.php">
    <DocblockTypeContradiction occurrences="1">
      <code>$this-&gt;xpath</code>
    </DocblockTypeContradiction>
    <InvalidScalarArgument occurrences="1">
      <code>$deep</code>
    </InvalidScalarArgument>
    <MixedArgument occurrences="3">
      <code>$all['core']</code>
      <code>$extension</code>
      <code>$extension</code>
    </MixedArgument>
    <MixedArrayOffset occurrences="1">
      <code>$this-&gt;extensions[$extension]</code>
    </MixedArrayOffset>
    <MixedAssignment occurrences="4">
      <code>$extension</code>
      <code>$extension</code>
      <code>$feed</code>
      <code>$plugin</code>
    </MixedAssignment>
    <MixedInferredReturnType occurrences="2">
      <code>Reader\Extension\AbstractEntry</code>
      <code>string</code>
    </MixedInferredReturnType>
    <MixedMethodCall occurrences="3">
      <code>setEntryElement</code>
      <code>setEntryKey</code>
      <code>setType</code>
    </MixedMethodCall>
    <MixedReturnStatement occurrences="2">
      <code>$this-&gt;data['type']</code>
      <code>$this-&gt;extensions[$name . '\\Entry']</code>
    </MixedReturnStatement>
    <PossiblyNullPropertyAssignmentValue occurrences="1">
      <code>$entry-&gt;ownerDocument</code>
    </PossiblyNullPropertyAssignmentValue>
    <PropertyNotSetInConstructor occurrences="1">
      <code>$xpath</code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="src/Reader/Entry/Atom.php">
    <ImplementedReturnTypeMismatch occurrences="2">
      <code>string</code>
      <code>void</code>
    </ImplementedReturnTypeMismatch>
    <MixedArgument occurrences="1">
      <code>$categoryCollection</code>
    </MixedArgument>
    <MixedAssignment occurrences="18">
      <code>$categoryCollection</code>
      <code>$categoryCollection</code>
      <code>$commentcount</code>
      <code>$commentcount</code>
      <code>$commentfeedlink</code>
      <code>$commentlink</code>
      <code>$content</code>
      <code>$dateCreated</code>
      <code>$dateModified</code>
      <code>$description</code>
      <code>$enclosure</code>
      <code>$extension</code>
      <code>$extension</code>
      <code>$id</code>
      <code>$links</code>
      <code>$people</code>
      <code>$source</code>
      <code>$title</code>
    </MixedAssignment>
    <MixedInferredReturnType occurrences="16">
      <code>DateTime</code>
      <code>DateTime</code>
      <code>Reader\Collection\Category</code>
      <code>array</code>
      <code>array</code>
      <code>getAuthor</code>
      <code>int</code>
      <code>null|Reader\Feed\Atom\Source</code>
      <code>string</code>
      <code>string</code>
      <code>string</code>
      <code>string</code>
      <code>string</code>
      <code>string</code>
      <code>string</code>
      <code>string</code>
    </MixedInferredReturnType>
    <MixedMethodCall occurrences="4">
      <code>setEntryElement</code>
      <code>setEntryKey</code>
      <code>setType</code>
      <code>setXpath</code>
    </MixedMethodCall>
    <MixedReturnStatement occurrences="30">
      <code>$authors[$index]</code>
      <code>$this-&gt;data['authors']</code>
      <code>$this-&gt;data['authors']</code>
      <code>$this-&gt;data['categories']</code>
      <code>$this-&gt;data['categories']</code>
      <code>$this-&gt;data['commentcount']</code>
      <code>$this-&gt;data['commentcount']</code>
      <code>$this-&gt;data['commentfeedlink']</code>
      <code>$this-&gt;data['commentfeedlink']</code>
      <code>$this-&gt;data['commentlink']</code>
      <code>$this-&gt;data['commentlink']</code>
      <code>$this-&gt;data['content']</code>
      <code>$this-&gt;data['content']</code>
      <code>$this-&gt;data['datecreated']</code>
      <code>$this-&gt;data['datecreated']</code>
      <code>$this-&gt;data['datemodified']</code>
      <code>$this-&gt;data['datemodified']</code>
      <code>$this-&gt;data['description']</code>
      <code>$this-&gt;data['description']</code>
      <code>$this-&gt;data['enclosure']</code>
      <code>$this-&gt;data['enclosure']</code>
      <code>$this-&gt;data['id']</code>
      <code>$this-&gt;data['id']</code>
      <code>$this-&gt;data['links']</code>
      <code>$this-&gt;data['links']</code>
      <code>$this-&gt;data['links'][$index]</code>
      <code>$this-&gt;data['source']</code>
      <code>$this-&gt;data['source']</code>
      <code>$this-&gt;data['title']</code>
      <code>$this-&gt;data['title']</code>
    </MixedReturnStatement>
    <PropertyNotSetInConstructor occurrences="1">
      <code>Atom</code>
    </PropertyNotSetInConstructor>
    <UndefinedMethod occurrences="16">
      <code>getAuthors</code>
      <code>getCategories</code>
      <code>getCategories</code>
      <code>getCommentCount</code>
      <code>getCommentCount</code>
      <code>getCommentFeedLink</code>
      <code>getCommentLink</code>
      <code>getContent</code>
      <code>getDateCreated</code>
      <code>getDateModified</code>
      <code>getDescription</code>
      <code>getEnclosure</code>
      <code>getId</code>
      <code>getLinks</code>
      <code>getSource</code>
      <code>getTitle</code>
    </UndefinedMethod>
  </file>
  <file src="src/Reader/Entry/Rss.php">
    <ImplementedReturnTypeMismatch occurrences="3">
      <code>null|string</code>
      <code>string</code>
      <code>void</code>
    </ImplementedReturnTypeMismatch>
    <InvalidScalarArgument occurrences="1">
      <code>$entryKey</code>
    </InvalidScalarArgument>
    <MixedArgument occurrences="5">
      <code>$authors</code>
      <code>$categoryCollection</code>
      <code>$dateModified</code>
      <code>$dateModified</code>
      <code>Reader\Reader::arrayUnique($authors)</code>
    </MixedArgument>
    <MixedArrayAccess occurrences="1">
      <code>$author['name']</code>
    </MixedArrayAccess>
    <MixedAssignment occurrences="33">
      <code>$author</code>
      <code>$authors</code>
      <code>$authorsDc</code>
      <code>$categoryCollection</code>
      <code>$categoryCollection</code>
      <code>$commentcount</code>
      <code>$commentcount</code>
      <code>$commentcount</code>
      <code>$commentfeedlink</code>
      <code>$commentfeedlink</code>
      <code>$commentfeedlink</code>
      <code>$commentlink</code>
      <code>$commentlink</code>
      <code>$content</code>
      <code>$content</code>
      <code>$date</code>
      <code>$date</code>
      <code>$dateModified</code>
      <code>$description</code>
      <code>$description</code>
      <code>$description</code>
      <code>$description</code>
      <code>$enclosure</code>
      <code>$extension</code>
      <code>$extension</code>
      <code>$id</code>
      <code>$id</code>
      <code>$id</code>
      <code>$links</code>
      <code>$title</code>
      <code>$title</code>
      <code>$title</code>
      <code>$title</code>
    </MixedAssignment>
    <MixedInferredReturnType occurrences="14">
      <code>DateTime</code>
      <code>Reader\Collection\Category</code>
      <code>array</code>
      <code>array</code>
      <code>getAuthor</code>
      <code>null|string</code>
      <code>string</code>
      <code>string</code>
      <code>string</code>
      <code>string</code>
      <code>string</code>
      <code>string</code>
      <code>string</code>
      <code>string</code>
    </MixedInferredReturnType>
    <MixedMethodCall occurrences="4">
      <code>setEntryElement</code>
      <code>setEntryKey</code>
      <code>setType</code>
      <code>setXpath</code>
    </MixedMethodCall>
    <MixedReturnStatement occurrences="26">
      <code>$authors[$index]</code>
      <code>$this-&gt;data['authors']</code>
      <code>$this-&gt;data['authors']</code>
      <code>$this-&gt;data['categories']</code>
      <code>$this-&gt;data['categories']</code>
      <code>$this-&gt;data['commentcount']</code>
      <code>$this-&gt;data['commentcount']</code>
      <code>$this-&gt;data['commentfeedlink']</code>
      <code>$this-&gt;data['commentfeedlink']</code>
      <code>$this-&gt;data['commentlink']</code>
      <code>$this-&gt;data['commentlink']</code>
      <code>$this-&gt;data['content']</code>
      <code>$this-&gt;data['content']</code>
      <code>$this-&gt;data['datemodified']</code>
      <code>$this-&gt;data['datemodified']</code>
      <code>$this-&gt;data['description']</code>
      <code>$this-&gt;data['description']</code>
      <code>$this-&gt;data['enclosure']</code>
      <code>$this-&gt;data['enclosure']</code>
      <code>$this-&gt;data['id']</code>
      <code>$this-&gt;data['id']</code>
      <code>$this-&gt;data['links']</code>
      <code>$this-&gt;data['links']</code>
      <code>$this-&gt;data['links'][$index]</code>
      <code>$this-&gt;data['title']</code>
      <code>$this-&gt;data['title']</code>
    </MixedReturnStatement>
    <NullableReturnStatement occurrences="7">
      <code>$this-&gt;data['authors']</code>
      <code>$this-&gt;data['commentfeedlink']</code>
      <code>$this-&gt;data['commentlink']</code>
      <code>$this-&gt;data['datemodified']</code>
      <code>$this-&gt;data['description']</code>
      <code>$this-&gt;data['id']</code>
      <code>$this-&gt;data['title']</code>
    </NullableReturnStatement>
    <PossiblyNullArgument occurrences="1">
      <code>$standard</code>
    </PossiblyNullArgument>
    <PropertyNotSetInConstructor occurrences="1">
      <code>Rss</code>
    </PropertyNotSetInConstructor>
    <UndefinedMethod occurrences="27">
      <code>getAttribute</code>
      <code>getAttribute</code>
      <code>getAttribute</code>
      <code>getAttribute</code>
      <code>getAuthors</code>
      <code>getAuthors</code>
      <code>getCategories</code>
      <code>getCategories</code>
      <code>getCommentCount</code>
      <code>getCommentCount</code>
      <code>getCommentCount</code>
      <code>getCommentFeedLink</code>
      <code>getCommentFeedLink</code>
      <code>getCommentFeedLink</code>
      <code>getCommentLink</code>
      <code>getContent</code>
      <code>getContent</code>
      <code>getDate</code>
      <code>getDateModified</code>
      <code>getDescription</code>
      <code>getDescription</code>
      <code>getEnclosure</code>
      <code>getId</code>
      <code>getId</code>
      <code>getLinks</code>
      <code>getTitle</code>
      <code>getTitle</code>
    </UndefinedMethod>
  </file>
  <file src="src/Reader/Extension/AbstractEntry.php">
    <DocblockTypeContradiction occurrences="2">
      <code>$this-&gt;xpath</code>
      <code>null === $type</code>
    </DocblockTypeContradiction>
    <InvalidArgument occurrences="1">
      <code>$this-&gt;getEntryElement()</code>
    </InvalidArgument>
    <InvalidPropertyAssignmentValue occurrences="1">
      <code>$entryKey</code>
    </InvalidPropertyAssignmentValue>
    <MissingConstructor occurrences="30">
      <code>$domDocument</code>
      <code>$domDocument</code>
      <code>$domDocument</code>
      <code>$domDocument</code>
      <code>$domDocument</code>
      <code>$domDocument</code>
      <code>$domDocument</code>
      <code>$domDocument</code>
      <code>$domDocument</code>
      <code>$domDocument</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$xpath</code>
      <code>$xpath</code>
      <code>$xpath</code>
      <code>$xpath</code>
      <code>$xpath</code>
      <code>$xpath</code>
      <code>$xpath</code>
      <code>$xpath</code>
      <code>$xpath</code>
      <code>$xpath</code>
    </MissingConstructor>
    <MixedAssignment occurrences="1">
      <code>$type</code>
    </MixedAssignment>
    <MixedInferredReturnType occurrences="1">
      <code>string</code>
    </MixedInferredReturnType>
    <MixedReturnStatement occurrences="1">
      <code>$type</code>
    </MixedReturnStatement>
    <PossiblyNullPropertyAssignmentValue occurrences="1">
      <code>$entry-&gt;ownerDocument</code>
    </PossiblyNullPropertyAssignmentValue>
  </file>
  <file src="src/Reader/Extension/AbstractFeed.php">
    <DocblockTypeContradiction occurrences="1">
      <code>null === $this-&gt;xpath</code>
    </DocblockTypeContradiction>
    <InvalidReturnStatement occurrences="1">
      <code>$this-&gt;xpath</code>
    </InvalidReturnStatement>
    <InvalidReturnType occurrences="1">
      <code>string</code>
    </InvalidReturnType>
    <MissingConstructor occurrences="14">
      <code>$domDocument</code>
      <code>$domDocument</code>
      <code>$domDocument</code>
      <code>$domDocument</code>
      <code>$domDocument</code>
      <code>$domDocument</code>
      <code>$domDocument</code>
      <code>$xpath</code>
      <code>$xpath</code>
      <code>$xpath</code>
      <code>$xpath</code>
      <code>$xpath</code>
      <code>$xpath</code>
      <code>$xpath</code>
    </MissingConstructor>
    <MissingReturnType occurrences="1">
      <code>registerNamespaces</code>
    </MissingReturnType>
    <MixedAssignment occurrences="1">
      <code>$type</code>
    </MixedAssignment>
    <MixedInferredReturnType occurrences="1">
      <code>string</code>
    </MixedInferredReturnType>
    <MixedReturnStatement occurrences="1">
      <code>$type</code>
    </MixedReturnStatement>
    <PossiblyNullPropertyAssignmentValue occurrences="1">
      <code>null</code>
    </PossiblyNullPropertyAssignmentValue>
  </file>
  <file src="src/Reader/Extension/Atom/Entry.php">
    <ArgumentTypeCoercion occurrences="2">
      <code>$author</code>
      <code>$element</code>
    </ArgumentTypeCoercion>
    <InvalidNullableReturnType occurrences="2">
      <code>string</code>
      <code>string</code>
    </InvalidNullableReturnType>
    <InvalidReturnStatement occurrences="4">
      <code>$author</code>
      <code>$this-&gt;data['datecreated']</code>
      <code>$this-&gt;data['datemodified']</code>
      <code>$this-&gt;data['enclosure']</code>
    </InvalidReturnStatement>
    <InvalidReturnType occurrences="1">
      <code>string</code>
    </InvalidReturnType>
    <InvalidScalarArgument occurrences="1">
      <code>$deep</code>
    </InvalidScalarArgument>
    <MixedArgument occurrences="7">
      <code>$content</code>
      <code>$dateCreated</code>
      <code>$dateModified</code>
      <code>$link</code>
      <code>$link</code>
      <code>$link-&gt;value</code>
      <code>Reader\Reader::arrayUnique($authors)</code>
    </MixedArgument>
    <MixedAssignment occurrences="14">
      <code>$baseUrl</code>
      <code>$baseUrl</code>
      <code>$content</code>
      <code>$count</code>
      <code>$dateCreated</code>
      <code>$dateCreated</code>
      <code>$dateModified</code>
      <code>$dateModified</code>
      <code>$description</code>
      <code>$id</code>
      <code>$link</code>
      <code>$link</code>
      <code>$title</code>
      <code>$type</code>
    </MixedAssignment>
    <MixedInferredReturnType occurrences="17">
      <code>Collection\Author</code>
      <code>Collection\Category</code>
      <code>array</code>
      <code>int</code>
      <code>null|Reader\Feed\Atom\Source</code>
      <code>null|string</code>
      <code>null|string</code>
      <code>string</code>
      <code>string</code>
      <code>string</code>
      <code>string</code>
      <code>string</code>
      <code>string</code>
      <code>string</code>
      <code>string</code>
      <code>string</code>
      <code>string</code>
    </MixedInferredReturnType>
    <MixedReturnStatement occurrences="22">
      <code>$authors[$index]</code>
      <code>$this-&gt;data['authors']</code>
      <code>$this-&gt;data['baseUrl']</code>
      <code>$this-&gt;data['baseUrl']</code>
      <code>$this-&gt;data['categories']</code>
      <code>$this-&gt;data['commentcount']</code>
      <code>$this-&gt;data['commentcount']</code>
      <code>$this-&gt;data['commentfeedlink']</code>
      <code>$this-&gt;data['commentlink']</code>
      <code>$this-&gt;data['content']</code>
      <code>$this-&gt;data['datecreated']</code>
      <code>$this-&gt;data['datemodified']</code>
      <code>$this-&gt;data['description']</code>
      <code>$this-&gt;data['description']</code>
      <code>$this-&gt;data['enclosure']</code>
      <code>$this-&gt;data['id']</code>
      <code>$this-&gt;data['id']</code>
      <code>$this-&gt;data['links']</code>
      <code>$this-&gt;data['links'][$index]</code>
      <code>$this-&gt;data['source']</code>
      <code>$this-&gt;data['title']</code>
      <code>$this-&gt;data['title']</code>
    </MixedReturnStatement>
    <NullableReturnStatement occurrences="10">
      <code>$link</code>
      <code>$this-&gt;data['commentcount']</code>
      <code>$this-&gt;data['commentfeedlink']</code>
      <code>$this-&gt;data['commentlink']</code>
      <code>$this-&gt;data['datecreated']</code>
      <code>$this-&gt;data['datemodified']</code>
      <code>$this-&gt;data['description']</code>
      <code>$this-&gt;data['enclosure']</code>
      <code>$this-&gt;data['id']</code>
      <code>$this-&gt;data['title']</code>
    </NullableReturnStatement>
    <PossiblyNullOperand occurrences="1">
      <code>$this-&gt;getBaseUrl()</code>
    </PossiblyNullOperand>
    <UndefinedMethod occurrences="7">
      <code>getAttribute</code>
      <code>getAttribute</code>
      <code>getAttribute</code>
      <code>getAttribute</code>
      <code>getAttribute</code>
      <code>getAttribute</code>
      <code>getAttribute</code>
    </UndefinedMethod>
    <UndefinedPropertyFetch occurrences="4">
      <code>$link-&gt;value</code>
      <code>$list-&gt;item(0)-&gt;value</code>
      <code>$list-&gt;item(0)-&gt;value</code>
      <code>$list-&gt;item(0)-&gt;value</code>
    </UndefinedPropertyFetch>
  </file>
  <file src="src/Reader/Extension/Atom/Feed.php">
    <ArgumentTypeCoercion occurrences="1">
      <code>$author</code>
    </ArgumentTypeCoercion>
    <InvalidReturnStatement occurrences="1">
      <code>$author</code>
    </InvalidReturnStatement>
    <InvalidReturnType occurrences="1">
      <code>string</code>
    </InvalidReturnType>
    <MissingReturnType occurrences="2">
      <code>getAtomType</code>
      <code>registerNamespaces</code>
    </MissingReturnType>
    <MixedArgument occurrences="4">
      <code>$dateCreated</code>
      <code>$dateModified</code>
      <code>$link</code>
      <code>Reader\Reader::arrayUnique($authors)</code>
    </MixedArgument>
    <MixedAssignment occurrences="17">
      <code>$atomDetected</code>
      <code>$baseUrl</code>
      <code>$copyright</code>
      <code>$copyright</code>
      <code>$dateCreated</code>
      <code>$dateCreated</code>
      <code>$dateModified</code>
      <code>$dateModified</code>
      <code>$description</code>
      <code>$description</code>
      <code>$generator</code>
      <code>$id</code>
      <code>$imageUrl</code>
      <code>$language</code>
      <code>$language</code>
      <code>$link</code>
      <code>$title</code>
    </MixedAssignment>
    <MixedInferredReturnType occurrences="16">
      <code>Collection\Author</code>
      <code>Collection\Category</code>
      <code>null|DateTime</code>
      <code>null|DateTime</code>
      <code>null|array</code>
      <code>null|array</code>
      <code>null|string</code>
      <code>null|string</code>
      <code>null|string</code>
      <code>null|string</code>
      <code>null|string</code>
      <code>null|string</code>
      <code>null|string</code>
      <code>null|string</code>
      <code>null|string</code>
      <code>null|string</code>
    </MixedInferredReturnType>
    <MixedReturnStatement occurrences="23">
      <code>$authors[$index]</code>
      <code>$this-&gt;data['authors']</code>
      <code>$this-&gt;data['baseUrl']</code>
      <code>$this-&gt;data['baseUrl']</code>
      <code>$this-&gt;data['categories']</code>
      <code>$this-&gt;data['copyright']</code>
      <code>$this-&gt;data['copyright']</code>
      <code>$this-&gt;data['datecreated']</code>
      <code>$this-&gt;data['datemodified']</code>
      <code>$this-&gt;data['description']</code>
      <code>$this-&gt;data['description']</code>
      <code>$this-&gt;data['feedlink']</code>
      <code>$this-&gt;data['generator']</code>
      <code>$this-&gt;data['generator']</code>
      <code>$this-&gt;data['hubs']</code>
      <code>$this-&gt;data['id']</code>
      <code>$this-&gt;data['id']</code>
      <code>$this-&gt;data['image']</code>
      <code>$this-&gt;data['language']</code>
      <code>$this-&gt;data['language']</code>
      <code>$this-&gt;data['link']</code>
      <code>$this-&gt;data['title']</code>
      <code>$this-&gt;data['title']</code>
    </MixedReturnStatement>
    <PossiblyNullOperand occurrences="1">
      <code>$this-&gt;getBaseUrl()</code>
    </PossiblyNullOperand>
    <UndefinedMethod occurrences="3">
      <code>getAttribute</code>
      <code>getAttribute</code>
      <code>getAttribute</code>
    </UndefinedMethod>
  </file>
  <file src="src/Reader/Extension/Content/Entry.php">
    <MissingReturnType occurrences="1">
      <code>getContent</code>
    </MissingReturnType>
    <MixedAssignment occurrences="2">
      <code>$content</code>
      <code>$content</code>
    </MixedAssignment>
  </file>
  <file src="src/Reader/Extension/CreativeCommons/Entry.php">
    <MixedAssignment occurrences="3">
      <code>$license</code>
      <code>$licenses[]</code>
      <code>$list</code>
    </MixedAssignment>
    <MixedInferredReturnType occurrences="2">
      <code>array</code>
      <code>null|string</code>
    </MixedInferredReturnType>
    <MixedPropertyFetch occurrences="2">
      <code>$license-&gt;nodeValue</code>
      <code>$list-&gt;length</code>
    </MixedPropertyFetch>
    <MixedReturnStatement occurrences="2">
      <code>$licenses[$index]</code>
      <code>$this-&gt;data[$name]</code>
    </MixedReturnStatement>
  </file>
  <file src="src/Reader/Extension/CreativeCommons/Feed.php">
    <MixedAssignment occurrences="3">
      <code>$license</code>
      <code>$licenses[]</code>
      <code>$list</code>
    </MixedAssignment>
    <MixedInferredReturnType occurrences="2">
      <code>array</code>
      <code>null|string</code>
    </MixedInferredReturnType>
    <MixedPropertyFetch occurrences="2">
      <code>$license-&gt;nodeValue</code>
      <code>$list-&gt;length</code>
    </MixedPropertyFetch>
    <MixedReturnStatement occurrences="2">
      <code>$licenses[$index]</code>
      <code>$this-&gt;data[$name]</code>
    </MixedReturnStatement>
  </file>
  <file src="src/Reader/Extension/DublinCore/Entry.php">
    <InvalidReturnStatement occurrences="1">
      <code>$this-&gt;data['authors']</code>
    </InvalidReturnStatement>
    <MixedArgument occurrences="2">
      <code>$date</code>
      <code>Reader\Reader::arrayUnique($authors)</code>
    </MixedArgument>
    <MixedAssignment occurrences="16">
      <code>$author</code>
      <code>$category</code>
      <code>$date</code>
      <code>$date</code>
      <code>$description</code>
      <code>$description</code>
      <code>$id</code>
      <code>$id</code>
      <code>$list</code>
      <code>$list</code>
      <code>$list</code>
      <code>$list</code>
      <code>$list</code>
      <code>$list</code>
      <code>$title</code>
      <code>$title</code>
    </MixedAssignment>
    <MixedInferredReturnType occurrences="7">
      <code>Collection\Category</code>
      <code>array</code>
      <code>null|DateTime</code>
      <code>string</code>
      <code>string</code>
      <code>string</code>
      <code>string</code>
    </MixedInferredReturnType>
    <MixedPropertyFetch occurrences="5">
      <code>$author-&gt;nodeValue</code>
      <code>$category-&gt;nodeValue</code>
      <code>$list-&gt;length</code>
      <code>$list-&gt;length</code>
      <code>$list-&gt;length</code>
    </MixedPropertyFetch>
    <MixedReturnStatement occurrences="10">
      <code>$authors[$index]</code>
      <code>$this-&gt;data['authors']</code>
      <code>$this-&gt;data['categories']</code>
      <code>$this-&gt;data['date']</code>
      <code>$this-&gt;data['description']</code>
      <code>$this-&gt;data['description']</code>
      <code>$this-&gt;data['id']</code>
      <code>$this-&gt;data['id']</code>
      <code>$this-&gt;data['title']</code>
      <code>$this-&gt;data['title']</code>
    </MixedReturnStatement>
    <NullableReturnStatement occurrences="3">
      <code>$this-&gt;data['authors']</code>
      <code>$this-&gt;data['description']</code>
      <code>$this-&gt;data['title']</code>
    </NullableReturnStatement>
  </file>
  <file src="src/Reader/Extension/DublinCore/Feed.php">
    <InvalidMethodCall occurrences="20">
      <code>evaluate</code>
      <code>evaluate</code>
      <code>evaluate</code>
      <code>evaluate</code>
      <code>evaluate</code>
      <code>evaluate</code>
      <code>evaluate</code>
      <code>evaluate</code>
      <code>evaluate</code>
      <code>evaluate</code>
      <code>evaluate</code>
      <code>evaluate</code>
      <code>evaluate</code>
      <code>evaluate</code>
      <code>query</code>
      <code>query</code>
      <code>query</code>
      <code>query</code>
      <code>registerNamespace</code>
      <code>registerNamespace</code>
    </InvalidMethodCall>
    <InvalidReturnStatement occurrences="1">
      <code>$this-&gt;data['authors']</code>
    </InvalidReturnStatement>
    <MixedArgument occurrences="2">
      <code>$date</code>
      <code>Reader\Reader::arrayUnique($authors)</code>
    </MixedArgument>
    <MixedAssignment occurrences="20">
      <code>$author</code>
      <code>$category</code>
      <code>$copyright</code>
      <code>$copyright</code>
      <code>$date</code>
      <code>$date</code>
      <code>$description</code>
      <code>$description</code>
      <code>$id</code>
      <code>$id</code>
      <code>$language</code>
      <code>$language</code>
      <code>$list</code>
      <code>$list</code>
      <code>$list</code>
      <code>$list</code>
      <code>$list</code>
      <code>$list</code>
      <code>$title</code>
      <code>$title</code>
    </MixedAssignment>
    <MixedInferredReturnType occurrences="9">
      <code>Collection\Category</code>
      <code>array</code>
      <code>null|DateTime</code>
      <code>null|string</code>
      <code>null|string</code>
      <code>null|string</code>
      <code>null|string</code>
      <code>null|string</code>
      <code>null|string</code>
    </MixedInferredReturnType>
    <MixedPropertyFetch occurrences="5">
      <code>$author-&gt;nodeValue</code>
      <code>$category-&gt;nodeValue</code>
      <code>$list-&gt;length</code>
      <code>$list-&gt;length</code>
      <code>$list-&gt;length</code>
    </MixedPropertyFetch>
    <MixedReturnStatement occurrences="14">
      <code>$authors[$index]</code>
      <code>$this-&gt;data['authors']</code>
      <code>$this-&gt;data['categories']</code>
      <code>$this-&gt;data['copyright']</code>
      <code>$this-&gt;data['copyright']</code>
      <code>$this-&gt;data['date']</code>
      <code>$this-&gt;data['description']</code>
      <code>$this-&gt;data['description']</code>
      <code>$this-&gt;data['id']</code>
      <code>$this-&gt;data['id']</code>
      <code>$this-&gt;data['language']</code>
      <code>$this-&gt;data['language']</code>
      <code>$this-&gt;data['title']</code>
      <code>$this-&gt;data['title']</code>
    </MixedReturnStatement>
    <NullableReturnStatement occurrences="1">
      <code>$this-&gt;data['authors']</code>
    </NullableReturnStatement>
  </file>
  <file src="src/Reader/Extension/GooglePlayPodcast/Entry.php">
    <MixedAssignment occurrences="3">
      <code>$block</code>
      <code>$description</code>
      <code>$explicit</code>
    </MixedAssignment>
    <MixedInferredReturnType occurrences="3">
      <code>string</code>
      <code>string</code>
      <code>string</code>
    </MixedInferredReturnType>
    <MixedReturnStatement occurrences="6">
      <code>$this-&gt;data['block']</code>
      <code>$this-&gt;data['block']</code>
      <code>$this-&gt;data['description']</code>
      <code>$this-&gt;data['description']</code>
      <code>$this-&gt;data['explicit']</code>
      <code>$this-&gt;data['explicit']</code>
    </MixedReturnStatement>
    <NullableReturnStatement occurrences="3">
      <code>$this-&gt;data['block']</code>
      <code>$this-&gt;data['description']</code>
      <code>$this-&gt;data['explicit']</code>
    </NullableReturnStatement>
  </file>
  <file src="src/Reader/Extension/GooglePlayPodcast/Feed.php">
    <MissingReturnType occurrences="1">
      <code>registerNamespaces</code>
    </MissingReturnType>
    <MixedAssignment occurrences="5">
      <code>$author</code>
      <code>$block</code>
      <code>$description</code>
      <code>$explicit</code>
      <code>$image</code>
    </MixedAssignment>
    <MixedInferredReturnType occurrences="6">
      <code>null|array</code>
      <code>string</code>
      <code>string</code>
      <code>string</code>
      <code>string</code>
      <code>string</code>
    </MixedInferredReturnType>
    <MixedReturnStatement occurrences="11">
      <code>$this-&gt;data['author']</code>
      <code>$this-&gt;data['author']</code>
      <code>$this-&gt;data['block']</code>
      <code>$this-&gt;data['block']</code>
      <code>$this-&gt;data['categories']</code>
      <code>$this-&gt;data['description']</code>
      <code>$this-&gt;data['description']</code>
      <code>$this-&gt;data['explicit']</code>
      <code>$this-&gt;data['explicit']</code>
      <code>$this-&gt;data['image']</code>
      <code>$this-&gt;data['image']</code>
    </MixedReturnStatement>
    <NullableReturnStatement occurrences="5">
      <code>$this-&gt;data['author']</code>
      <code>$this-&gt;data['block']</code>
      <code>$this-&gt;data['description']</code>
      <code>$this-&gt;data['explicit']</code>
      <code>$this-&gt;data['image']</code>
    </NullableReturnStatement>
    <RedundantCondition occurrences="1">
      <code>$categories</code>
    </RedundantCondition>
    <UndefinedMethod occurrences="2">
      <code>getAttribute</code>
      <code>getAttribute</code>
    </UndefinedMethod>
  </file>
  <file src="src/Reader/Extension/Podcast/Entry.php">
    <MixedAssignment occurrences="13">
      <code>$author</code>
      <code>$block</code>
      <code>$duration</code>
      <code>$episode</code>
      <code>$explicit</code>
      <code>$image</code>
      <code>$keywords</code>
      <code>$season</code>
      <code>$status</code>
      <code>$subtitle</code>
      <code>$summary</code>
      <code>$title</code>
      <code>$type</code>
    </MixedAssignment>
    <MixedInferredReturnType occurrences="13">
      <code>bool</code>
      <code>null|int</code>
      <code>null|int</code>
      <code>string</code>
      <code>string</code>
      <code>string</code>
      <code>string</code>
      <code>string</code>
      <code>string</code>
      <code>string</code>
      <code>string</code>
      <code>string</code>
      <code>string</code>
    </MixedInferredReturnType>
    <MixedReturnStatement occurrences="22">
      <code>$this-&gt;data['author']</code>
      <code>$this-&gt;data['author']</code>
      <code>$this-&gt;data['block']</code>
      <code>$this-&gt;data['block']</code>
      <code>$this-&gt;data['duration']</code>
      <code>$this-&gt;data['duration']</code>
      <code>$this-&gt;data['episode']</code>
      <code>$this-&gt;data['episodeType']</code>
      <code>$this-&gt;data['explicit']</code>
      <code>$this-&gt;data['explicit']</code>
      <code>$this-&gt;data['image']</code>
      <code>$this-&gt;data['image']</code>
      <code>$this-&gt;data['isClosedCaptioned']</code>
      <code>$this-&gt;data['keywords']</code>
      <code>$this-&gt;data['keywords']</code>
      <code>$this-&gt;data['season']</code>
      <code>$this-&gt;data['subtitle']</code>
      <code>$this-&gt;data['subtitle']</code>
      <code>$this-&gt;data['summary']</code>
      <code>$this-&gt;data['summary']</code>
      <code>$this-&gt;data['title']</code>
      <code>$this-&gt;data['title']</code>
    </MixedReturnStatement>
    <NullableReturnStatement occurrences="9">
      <code>$this-&gt;data['author']</code>
      <code>$this-&gt;data['block']</code>
      <code>$this-&gt;data['duration']</code>
      <code>$this-&gt;data['explicit']</code>
      <code>$this-&gt;data['image']</code>
      <code>$this-&gt;data['keywords']</code>
      <code>$this-&gt;data['subtitle']</code>
      <code>$this-&gt;data['summary']</code>
      <code>$this-&gt;data['title']</code>
    </NullableReturnStatement>
  </file>
  <file src="src/Reader/Extension/Podcast/Feed.php">
    <MissingReturnType occurrences="1">
      <code>registerNamespaces</code>
    </MissingReturnType>
    <MixedAssignment occurrences="13">
      <code>$author</code>
      <code>$block</code>
      <code>$complete</code>
      <code>$email</code>
      <code>$explicit</code>
      <code>$image</code>
      <code>$keywords</code>
      <code>$name</code>
      <code>$newFeedUrl</code>
      <code>$owner</code>
      <code>$subtitle</code>
      <code>$summary</code>
      <code>$type</code>
    </MixedAssignment>
    <MixedInferredReturnType occurrences="12">
      <code>bool</code>
      <code>null|array</code>
      <code>string</code>
      <code>string</code>
      <code>string</code>
      <code>string</code>
      <code>string</code>
      <code>string</code>
      <code>string</code>
      <code>string</code>
      <code>string</code>
      <code>string</code>
    </MixedInferredReturnType>
    <MixedOperand occurrences="2">
      <code>$email</code>
      <code>$name</code>
    </MixedOperand>
    <MixedReturnStatement occurrences="21">
      <code>$this-&gt;data['author']</code>
      <code>$this-&gt;data['author']</code>
      <code>$this-&gt;data['block']</code>
      <code>$this-&gt;data['block']</code>
      <code>$this-&gt;data['categories']</code>
      <code>$this-&gt;data['complete']</code>
      <code>$this-&gt;data['explicit']</code>
      <code>$this-&gt;data['explicit']</code>
      <code>$this-&gt;data['image']</code>
      <code>$this-&gt;data['image']</code>
      <code>$this-&gt;data['keywords']</code>
      <code>$this-&gt;data['keywords']</code>
      <code>$this-&gt;data['new-feed-url']</code>
      <code>$this-&gt;data['new-feed-url']</code>
      <code>$this-&gt;data['owner']</code>
      <code>$this-&gt;data['owner']</code>
      <code>$this-&gt;data['podcastType']</code>
      <code>$this-&gt;data['subtitle']</code>
      <code>$this-&gt;data['subtitle']</code>
      <code>$this-&gt;data['summary']</code>
      <code>$this-&gt;data['summary']</code>
    </MixedReturnStatement>
    <NullableReturnStatement occurrences="9">
      <code>$this-&gt;data['author']</code>
      <code>$this-&gt;data['block']</code>
      <code>$this-&gt;data['explicit']</code>
      <code>$this-&gt;data['image']</code>
      <code>$this-&gt;data['keywords']</code>
      <code>$this-&gt;data['new-feed-url']</code>
      <code>$this-&gt;data['owner']</code>
      <code>$this-&gt;data['subtitle']</code>
      <code>$this-&gt;data['summary']</code>
    </NullableReturnStatement>
    <RedundantCondition occurrences="1">
      <code>$categories</code>
    </RedundantCondition>
    <UndefinedMethod occurrences="2">
      <code>getAttribute</code>
      <code>getAttribute</code>
    </UndefinedMethod>
  </file>
  <file src="src/Reader/Extension/Slash/Entry.php">
    <InvalidOperand occurrences="1">
      <code>$hit</code>
    </InvalidOperand>
    <MixedArgument occurrences="1">
      <code>$stringParade</code>
    </MixedArgument>
    <MixedAssignment occurrences="4">
      <code>$comments</code>
      <code>$data</code>
      <code>$hitParade[]</code>
      <code>$stringParade</code>
    </MixedAssignment>
    <MixedInferredReturnType occurrences="4">
      <code>array</code>
      <code>int</code>
      <code>null|string</code>
      <code>null|string</code>
    </MixedInferredReturnType>
    <MixedReturnStatement occurrences="5">
      <code>$comments</code>
      <code>$this-&gt;data[$name]</code>
      <code>$this-&gt;data[$name]</code>
      <code>$this-&gt;getData('department')</code>
      <code>$this-&gt;getData('section')</code>
    </MixedReturnStatement>
    <NullableReturnStatement occurrences="1">
      <code>$this-&gt;data[$name]</code>
    </NullableReturnStatement>
  </file>
  <file src="src/Reader/Extension/Syndication/Feed.php">
    <MixedArgument occurrences="1">
      <code>$updateBase</code>
    </MixedArgument>
    <MixedAssignment occurrences="5">
      <code>$data</code>
      <code>$freq</code>
      <code>$freq</code>
      <code>$period</code>
      <code>$updateBase</code>
    </MixedAssignment>
    <MixedInferredReturnType occurrences="3">
      <code>int</code>
      <code>int</code>
      <code>string</code>
    </MixedInferredReturnType>
    <MixedOperand occurrences="1">
      <code>$freq</code>
    </MixedOperand>
    <MixedReturnStatement occurrences="3">
      <code>$freq</code>
      <code>$period</code>
      <code>$ticks / $freq</code>
    </MixedReturnStatement>
  </file>
  <file src="src/Reader/Extension/Thread/Entry.php">
    <InvalidReturnType occurrences="1">
      <code>string</code>
    </InvalidReturnType>
    <MixedAssignment occurrences="1">
      <code>$data</code>
    </MixedAssignment>
    <MixedInferredReturnType occurrences="1">
      <code>null|int</code>
    </MixedInferredReturnType>
    <MixedReturnStatement occurrences="1">
      <code>$this-&gt;getData('total')</code>
    </MixedReturnStatement>
  </file>
  <file src="src/Reader/Extension/WellFormedWeb/Entry.php">
    <MixedAssignment occurrences="1">
      <code>$data</code>
    </MixedAssignment>
    <MixedInferredReturnType occurrences="1">
      <code>null|string</code>
    </MixedInferredReturnType>
    <MixedReturnStatement occurrences="2">
      <code>$data</code>
      <code>$this-&gt;data[$name]</code>
    </MixedReturnStatement>
  </file>
  <file src="src/Reader/ExtensionManager.php">
    <MissingPropertyType occurrences="1">
      <code>$pluginManager</code>
    </MissingPropertyType>
    <MixedArgument occurrences="1">
      <code>$this-&gt;pluginManager</code>
    </MixedArgument>
    <MixedInferredReturnType occurrences="2">
      <code>Extension\AbstractEntry|Extension\AbstractFeed</code>
      <code>bool</code>
    </MixedInferredReturnType>
    <MixedMethodCall occurrences="2">
      <code>get</code>
      <code>has</code>
    </MixedMethodCall>
    <MixedReturnStatement occurrences="2">
      <code>$this-&gt;pluginManager-&gt;get($name)</code>
      <code>$this-&gt;pluginManager-&gt;has($name)</code>
    </MixedReturnStatement>
  </file>
  <file src="src/Reader/Feed/AbstractFeed.php">
    <InvalidScalarArgument occurrences="1">
      <code>$this-&gt;key()</code>
    </InvalidScalarArgument>
    <MissingParamType occurrences="2">
      <code>$args</code>
      <code>$method</code>
    </MissingParamType>
    <MissingReturnType occurrences="5">
      <code>getExtensions</code>
      <code>indexEntries</code>
      <code>loadExtensions</code>
      <code>registerNamespaces</code>
      <code>setOriginalSourceUri</code>
    </MissingReturnType>
    <MixedArgument occurrences="8">
      <code>$all['core']</code>
      <code>$extension</code>
      <code>$extension</code>
      <code>$extension</code>
      <code>$extension</code>
      <code>$method</code>
      <code>$this-&gt;entries[$this-&gt;key()]</code>
      <code>$this-&gt;entries[$this-&gt;key()]</code>
    </MixedArgument>
    <MixedArrayOffset occurrences="1">
      <code>$this-&gt;extensions[$extension]</code>
    </MixedArrayOffset>
    <MixedAssignment occurrences="4">
      <code>$extension</code>
      <code>$extension</code>
      <code>$feed</code>
      <code>$plugin</code>
    </MixedAssignment>
    <MixedInferredReturnType occurrences="2">
      <code>null|Reader\Extension\AbstractFeed</code>
      <code>string</code>
    </MixedInferredReturnType>
    <MixedMethodCall occurrences="3">
      <code>setDomDocument</code>
      <code>setType</code>
      <code>setXpath</code>
    </MixedMethodCall>
    <MixedOperand occurrences="1">
      <code>$method</code>
    </MixedOperand>
    <MixedReturnStatement occurrences="2">
      <code>$this-&gt;data['type']</code>
      <code>$this-&gt;extensions[$name . '\\Feed']</code>
    </MixedReturnStatement>
    <PropertyNotSetInConstructor occurrences="1">
      <code>$originalSourceUri</code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="src/Reader/Feed/Atom.php">
    <InvalidReturnType occurrences="1">
      <code>null|string</code>
    </InvalidReturnType>
    <MissingReturnType occurrences="1">
      <code>registerNamespaces</code>
    </MissingReturnType>
    <MixedArgument occurrences="1">
      <code>$categoryCollection</code>
    </MixedArgument>
    <MixedArrayOffset occurrences="1">
      <code>$this-&gt;entries[$index]</code>
    </MixedArrayOffset>
    <MixedAssignment occurrences="22">
      <code>$atomFeed</code>
      <code>$atomFeed</code>
      <code>$authors</code>
      <code>$baseUrl</code>
      <code>$categoryCollection</code>
      <code>$categoryCollection</code>
      <code>$copyright</code>
      <code>$dateCreated</code>
      <code>$dateModified</code>
      <code>$description</code>
      <code>$entries</code>
      <code>$entry</code>
      <code>$extension</code>
      <code>$generator</code>
      <code>$hubs</code>
      <code>$id</code>
      <code>$language</code>
      <code>$language</code>
      <code>$link</code>
      <code>$link</code>
      <code>$link</code>
      <code>$title</code>
    </MixedAssignment>
    <MixedInferredReturnType occurrences="16">
      <code>Reader\Collection\Category</code>
      <code>array</code>
      <code>null|DateTime</code>
      <code>null|DateTime</code>
      <code>null|array</code>
      <code>null|array</code>
      <code>null|string</code>
      <code>null|string</code>
      <code>null|string</code>
      <code>null|string</code>
      <code>null|string</code>
      <code>null|string</code>
      <code>null|string</code>
      <code>null|string</code>
      <code>null|string</code>
      <code>null|string</code>
    </MixedInferredReturnType>
    <MixedMethodCall occurrences="7">
      <code>setDomDocument</code>
      <code>setDomDocument</code>
      <code>setType</code>
      <code>setType</code>
      <code>setXpath</code>
      <code>setXpath</code>
      <code>setXpathPrefix</code>
    </MixedMethodCall>
    <MixedReturnStatement occurrences="31">
      <code>$authors[$index]</code>
      <code>$this-&gt;data['authors']</code>
      <code>$this-&gt;data['authors']</code>
      <code>$this-&gt;data['baseUrl']</code>
      <code>$this-&gt;data['baseUrl']</code>
      <code>$this-&gt;data['categories']</code>
      <code>$this-&gt;data['categories']</code>
      <code>$this-&gt;data['copyright']</code>
      <code>$this-&gt;data['copyright']</code>
      <code>$this-&gt;data['datecreated']</code>
      <code>$this-&gt;data['datecreated']</code>
      <code>$this-&gt;data['datemodified']</code>
      <code>$this-&gt;data['datemodified']</code>
      <code>$this-&gt;data['description']</code>
      <code>$this-&gt;data['description']</code>
      <code>$this-&gt;data['feedlink']</code>
      <code>$this-&gt;data['feedlink']</code>
      <code>$this-&gt;data['generator']</code>
      <code>$this-&gt;data['generator']</code>
      <code>$this-&gt;data['hubs']</code>
      <code>$this-&gt;data['hubs']</code>
      <code>$this-&gt;data['id']</code>
      <code>$this-&gt;data['id']</code>
      <code>$this-&gt;data['image']</code>
      <code>$this-&gt;data['image']</code>
      <code>$this-&gt;data['language']</code>
      <code>$this-&gt;data['language']</code>
      <code>$this-&gt;data['link']</code>
      <code>$this-&gt;data['link']</code>
      <code>$this-&gt;data['title']</code>
      <code>$this-&gt;data['title']</code>
    </MixedReturnStatement>
    <PossiblyNullReference occurrences="16">
      <code>getAuthors</code>
      <code>getBaseUrl</code>
      <code>getCategories</code>
      <code>getCategories</code>
      <code>getCopyright</code>
      <code>getDateCreated</code>
      <code>getDateModified</code>
      <code>getDescription</code>
      <code>getFeedLink</code>
      <code>getGenerator</code>
      <code>getHubs</code>
      <code>getId</code>
      <code>getImage</code>
      <code>getLanguage</code>
      <code>getLink</code>
      <code>getTitle</code>
    </PossiblyNullReference>
    <PropertyNotSetInConstructor occurrences="1">
      <code>Atom</code>
    </PropertyNotSetInConstructor>
    <UndefinedMethod occurrences="16">
      <code>getAuthors</code>
      <code>getBaseUrl</code>
      <code>getCategories</code>
      <code>getCategories</code>
      <code>getCopyright</code>
      <code>getDateCreated</code>
      <code>getDateModified</code>
      <code>getDescription</code>
      <code>getFeedLink</code>
      <code>getGenerator</code>
      <code>getHubs</code>
      <code>getId</code>
      <code>getImage</code>
      <code>getLanguage</code>
      <code>getLink</code>
      <code>getTitle</code>
    </UndefinedMethod>
  </file>
  <file src="src/Reader/Feed/Atom/Source.php">
    <ImplementedReturnTypeMismatch occurrences="4">
      <code>void</code>
      <code>void</code>
      <code>void</code>
      <code>void</code>
    </ImplementedReturnTypeMismatch>
    <MixedAssignment occurrences="2">
      <code>$extension</code>
      <code>$extension</code>
    </MixedAssignment>
    <MixedMethodCall occurrences="4">
      <code>setDomDocument</code>
      <code>setType</code>
      <code>setXpath</code>
      <code>setXpathPrefix</code>
    </MixedMethodCall>
    <PossiblyNullArgument occurrences="1">
      <code>$this-&gt;domDocument</code>
    </PossiblyNullArgument>
    <PossiblyNullPropertyAssignmentValue occurrences="1">
      <code>$source-&gt;ownerDocument</code>
    </PossiblyNullPropertyAssignmentValue>
    <PropertyNotSetInConstructor occurrences="1">
      <code>Source</code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="src/Reader/Feed/Rss.php">
    <InvalidScalarArgument occurrences="1">
      <code>$lastBuildDateParsed</code>
    </InvalidScalarArgument>
    <MissingReturnType occurrences="2">
      <code>indexEntries</code>
      <code>registerNamespaces</code>
    </MissingReturnType>
    <MixedArgument occurrences="7">
      <code>$authors</code>
      <code>$categoryCollection</code>
      <code>$dateModified</code>
      <code>$dateModified</code>
      <code>$hubs</code>
      <code>$lastBuildDate</code>
      <code>Reader\Reader::arrayUnique($authors)</code>
    </MixedArgument>
    <MixedArrayAccess occurrences="1">
      <code>$author['name']</code>
    </MixedArrayAccess>
    <MixedArrayOffset occurrences="1">
      <code>$this-&gt;entries[$index]</code>
    </MixedArrayOffset>
    <MixedAssignment occurrences="55">
      <code>$author</code>
      <code>$authors</code>
      <code>$authorsDc</code>
      <code>$categoryCollection</code>
      <code>$categoryCollection</code>
      <code>$copyright</code>
      <code>$copyright</code>
      <code>$copyright</code>
      <code>$date</code>
      <code>$date</code>
      <code>$dateModified</code>
      <code>$dateModified</code>
      <code>$description</code>
      <code>$description</code>
      <code>$description</code>
      <code>$description</code>
      <code>$entries</code>
      <code>$entries</code>
      <code>$entry</code>
      <code>$extension</code>
      <code>$feed</code>
      <code>$feed</code>
      <code>$generator</code>
      <code>$generator</code>
      <code>$generator</code>
      <code>$generator</code>
      <code>$hubs</code>
      <code>$id</code>
      <code>$id</code>
      <code>$id</code>
      <code>$image['description']</code>
      <code>$image['height']</code>
      <code>$image['link']</code>
      <code>$image['title']</code>
      <code>$image['uri']</code>
      <code>$image['width']</code>
      <code>$language</code>
      <code>$language</code>
      <code>$language</code>
      <code>$language</code>
      <code>$lastBuildDate</code>
      <code>$link</code>
      <code>$link</code>
      <code>$link</code>
      <code>$link</code>
      <code>$title</code>
      <code>$title</code>
      <code>$title</code>
      <code>$title</code>
      <code>$value</code>
      <code>$value</code>
      <code>$value</code>
      <code>$value</code>
      <code>$value</code>
      <code>$value</code>
    </MixedAssignment>
    <MixedInferredReturnType occurrences="15">
      <code>DateTime</code>
      <code>DateTime</code>
      <code>Reader\Collection\Category</code>
      <code>array</code>
      <code>null|array</code>
      <code>null|array</code>
      <code>null|string</code>
      <code>null|string</code>
      <code>null|string</code>
      <code>null|string</code>
      <code>null|string</code>
      <code>null|string</code>
      <code>null|string</code>
      <code>null|string</code>
      <code>null|string</code>
    </MixedInferredReturnType>
    <MixedMethodCall occurrences="7">
      <code>setDomDocument</code>
      <code>setDomDocument</code>
      <code>setType</code>
      <code>setType</code>
      <code>setXpath</code>
      <code>setXpath</code>
      <code>setXpathPrefix</code>
    </MixedMethodCall>
    <MixedReturnStatement occurrences="26">
      <code>$authors[$index]</code>
      <code>$this-&gt;data['authors']</code>
      <code>$this-&gt;data['authors']</code>
      <code>$this-&gt;data['categories']</code>
      <code>$this-&gt;data['categories']</code>
      <code>$this-&gt;data['copyright']</code>
      <code>$this-&gt;data['copyright']</code>
      <code>$this-&gt;data['datemodified']</code>
      <code>$this-&gt;data['datemodified']</code>
      <code>$this-&gt;data['description']</code>
      <code>$this-&gt;data['description']</code>
      <code>$this-&gt;data['feedlink']</code>
      <code>$this-&gt;data['feedlink']</code>
      <code>$this-&gt;data['generator']</code>
      <code>$this-&gt;data['generator']</code>
      <code>$this-&gt;data['hubs']</code>
      <code>$this-&gt;data['id']</code>
      <code>$this-&gt;data['id']</code>
      <code>$this-&gt;data['image']</code>
      <code>$this-&gt;data['language']</code>
      <code>$this-&gt;data['language']</code>
      <code>$this-&gt;data['lastBuildDate']</code>
      <code>$this-&gt;data['link']</code>
      <code>$this-&gt;data['link']</code>
      <code>$this-&gt;data['title']</code>
      <code>$this-&gt;data['title']</code>
    </MixedReturnStatement>
    <NullableReturnStatement occurrences="3">
      <code>$this-&gt;data['authors']</code>
      <code>$this-&gt;data['datemodified']</code>
      <code>$this-&gt;data['lastBuildDate']</code>
    </NullableReturnStatement>
    <PossiblyNullArgument occurrences="2">
      <code>$standard</code>
      <code>$standard</code>
    </PossiblyNullArgument>
    <PossiblyNullReference occurrences="20">
      <code>getAuthors</code>
      <code>getAuthors</code>
      <code>getCategories</code>
      <code>getCategories</code>
      <code>getCopyright</code>
      <code>getCopyright</code>
      <code>getDate</code>
      <code>getDateModified</code>
      <code>getDescription</code>
      <code>getDescription</code>
      <code>getFeedLink</code>
      <code>getGenerator</code>
      <code>getHubs</code>
      <code>getId</code>
      <code>getId</code>
      <code>getLanguage</code>
      <code>getLanguage</code>
      <code>getLink</code>
      <code>getTitle</code>
      <code>getTitle</code>
    </PossiblyNullReference>
    <PropertyNotSetInConstructor occurrences="1">
      <code>Rss</code>
    </PropertyNotSetInConstructor>
    <UndefinedMethod occurrences="21">
      <code>getAttribute</code>
      <code>getAuthors</code>
      <code>getAuthors</code>
      <code>getCategories</code>
      <code>getCategories</code>
      <code>getCopyright</code>
      <code>getCopyright</code>
      <code>getDate</code>
      <code>getDateModified</code>
      <code>getDescription</code>
      <code>getDescription</code>
      <code>getFeedLink</code>
      <code>getGenerator</code>
      <code>getHubs</code>
      <code>getId</code>
      <code>getId</code>
      <code>getLanguage</code>
      <code>getLanguage</code>
      <code>getLink</code>
      <code>getTitle</code>
      <code>getTitle</code>
    </UndefinedMethod>
  </file>
  <file src="src/Reader/FeedSet.php">
    <MissingPropertyType occurrences="3">
      <code>$atom</code>
      <code>$rdf</code>
      <code>$rss</code>
    </MissingPropertyType>
    <MixedArgument occurrences="6">
      <code>$link-&gt;getAttribute('href')</code>
      <code>$link-&gt;getAttribute('href')</code>
      <code>$link-&gt;getAttribute('href')</code>
      <code>$link-&gt;getAttribute('href')</code>
      <code>$link-&gt;getAttribute('rel')</code>
      <code>$this-&gt;offsetGet('href')</code>
    </MixedArgument>
    <UndefinedMethod occurrences="12">
      <code>getAttribute</code>
      <code>getAttribute</code>
      <code>getAttribute</code>
      <code>getAttribute</code>
      <code>getAttribute</code>
      <code>getAttribute</code>
      <code>getAttribute</code>
      <code>getAttribute</code>
      <code>getAttribute</code>
      <code>getAttribute</code>
      <code>getAttribute</code>
      <code>getAttribute</code>
    </UndefinedMethod>
    <UnsafeInstantiation occurrences="1"/>
  </file>
  <file src="src/Reader/Http/LaminasHttpClientDecorator.php">
    <InvalidScalarArgument occurrences="1">
      <code>$value</code>
    </InvalidScalarArgument>
    <MissingReturnType occurrences="1">
      <code>injectHeaders</code>
    </MissingReturnType>
    <MixedAssignment occurrences="4">
      <code>$normalized[$name]</code>
      <code>$value</code>
      <code>$value</code>
      <code>$values</code>
    </MixedAssignment>
    <PossiblyInvalidMethodCall occurrences="1">
      <code>addHeaderLine</code>
    </PossiblyInvalidMethodCall>
    <PossiblyUndefinedMethod occurrences="1">
      <code>addHeaderLine</code>
    </PossiblyUndefinedMethod>
  </file>
  <file src="src/Reader/Http/Psr7ResponseDecorator.php">
    <MixedInferredReturnType occurrences="1">
      <code>getHeaderLine</code>
    </MixedInferredReturnType>
    <MixedReturnStatement occurrences="1">
      <code>$default</code>
    </MixedReturnStatement>
    <NullableReturnStatement occurrences="1">
      <code>$default</code>
    </NullableReturnStatement>
  </file>
  <file src="src/Reader/Http/Response.php">
    <DocblockTypeContradiction occurrences="1">
      <code>is_numeric($statusCode)</code>
    </DocblockTypeContradiction>
    <MissingReturnType occurrences="3">
      <code>validateBody</code>
      <code>validateHeaders</code>
      <code>validateStatusCode</code>
    </MissingReturnType>
    <MixedArgumentTypeCoercion occurrences="1">
      <code>$name</code>
    </MixedArgumentTypeCoercion>
    <MixedAssignment occurrences="3">
      <code>$normalized[strtolower($name)]</code>
      <code>$value</code>
      <code>$value</code>
    </MixedAssignment>
    <MixedInferredReturnType occurrences="1">
      <code>getHeaderLine</code>
    </MixedInferredReturnType>
    <MixedReturnStatement occurrences="1"/>
    <NullableReturnStatement occurrences="1"/>
    <PossiblyInvalidCast occurrences="1">
      <code>$body</code>
    </PossiblyInvalidCast>
  </file>
  <file src="src/Reader/Reader.php">
    <DocblockTypeContradiction occurrences="4">
      <code>$httpClient instanceof Http\ClientInterface</code>
      <code>$response instanceof Http\ResponseInterface</code>
      <code>is_string($string)</code>
      <code>static::$httpClient</code>
    </DocblockTypeContradiction>
    <ImplementedReturnTypeMismatch occurrences="1">
      <code>Feed\FeedInterface</code>
    </ImplementedReturnTypeMismatch>
    <InvalidDocblock occurrences="1">
      <code>public static function arrayUnique(array $array)</code>
    </InvalidDocblock>
    <InvalidReturnStatement occurrences="1">
      <code>$reader</code>
    </InvalidReturnStatement>
    <InvalidReturnType occurrences="1">
      <code>Feed\FeedInterface</code>
    </InvalidReturnType>
    <InvalidScalarArgument occurrences="1">
      <code>1</code>
    </InvalidScalarArgument>
    <MissingPropertyType occurrences="3">
      <code>$extensionManager</code>
      <code>$extensions</code>
      <code>$httpConditionalGet</code>
    </MissingPropertyType>
    <MissingReturnType occurrences="2">
      <code>arrayUnique</code>
      <code>setExtensionManager</code>
    </MissingReturnType>
    <MixedArgument occurrences="6">
      <code>$data</code>
      <code>$responseXml</code>
      <code>$value</code>
      <code>$version</code>
      <code>static::$extensions['entry']</code>
      <code>static::$extensions['feed']</code>
    </MixedArgument>
    <MixedArrayAccess occurrences="4">
      <code>static::$extensions['entry']</code>
      <code>static::$extensions['entry']</code>
      <code>static::$extensions['feed']</code>
      <code>static::$extensions['feed']</code>
    </MixedArrayAccess>
    <MixedArrayAssignment occurrences="2">
      <code>static::$extensions['entry']</code>
      <code>static::$extensions['feed']</code>
    </MixedArrayAssignment>
    <MixedAssignment occurrences="9">
      <code>$data</code>
      <code>$data</code>
      <code>$etag</code>
      <code>$lastModified</code>
      <code>$responseXml</code>
      <code>$value</code>
      <code>$value</code>
      <code>$value</code>
      <code>$version</code>
    </MixedAssignment>
    <MixedInferredReturnType occurrences="2">
      <code>ExtensionManagerInterface</code>
      <code>array</code>
    </MixedInferredReturnType>
    <MixedReturnStatement occurrences="2">
      <code>static::$extensionManager</code>
      <code>static::$extensions</code>
    </MixedReturnStatement>
    <RedundantConditionGivenDocblockType occurrences="4">
      <code>! is_string($string) || empty($trimmed)</code>
      <code>is_string($feed)</code>
      <code>is_string($string)</code>
      <code>static::$httpConditionalGet &amp;&amp; $cache</code>
    </RedundantConditionGivenDocblockType>
    <TooManyArguments occurrences="1">
      <code>get</code>
    </TooManyArguments>
    <UndefinedInterfaceMethod occurrences="2">
      <code>setOriginalSourceUri</code>
      <code>setOriginalSourceUri</code>
    </UndefinedInterfaceMethod>
    <UndefinedVariable occurrences="1">
      <code>$phpErrormsg</code>
    </UndefinedVariable>
  </file>
  <file src="src/Reader/StandaloneExtensionManager.php">
    <LessSpecificReturnStatement occurrences="1">
      <code>new $class()</code>
    </LessSpecificReturnStatement>
    <MissingPropertyType occurrences="1">
      <code>$extensions</code>
    </MissingPropertyType>
    <MissingReturnType occurrences="2">
      <code>add</code>
      <code>remove</code>
    </MissingReturnType>
    <MixedArgument occurrences="1">
      <code>$this-&gt;extensions</code>
    </MixedArgument>
    <MixedArrayAccess occurrences="2">
      <code>$this-&gt;extensions[$extension]</code>
      <code>$this-&gt;extensions[$name]</code>
    </MixedArrayAccess>
    <MixedArrayAssignment occurrences="1">
      <code>$this-&gt;extensions[$name]</code>
    </MixedArrayAssignment>
    <MixedAssignment occurrences="1">
      <code>$class</code>
    </MixedAssignment>
    <MixedMethodCall occurrences="1">
      <code>new $class()</code>
    </MixedMethodCall>
    <MoreSpecificReturnType occurrences="1">
      <code>Extension\AbstractEntry|Extension\AbstractFeed</code>
    </MoreSpecificReturnType>
    <RedundantConditionGivenDocblockType occurrences="1">
      <code>is_string($class)</code>
    </RedundantConditionGivenDocblockType>
  </file>
  <file src="src/Uri.php">
    <MissingPropertyType occurrences="1">
      <code>$validSchemes</code>
    </MissingPropertyType>
    <MixedArgument occurrences="1">
      <code>$this-&gt;validSchemes</code>
    </MixedArgument>
    <PossiblyNullPropertyAssignmentValue occurrences="8">
      <code>isset($parsed['fragment']) ? $parsed['fragment'] : null</code>
      <code>isset($parsed['host']) ? $parsed['host'] : null</code>
      <code>isset($parsed['pass']) ? $parsed['pass'] : null</code>
      <code>isset($parsed['path']) ? $parsed['path'] : null</code>
      <code>isset($parsed['port']) ? $parsed['port'] : null</code>
      <code>isset($parsed['query']) ? $parsed['query'] : null</code>
      <code>isset($parsed['scheme']) ? $parsed['scheme'] : null</code>
      <code>isset($parsed['user']) ? $parsed['user'] : null</code>
    </PossiblyNullPropertyAssignmentValue>
    <PropertyNotSetInConstructor occurrences="9">
      <code>$fragment</code>
      <code>$host</code>
      <code>$pass</code>
      <code>$path</code>
      <code>$port</code>
      <code>$query</code>
      <code>$scheme</code>
      <code>$user</code>
      <code>$valid</code>
    </PropertyNotSetInConstructor>
    <RedundantConditionGivenDocblockType occurrences="1">
      <code>$this-&gt;scheme !== null</code>
    </RedundantConditionGivenDocblockType>
    <UnsafeInstantiation occurrences="1">
      <code>new static($uri)</code>
    </UnsafeInstantiation>
  </file>
  <file src="src/Writer/AbstractFeed.php">
    <DocblockTypeContradiction occurrences="13">
      <code>is_string($copyright)</code>
      <code>is_string($description)</code>
      <code>is_string($encoding)</code>
      <code>is_string($id)</code>
      <code>is_string($language)</code>
      <code>is_string($link)</code>
      <code>is_string($link)</code>
      <code>is_string($name)</code>
      <code>is_string($title)</code>
      <code>is_string($uri)</code>
      <code>is_string($url)</code>
      <code>is_string($url)</code>
      <code>is_string($version)</code>
    </DocblockTypeContradiction>
    <InvalidDocblock occurrences="3">
      <code>public function setDateCreated($date = null)</code>
      <code>public function setDateModified($date = null)</code>
      <code>public function setLastBuildDate($date = null)</code>
    </InvalidDocblock>
    <MissingParamType occurrences="3">
      <code>$date</code>
      <code>$date</code>
      <code>$date</code>
    </MissingParamType>
    <MissingReturnType occurrences="3">
      <code>setDateCreated</code>
      <code>setDateModified</code>
      <code>setLastBuildDate</code>
    </MissingReturnType>
    <MixedArgument occurrences="6">
      <code>$author</code>
      <code>$category</code>
      <code>$ext</code>
      <code>$ext</code>
      <code>$ext</code>
      <code>$url</code>
    </MixedArgument>
    <MixedArrayAssignment occurrences="4">
      <code>$this-&gt;data['authors'][]</code>
      <code>$this-&gt;data['categories'][]</code>
      <code>$this-&gt;data['feedLinks'][strtolower($type)]</code>
      <code>$this-&gt;data['hubs'][]</code>
    </MixedArrayAssignment>
    <MixedArrayOffset occurrences="1">
      <code>$this-&gt;extensions[$ext]</code>
    </MixedArrayOffset>
    <MixedAssignment occurrences="5">
      <code>$author</code>
      <code>$category</code>
      <code>$ext</code>
      <code>$exts</code>
      <code>$url</code>
    </MixedAssignment>
    <MixedInferredReturnType occurrences="18">
      <code>null|array</code>
      <code>null|array</code>
      <code>null|string</code>
      <code>null|string</code>
      <code>null|string</code>
      <code>null|string</code>
      <code>null|string</code>
      <code>null|string</code>
      <code>null|string</code>
      <code>null|string</code>
      <code>null|string</code>
      <code>null|string</code>
      <code>null|string</code>
      <code>null|string</code>
      <code>null|string</code>
      <code>null|string</code>
      <code>null|string</code>
      <code>null|string</code>
    </MixedInferredReturnType>
    <MixedMethodCall occurrences="1">
      <code>setEncoding</code>
    </MixedMethodCall>
    <MixedPropertyTypeCoercion occurrences="1">
      <code>$this-&gt;extensions</code>
    </MixedPropertyTypeCoercion>
    <MixedReturnStatement occurrences="18">
      <code>$this-&gt;data['authors']</code>
      <code>$this-&gt;data['authors'][$index]</code>
      <code>$this-&gt;data['baseUrl']</code>
      <code>$this-&gt;data['categories']</code>
      <code>$this-&gt;data['copyright']</code>
      <code>$this-&gt;data['dateCreated']</code>
      <code>$this-&gt;data['dateModified']</code>
      <code>$this-&gt;data['description']</code>
      <code>$this-&gt;data['encoding']</code>
      <code>$this-&gt;data['feedLinks']</code>
      <code>$this-&gt;data['generator']</code>
      <code>$this-&gt;data['hubs']</code>
      <code>$this-&gt;data['id']</code>
      <code>$this-&gt;data['image']</code>
      <code>$this-&gt;data['language']</code>
      <code>$this-&gt;data['lastBuildDate']</code>
      <code>$this-&gt;data['link']</code>
      <code>$this-&gt;data['title']</code>
    </MixedReturnStatement>
    <PropertyNotSetInConstructor occurrences="2">
      <code>$extensions</code>
      <code>$type</code>
    </PropertyNotSetInConstructor>
    <RedundantConditionGivenDocblockType occurrences="12">
      <code>empty($id) || ! is_string($id) || ! Uri::factory($id)-&gt;isValid()</code>
      <code>empty($link) || ! is_string($link) || ! Uri::factory($link)-&gt;isValid()</code>
      <code>empty($link) || ! is_string($link) || ! Uri::factory($link)-&gt;isValid()</code>
      <code>empty($uri) || ! is_string($uri) || ! Uri::factory($uri)-&gt;isValid()</code>
      <code>empty($url) || ! is_string($url) || ! Uri::factory($url)-&gt;isValid()</code>
      <code>empty($url) || ! is_string($url) || ! Uri::factory($url)-&gt;isValid()</code>
      <code>is_string($id)</code>
      <code>is_string($link)</code>
      <code>is_string($link)</code>
      <code>is_string($uri)</code>
      <code>is_string($url)</code>
      <code>is_string($url)</code>
    </RedundantConditionGivenDocblockType>
  </file>
  <file src="src/Writer/Deleted.php">
    <DocblockTypeContradiction occurrences="2">
      <code>$date instanceof DateTimeInterface</code>
      <code>is_string($reference)</code>
    </DocblockTypeContradiction>
    <InvalidDocblock occurrences="1">
      <code>public function setEncoding($encoding)</code>
    </InvalidDocblock>
    <MissingConstructor occurrences="1">
      <code>$type</code>
    </MissingConstructor>
    <MissingParamType occurrences="1">
      <code>$encoding</code>
    </MissingParamType>
    <MissingReturnType occurrences="1">
      <code>setEncoding</code>
    </MissingReturnType>
    <MixedInferredReturnType occurrences="5">
      <code>DateTime</code>
      <code>null|string</code>
      <code>null|string</code>
      <code>null|string</code>
      <code>string</code>
    </MixedInferredReturnType>
    <MixedReturnStatement occurrences="5">
      <code>$this-&gt;data['by']</code>
      <code>$this-&gt;data['comment']</code>
      <code>$this-&gt;data['encoding']</code>
      <code>$this-&gt;data['reference']</code>
      <code>$this-&gt;data['when']</code>
    </MixedReturnStatement>
  </file>
  <file src="src/Writer/Entry.php">
    <DocblockTypeContradiction occurrences="11">
      <code>$date instanceof DateTimeInterface</code>
      <code>$date instanceof DateTimeInterface</code>
      <code>is_numeric($count)</code>
      <code>is_string($content)</code>
      <code>is_string($copyright)</code>
      <code>is_string($description)</code>
      <code>is_string($encoding)</code>
      <code>is_string($id)</code>
      <code>is_string($link)</code>
      <code>is_string($link)</code>
      <code>is_string($title)</code>
    </DocblockTypeContradiction>
    <MixedArgument occurrences="5">
      <code>$author</code>
      <code>$category</code>
      <code>$enclosure['uri']</code>
      <code>$ext</code>
      <code>$link</code>
    </MixedArgument>
    <MixedArrayAssignment occurrences="3">
      <code>$this-&gt;data['authors'][]</code>
      <code>$this-&gt;data['categories'][]</code>
      <code>$this-&gt;data['commentFeedLinks'][]</code>
    </MixedArrayAssignment>
    <MixedArrayOffset occurrences="1">
      <code>$this-&gt;extensions[$ext]</code>
    </MixedArrayOffset>
    <MixedAssignment occurrences="6">
      <code>$author</code>
      <code>$category</code>
      <code>$ext</code>
      <code>$extension</code>
      <code>$exts</code>
      <code>$link</code>
    </MixedAssignment>
    <MixedInferredReturnType occurrences="18">
      <code>Source</code>
      <code>array</code>
      <code>array</code>
      <code>array</code>
      <code>int</code>
      <code>null|string</code>
      <code>null|string</code>
      <code>null|string</code>
      <code>object</code>
      <code>string</code>
      <code>string</code>
      <code>string</code>
      <code>string</code>
      <code>string</code>
      <code>string</code>
      <code>string</code>
      <code>string</code>
      <code>string</code>
    </MixedInferredReturnType>
    <MixedMethodCall occurrences="1">
      <code>setEncoding</code>
    </MixedMethodCall>
    <MixedReturnStatement occurrences="18">
      <code>$this-&gt;data['authors']</code>
      <code>$this-&gt;data['categories']</code>
      <code>$this-&gt;data['commentCount']</code>
      <code>$this-&gt;data['commentFeedLinks']</code>
      <code>$this-&gt;data['commentLink']</code>
      <code>$this-&gt;data['content']</code>
      <code>$this-&gt;data['copyright']</code>
      <code>$this-&gt;data['dateCreated']</code>
      <code>$this-&gt;data['dateModified']</code>
      <code>$this-&gt;data['description']</code>
      <code>$this-&gt;data['enclosure']</code>
      <code>$this-&gt;data['encoding']</code>
      <code>$this-&gt;data['id']</code>
      <code>$this-&gt;data['link']</code>
      <code>$this-&gt;data['links']</code>
      <code>$this-&gt;data['source']</code>
      <code>$this-&gt;data['title']</code>
      <code>$this-&gt;extensions[$name . '\\Entry']</code>
    </MixedReturnStatement>
    <PossiblyNullArgument occurrences="1">
      <code>$this-&gt;getEncoding()</code>
    </PossiblyNullArgument>
    <PropertyNotSetInConstructor occurrences="1">
      <code>$type</code>
    </PropertyNotSetInConstructor>
    <RedundantConditionGivenDocblockType occurrences="6">
      <code>! is_numeric($count) || (int) $count != $count</code>
      <code>empty($link) || ! is_string($link) || ! Uri::factory($link)-&gt;isValid()</code>
      <code>empty($link) || ! is_string($link) || ! Uri::factory($link)-&gt;isValid()</code>
      <code>is_numeric($count)</code>
      <code>is_string($link)</code>
      <code>is_string($link)</code>
    </RedundantConditionGivenDocblockType>
  </file>
  <file src="src/Writer/Extension/AbstractRenderer.php">
    <ImplementedReturnTypeMismatch occurrences="2">
      <code>$this</code>
      <code>$this</code>
    </ImplementedReturnTypeMismatch>
    <MissingConstructor occurrences="44">
      <code>$base</code>
      <code>$base</code>
      <code>$base</code>
      <code>$base</code>
      <code>$base</code>
      <code>$base</code>
      <code>$base</code>
      <code>$base</code>
      <code>$base</code>
      <code>$base</code>
      <code>$base</code>
      <code>$dom</code>
      <code>$dom</code>
      <code>$dom</code>
      <code>$dom</code>
      <code>$dom</code>
      <code>$dom</code>
      <code>$dom</code>
      <code>$dom</code>
      <code>$dom</code>
      <code>$dom</code>
      <code>$dom</code>
      <code>$rootElement</code>
      <code>$rootElement</code>
      <code>$rootElement</code>
      <code>$rootElement</code>
      <code>$rootElement</code>
      <code>$rootElement</code>
      <code>$rootElement</code>
      <code>$rootElement</code>
      <code>$rootElement</code>
      <code>$rootElement</code>
      <code>$rootElement</code>
      <code>$type</code>
      <code>$type</code>
      <code>$type</code>
      <code>$type</code>
      <code>$type</code>
      <code>$type</code>
      <code>$type</code>
      <code>$type</code>
      <code>$type</code>
      <code>$type</code>
      <code>$type</code>
    </MissingConstructor>
  </file>
  <file src="src/Writer/Extension/Atom/Renderer/Feed.php">
    <MixedArgument occurrences="4">
      <code>$href</code>
      <code>$hubUrl</code>
      <code>$type</code>
      <code>$type</code>
    </MixedArgument>
    <MixedAssignment occurrences="4">
      <code>$flinks</code>
      <code>$href</code>
      <code>$hubUrl</code>
      <code>$hubs</code>
    </MixedAssignment>
    <MixedMethodCall occurrences="2">
      <code>getFeedLinks</code>
      <code>getHubs</code>
    </MixedMethodCall>
  </file>
  <file src="src/Writer/Extension/Content/Renderer/Entry.php">
    <MixedArgument occurrences="1">
      <code>$content</code>
    </MixedArgument>
    <MixedAssignment occurrences="1">
      <code>$content</code>
    </MixedAssignment>
    <MixedMethodCall occurrences="1">
      <code>getContent</code>
    </MixedMethodCall>
  </file>
  <file src="src/Writer/Extension/DublinCore/Renderer/Entry.php">
    <MixedArgument occurrences="2">
      <code>$data</code>
      <code>$data['name']</code>
    </MixedArgument>
    <MixedArrayAccess occurrences="1">
      <code>$data['name']</code>
    </MixedArrayAccess>
    <MixedAssignment occurrences="2">
      <code>$authors</code>
      <code>$data</code>
    </MixedAssignment>
    <MixedMethodCall occurrences="1">
      <code>getAuthors</code>
    </MixedMethodCall>
  </file>
  <file src="src/Writer/Extension/DublinCore/Renderer/Feed.php">
    <MixedArgument occurrences="2">
      <code>$data</code>
      <code>$data['name']</code>
    </MixedArgument>
    <MixedArrayAccess occurrences="1">
      <code>$data['name']</code>
    </MixedArrayAccess>
    <MixedAssignment occurrences="2">
      <code>$authors</code>
      <code>$data</code>
    </MixedAssignment>
    <MixedMethodCall occurrences="1">
      <code>getAuthors</code>
    </MixedMethodCall>
  </file>
  <file src="src/Writer/Extension/GooglePlayPodcast/Entry.php">
    <InvalidDocblock occurrences="1">
      <code>public function setPlayPodcastBlock($value)</code>
    </InvalidDocblock>
    <MissingParamType occurrences="1">
      <code>$value</code>
    </MissingParamType>
    <MissingReturnType occurrences="1">
      <code>setPlayPodcastBlock</code>
    </MissingReturnType>
    <MixedArgument occurrences="3">
      <code>$value</code>
      <code>$value</code>
      <code>$value</code>
    </MixedArgument>
    <RedundantConditionGivenDocblockType occurrences="3">
      <code>in_array($value, ['yes', 'no', 'clean'], true)</code>
      <code>in_array($value, ['yes', 'no', 'clean'], true)</code>
      <code>in_array($value, ['yes', 'no', 'clean'], true)</code>
    </RedundantConditionGivenDocblockType>
  </file>
  <file src="src/Writer/Extension/GooglePlayPodcast/Feed.php">
    <DocblockTypeContradiction occurrences="1">
      <code>is_string($value)</code>
    </DocblockTypeContradiction>
    <InvalidDocblock occurrences="1">
      <code>public function setPlayPodcastBlock($value)</code>
    </InvalidDocblock>
    <MissingParamType occurrences="1">
      <code>$value</code>
    </MissingParamType>
    <MissingReturnType occurrences="1">
      <code>setPlayPodcastBlock</code>
    </MissingReturnType>
    <MixedArgument occurrences="6">
      <code>$val</code>
      <code>$value</code>
      <code>$value</code>
      <code>$value</code>
      <code>$value</code>
      <code>$value</code>
    </MixedArgument>
    <MixedArgumentTypeCoercion occurrences="1">
      <code>$key</code>
    </MixedArgumentTypeCoercion>
    <MixedArrayAssignment occurrences="4">
      <code>$this-&gt;data['authors'][]</code>
      <code>$this-&gt;data['categories'][$key]</code>
      <code>$this-&gt;data['categories'][$key]</code>
      <code>$this-&gt;data['categories'][]</code>
    </MixedArrayAssignment>
    <MixedAssignment occurrences="3">
      <code>$val</code>
      <code>$value</code>
      <code>$value</code>
    </MixedAssignment>
    <RedundantConditionGivenDocblockType occurrences="5">
      <code>! is_string($value) || ! Uri::factory($value)-&gt;isValid()</code>
      <code>in_array($value, ['yes', 'no', 'clean'], true)</code>
      <code>in_array($value, ['yes', 'no', 'clean'], true)</code>
      <code>in_array($value, ['yes', 'no', 'clean'], true)</code>
      <code>is_string($value)</code>
    </RedundantConditionGivenDocblockType>
  </file>
  <file src="src/Writer/Extension/GooglePlayPodcast/Renderer/Entry.php">
    <MixedArgument occurrences="3">
      <code>$block</code>
      <code>$description</code>
      <code>$explicit</code>
    </MixedArgument>
    <MixedAssignment occurrences="3">
      <code>$block</code>
      <code>$description</code>
      <code>$explicit</code>
    </MixedAssignment>
    <MixedMethodCall occurrences="3">
      <code>getPlayPodcastBlock</code>
      <code>getPlayPodcastDescription</code>
      <code>getPlayPodcastExplicit</code>
    </MixedMethodCall>
  </file>
  <file src="src/Writer/Extension/GooglePlayPodcast/Renderer/Feed.php">
    <MixedArgument occurrences="8">
      <code>$author</code>
      <code>$block</code>
      <code>$cat</code>
      <code>$description</code>
      <code>$explicit</code>
      <code>$image</code>
      <code>$key</code>
      <code>$subcat</code>
    </MixedArgument>
    <MixedAssignment occurrences="9">
      <code>$author</code>
      <code>$authors</code>
      <code>$block</code>
      <code>$cat</code>
      <code>$cats</code>
      <code>$description</code>
      <code>$explicit</code>
      <code>$image</code>
      <code>$subcat</code>
    </MixedAssignment>
    <MixedMethodCall occurrences="6">
      <code>getPlayPodcastAuthors</code>
      <code>getPlayPodcastBlock</code>
      <code>getPlayPodcastCategories</code>
      <code>getPlayPodcastDescription</code>
      <code>getPlayPodcastExplicit</code>
      <code>getPlayPodcastImage</code>
    </MixedMethodCall>
  </file>
  <file src="src/Writer/Extension/ITunes/Entry.php">
    <DocblockTypeContradiction occurrences="11">
      <code>! is_bool($value) &amp;&amp; ! in_array($value, ['yes', 'no', 'clean'])</code>
      <code>is_bool($status)</code>
      <code>is_bool($value)</code>
      <code>is_float($number)</code>
      <code>is_float($number)</code>
      <code>is_numeric($number)</code>
      <code>is_numeric($number)</code>
      <code>is_object($number)</code>
      <code>is_object($number)</code>
      <code>is_object($type)</code>
      <code>is_string($value)</code>
    </DocblockTypeContradiction>
    <InvalidDocblock occurrences="1">
      <code>public function setItunesBlock($value)</code>
    </InvalidDocblock>
    <MissingParamType occurrences="1">
      <code>$value</code>
    </MissingParamType>
    <MissingReturnType occurrences="1">
      <code>setItunesBlock</code>
    </MissingReturnType>
    <MixedArgument occurrences="7">
      <code>$number</code>
      <code>$number</code>
      <code>$type</code>
      <code>$value</code>
      <code>$value</code>
      <code>$value</code>
      <code>$value</code>
    </MixedArgument>
    <MixedArrayAssignment occurrences="1">
      <code>$this-&gt;data['authors'][]</code>
    </MixedArrayAssignment>
    <MixedAssignment occurrences="1">
      <code>$value</code>
    </MixedAssignment>
    <RedundantConditionGivenDocblockType occurrences="9">
      <code>! is_numeric($number) || is_float($number)</code>
      <code>! is_numeric($number) || is_float($number)</code>
      <code>! is_string($value) || ! Uri::factory($value)-&gt;isValid()</code>
      <code>gettype($number)</code>
      <code>gettype($number)</code>
      <code>is_numeric($number)</code>
      <code>is_numeric($number)</code>
      <code>is_string($value)</code>
      <code>var_export($type, true)</code>
    </RedundantConditionGivenDocblockType>
  </file>
  <file src="src/Writer/Extension/ITunes/Feed.php">
    <DocblockTypeContradiction occurrences="5">
      <code>! is_bool($value) &amp;&amp; ! in_array($value, ['yes', 'no', 'clean'])</code>
      <code>is_bool($status)</code>
      <code>is_bool($value)</code>
      <code>is_object($type)</code>
      <code>is_string($value)</code>
    </DocblockTypeContradiction>
    <InvalidDocblock occurrences="1">
      <code>public function setItunesBlock($value)</code>
    </InvalidDocblock>
    <MissingParamType occurrences="1">
      <code>$value</code>
    </MissingParamType>
    <MissingReturnType occurrences="1">
      <code>setItunesBlock</code>
    </MissingReturnType>
    <MixedArgument occurrences="10">
      <code>$type</code>
      <code>$val</code>
      <code>$value</code>
      <code>$value</code>
      <code>$value</code>
      <code>$value</code>
      <code>$value</code>
      <code>$value</code>
      <code>$value['email']</code>
      <code>$value['name']</code>
    </MixedArgument>
    <MixedArgumentTypeCoercion occurrences="1">
      <code>$key</code>
    </MixedArgumentTypeCoercion>
    <MixedArrayAssignment occurrences="5">
      <code>$this-&gt;data['authors'][]</code>
      <code>$this-&gt;data['categories'][$key]</code>
      <code>$this-&gt;data['categories'][$key]</code>
      <code>$this-&gt;data['categories'][]</code>
      <code>$this-&gt;data['owners'][]</code>
    </MixedArrayAssignment>
    <MixedAssignment occurrences="4">
      <code>$val</code>
      <code>$value</code>
      <code>$value</code>
      <code>$value</code>
    </MixedAssignment>
    <RedundantConditionGivenDocblockType occurrences="3">
      <code>! is_string($value) || ! Uri::factory($value)-&gt;isValid()</code>
      <code>is_string($value)</code>
      <code>var_export($type, true)</code>
    </RedundantConditionGivenDocblockType>
  </file>
  <file src="src/Writer/Extension/ITunes/Renderer/Entry.php">
    <MixedArgument occurrences="12">
      <code>$author</code>
      <code>$block</code>
      <code>$duration</code>
      <code>$episode</code>
      <code>$explicit</code>
      <code>$image</code>
      <code>$keywords</code>
      <code>$season</code>
      <code>$subtitle</code>
      <code>$summary</code>
      <code>$title</code>
      <code>$type</code>
    </MixedArgument>
    <MixedAssignment occurrences="14">
      <code>$author</code>
      <code>$authors</code>
      <code>$block</code>
      <code>$duration</code>
      <code>$episode</code>
      <code>$explicit</code>
      <code>$image</code>
      <code>$keywords</code>
      <code>$season</code>
      <code>$status</code>
      <code>$subtitle</code>
      <code>$summary</code>
      <code>$title</code>
      <code>$type</code>
    </MixedAssignment>
    <MixedMethodCall occurrences="13">
      <code>getItunesAuthors</code>
      <code>getItunesBlock</code>
      <code>getItunesDuration</code>
      <code>getItunesEpisode</code>
      <code>getItunesEpisodeType</code>
      <code>getItunesExplicit</code>
      <code>getItunesImage</code>
      <code>getItunesIsClosedCaptioned</code>
      <code>getItunesKeywords</code>
      <code>getItunesSeason</code>
      <code>getItunesSubtitle</code>
      <code>getItunesSummary</code>
      <code>getItunesTitle</code>
    </MixedMethodCall>
  </file>
  <file src="src/Writer/Extension/ITunes/Renderer/Feed.php">
    <MixedArgument occurrences="15">
      <code>$author</code>
      <code>$block</code>
      <code>$cat</code>
      <code>$duration</code>
      <code>$explicit</code>
      <code>$image</code>
      <code>$key</code>
      <code>$keywords</code>
      <code>$owner['email']</code>
      <code>$owner['name']</code>
      <code>$subcat</code>
      <code>$subtitle</code>
      <code>$summary</code>
      <code>$type</code>
      <code>$url</code>
    </MixedArgument>
    <MixedArrayAccess occurrences="2">
      <code>$owner['email']</code>
      <code>$owner['name']</code>
    </MixedArrayAccess>
    <MixedAssignment occurrences="17">
      <code>$author</code>
      <code>$authors</code>
      <code>$block</code>
      <code>$cat</code>
      <code>$cats</code>
      <code>$duration</code>
      <code>$explicit</code>
      <code>$image</code>
      <code>$keywords</code>
      <code>$owner</code>
      <code>$owners</code>
      <code>$status</code>
      <code>$subcat</code>
      <code>$subtitle</code>
      <code>$summary</code>
      <code>$type</code>
      <code>$url</code>
    </MixedAssignment>
    <MixedMethodCall occurrences="13">
      <code>getItunesAuthors</code>
      <code>getItunesBlock</code>
      <code>getItunesCategories</code>
      <code>getItunesComplete</code>
      <code>getItunesDuration</code>
      <code>getItunesExplicit</code>
      <code>getItunesImage</code>
      <code>getItunesKeywords</code>
      <code>getItunesNewFeedUrl</code>
      <code>getItunesOwners</code>
      <code>getItunesSubtitle</code>
      <code>getItunesSummary</code>
      <code>getItunesType</code>
    </MixedMethodCall>
  </file>
  <file src="src/Writer/Extension/Slash/Renderer/Entry.php">
    <MixedAssignment occurrences="2">
      <code>$count</code>
      <code>$tcount-&gt;nodeValue</code>
    </MixedAssignment>
    <MixedMethodCall occurrences="1">
      <code>getCommentCount</code>
    </MixedMethodCall>
  </file>
  <file src="src/Writer/Extension/Threading/Renderer/Entry.php">
    <MixedArgument occurrences="4">
      <code>$count</code>
      <code>$count</code>
      <code>$link</code>
      <code>$link['uri']</code>
    </MixedArgument>
    <MixedArrayAccess occurrences="2">
      <code>$link['type']</code>
      <code>$link['uri']</code>
    </MixedArrayAccess>
    <MixedAssignment occurrences="7">
      <code>$count</code>
      <code>$count</code>
      <code>$count</code>
      <code>$link</code>
      <code>$link</code>
      <code>$links</code>
      <code>$tcount-&gt;nodeValue</code>
    </MixedAssignment>
    <MixedMethodCall occurrences="5">
      <code>getCommentCount</code>
      <code>getCommentCount</code>
      <code>getCommentCount</code>
      <code>getCommentFeedLinks</code>
      <code>getCommentLink</code>
    </MixedMethodCall>
    <MixedOperand occurrences="1">
      <code>$link['type']</code>
    </MixedOperand>
  </file>
  <file src="src/Writer/Extension/WellFormedWeb/Renderer/Entry.php">
    <MixedArgument occurrences="1">
      <code>$link['uri']</code>
    </MixedArgument>
    <MixedArrayAccess occurrences="2">
      <code>$link['type']</code>
      <code>$link['uri']</code>
    </MixedArrayAccess>
    <MixedAssignment occurrences="2">
      <code>$link</code>
      <code>$links</code>
    </MixedAssignment>
    <MixedMethodCall occurrences="1">
      <code>getCommentFeedLinks</code>
    </MixedMethodCall>
  </file>
  <file src="src/Writer/ExtensionManager.php">
    <MissingPropertyType occurrences="1">
      <code>$pluginManager</code>
    </MissingPropertyType>
    <MixedArgument occurrences="1">
      <code>$this-&gt;pluginManager</code>
    </MixedArgument>
    <MixedInferredReturnType occurrences="2">
      <code>Extension\AbstractRenderer</code>
      <code>bool</code>
    </MixedInferredReturnType>
    <MixedMethodCall occurrences="2">
      <code>get</code>
      <code>has</code>
    </MixedMethodCall>
    <MixedReturnStatement occurrences="2">
      <code>$this-&gt;pluginManager-&gt;get($name)</code>
      <code>$this-&gt;pluginManager-&gt;has($name)</code>
    </MixedReturnStatement>
  </file>
  <file src="src/Writer/ExtensionPluginManager.php">
    <MixedArgument occurrences="2">
      <code>$plugin</code>
      <code>$plugin</code>
    </MixedArgument>
  </file>
  <file src="src/Writer/Feed.php">
    <InvalidStringClass occurrences="1">
      <code>new $renderClass($this)</code>
    </InvalidStringClass>
    <MixedArrayOffset occurrences="1">
      <code>$this-&gt;entries[$this-&gt;key()]</code>
    </MixedArrayOffset>
    <MixedAssignment occurrences="2">
      <code>$entries[$timestamp]</code>
      <code>$entry</code>
    </MixedAssignment>
    <MixedInferredReturnType occurrences="3">
      <code>Entry</code>
      <code>Entry</code>
      <code>string</code>
    </MixedInferredReturnType>
    <MixedMethodCall occurrences="9">
      <code>getDateCreated</code>
      <code>getDateCreated</code>
      <code>getDateModified</code>
      <code>getDateModified</code>
      <code>getTimestamp</code>
      <code>getTimestamp</code>
      <code>ignoreExceptions</code>
      <code>render</code>
      <code>saveXml</code>
    </MixedMethodCall>
    <MixedReturnStatement occurrences="3">
      <code>$renderer-&gt;render()-&gt;saveXml()</code>
      <code>$this-&gt;entries[$index]</code>
      <code>$this-&gt;entries[$this-&gt;key()]</code>
    </MixedReturnStatement>
    <PossiblyNullArgument occurrences="1">
      <code>$this-&gt;getEncoding()</code>
    </PossiblyNullArgument>
    <PropertyNotSetInConstructor occurrences="2">
      <code>Feed</code>
      <code>Feed</code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="src/Writer/FeedFactory.php">
    <DocblockTypeContradiction occurrences="2">
      <code>! is_array($data) &amp;&amp; ! $data instanceof Traversable</code>
      <code>! is_array($entries) &amp;&amp; ! $entries instanceof Traversable</code>
    </DocblockTypeContradiction>
    <MixedArgument occurrences="5">
      <code>$key</code>
      <code>$key</code>
      <code>$value</code>
      <code>$value['link']</code>
      <code>$value['type']</code>
    </MixedArgument>
    <MixedAssignment occurrences="3">
      <code>$data</code>
      <code>$value</code>
      <code>$value</code>
    </MixedAssignment>
  </file>
  <file src="src/Writer/Renderer/AbstractRenderer.php">
    <DocblockTypeContradiction occurrences="1">
      <code>is_bool($bool)</code>
    </DocblockTypeContradiction>
    <MissingReturnType occurrences="2">
      <code>setRootElement</code>
      <code>setType</code>
    </MissingReturnType>
    <MixedArgument occurrences="1">
      <code>$extension</code>
    </MixedArgument>
    <MixedArrayOffset occurrences="1">
      <code>$this-&gt;extensions[$extension]</code>
    </MixedArrayOffset>
    <MixedAssignment occurrences="3">
      <code>$extension</code>
      <code>$exts</code>
      <code>$plugin</code>
    </MixedAssignment>
    <MixedMethodCall occurrences="2">
      <code>setDataContainer</code>
      <code>setEncoding</code>
    </MixedMethodCall>
    <PropertyNotSetInConstructor occurrences="2">
      <code>$dom</code>
      <code>$rootElement</code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="src/Writer/Renderer/Entry/Atom.php">
    <ImplementedReturnTypeMismatch occurrences="1">
      <code>$this</code>
    </ImplementedReturnTypeMismatch>
    <InvalidArgument occurrences="1">
      <code>$container</code>
    </InvalidArgument>
    <InvalidCast occurrences="1">
      <code>$tidy</code>
    </InvalidCast>
    <InvalidIterator occurrences="1">
      <code>$categories</code>
    </InvalidIterator>
    <InvalidMethodCall occurrences="2">
      <code>format</code>
      <code>format</code>
    </InvalidMethodCall>
    <InvalidScalarArgument occurrences="1">
      <code>$deep</code>
    </InvalidScalarArgument>
    <MissingReturnType occurrences="1">
      <code>_setLink</code>
    </MissingReturnType>
    <MixedArgument occurrences="16">
      <code>$cat['label']</code>
      <code>$cat['scheme']</code>
      <code>$cat['term']</code>
      <code>$cat['term']</code>
      <code>$content</code>
      <code>$data</code>
      <code>$data</code>
      <code>$data['email']</code>
      <code>$data['length']</code>
      <code>$data['name']</code>
      <code>$data['type']</code>
      <code>$data['uri']</code>
      <code>$data['uri']</code>
      <code>$source</code>
      <code>$this-&gt;getDataContainer()-&gt;getDateCreated()-&gt;format(DateTime::ATOM)</code>
      <code>$this-&gt;getDataContainer()-&gt;getDateModified()-&gt;format(DateTime::ATOM)</code>
    </MixedArgument>
    <MixedArrayAccess occurrences="10">
      <code>$cat['label']</code>
      <code>$cat['scheme']</code>
      <code>$cat['term']</code>
      <code>$cat['term']</code>
      <code>$data['email']</code>
      <code>$data['length']</code>
      <code>$data['name']</code>
      <code>$data['type']</code>
      <code>$data['uri']</code>
      <code>$data['uri']</code>
    </MixedArrayAccess>
    <MixedAssignment occurrences="6">
      <code>$cat</code>
      <code>$content</code>
      <code>$data</code>
      <code>$data</code>
      <code>$ext</code>
      <code>$source</code>
    </MixedAssignment>
    <MixedMethodCall occurrences="4">
      <code>render</code>
      <code>setDomDocument</code>
      <code>setRootElement</code>
      <code>setType</code>
    </MixedMethodCall>
    <PossiblyNullArgument occurrences="9">
      <code>$this-&gt;container-&gt;getEncoding()</code>
      <code>$this-&gt;getDataContainer()-&gt;getDescription()</code>
      <code>$this-&gt;getDataContainer()-&gt;getId()</code>
      <code>$this-&gt;getDataContainer()-&gt;getId()</code>
      <code>$this-&gt;getDataContainer()-&gt;getId()</code>
      <code>$this-&gt;getDataContainer()-&gt;getId()</code>
      <code>$this-&gt;getDataContainer()-&gt;getLink()</code>
      <code>$this-&gt;getDataContainer()-&gt;getLink()</code>
      <code>$this-&gt;getDataContainer()-&gt;getTitle()</code>
    </PossiblyNullArgument>
    <PossiblyNullReference occurrences="2">
      <code>format</code>
      <code>format</code>
    </PossiblyNullReference>
    <PropertyNotSetInConstructor occurrences="2">
      <code>Atom</code>
      <code>Atom</code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="src/Writer/Renderer/Entry/Atom/Deleted.php">
    <ImplementedReturnTypeMismatch occurrences="1">
      <code>$this</code>
    </ImplementedReturnTypeMismatch>
    <InvalidArgument occurrences="1">
      <code>$container</code>
    </InvalidArgument>
    <MixedArgument occurrences="8">
      <code>$data</code>
      <code>$data</code>
      <code>$data['email']</code>
      <code>$data['name']</code>
      <code>$data['uri']</code>
      <code>$this-&gt;container-&gt;getReference()</code>
      <code>$this-&gt;container-&gt;getWhen()-&gt;format(DateTime::ATOM)</code>
      <code>$this-&gt;getDataContainer()-&gt;getComment()</code>
    </MixedArgument>
    <MixedArrayAccess occurrences="3">
      <code>$data['email']</code>
      <code>$data['name']</code>
      <code>$data['uri']</code>
    </MixedArrayAccess>
    <MixedAssignment occurrences="1">
      <code>$data</code>
    </MixedAssignment>
    <MixedMethodCall occurrences="1">
      <code>format</code>
    </MixedMethodCall>
    <PossiblyNullArgument occurrences="1">
      <code>$this-&gt;container-&gt;getEncoding()</code>
    </PossiblyNullArgument>
    <PropertyNotSetInConstructor occurrences="2">
      <code>Deleted</code>
      <code>Deleted</code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="src/Writer/Renderer/Entry/AtomDeleted.php">
    <ImplementedReturnTypeMismatch occurrences="1">
      <code>$this</code>
    </ImplementedReturnTypeMismatch>
    <InvalidArgument occurrences="1">
      <code>$container</code>
    </InvalidArgument>
    <MixedArgument occurrences="8">
      <code>$data</code>
      <code>$data</code>
      <code>$data['email']</code>
      <code>$data['name']</code>
      <code>$data['uri']</code>
      <code>$this-&gt;container-&gt;getReference()</code>
      <code>$this-&gt;container-&gt;getWhen()-&gt;format(DateTime::ATOM)</code>
      <code>$this-&gt;getDataContainer()-&gt;getComment()</code>
    </MixedArgument>
    <MixedArrayAccess occurrences="3">
      <code>$data['email']</code>
      <code>$data['name']</code>
      <code>$data['uri']</code>
    </MixedArrayAccess>
    <MixedAssignment occurrences="1">
      <code>$data</code>
    </MixedAssignment>
    <MixedMethodCall occurrences="1">
      <code>format</code>
    </MixedMethodCall>
    <PossiblyNullArgument occurrences="1">
      <code>$this-&gt;container-&gt;getEncoding()</code>
    </PossiblyNullArgument>
    <PropertyNotSetInConstructor occurrences="2">
      <code>AtomDeleted</code>
      <code>AtomDeleted</code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="src/Writer/Renderer/Entry/Rss.php">
    <ImplementedReturnTypeMismatch occurrences="1">
      <code>$this</code>
    </ImplementedReturnTypeMismatch>
    <InvalidArgument occurrences="1">
      <code>$container</code>
    </InvalidArgument>
    <InvalidIterator occurrences="1">
      <code>$categories</code>
    </InvalidIterator>
    <InvalidMethodCall occurrences="1">
      <code>format</code>
    </InvalidMethodCall>
    <MixedArgument occurrences="9">
      <code>$cat['scheme']</code>
      <code>$cat['term']</code>
      <code>$data</code>
      <code>$data['length']</code>
      <code>$data['type']</code>
      <code>$data['uri']</code>
      <code>$link</code>
      <code>$name</code>
      <code>$this-&gt;getDataContainer()-&gt;getDateModified()-&gt;format(DateTime::RSS)</code>
    </MixedArgument>
    <MixedArrayAccess occurrences="10">
      <code>$cat['scheme']</code>
      <code>$cat['term']</code>
      <code>$data['email']</code>
      <code>$data['length']</code>
      <code>$data['length']</code>
      <code>$data['length']</code>
      <code>$data['name']</code>
      <code>$data['name']</code>
      <code>$data['type']</code>
      <code>$data['uri']</code>
    </MixedArrayAccess>
    <MixedAssignment occurrences="6">
      <code>$cat</code>
      <code>$data</code>
      <code>$data</code>
      <code>$ext</code>
      <code>$link</code>
      <code>$name</code>
    </MixedAssignment>
    <MixedMethodCall occurrences="4">
      <code>render</code>
      <code>setDomDocument</code>
      <code>setRootElement</code>
      <code>setType</code>
    </MixedMethodCall>
    <MixedOperand occurrences="2">
      <code>$data['email']</code>
      <code>$data['name']</code>
    </MixedOperand>
    <PossiblyNullArgument occurrences="7">
      <code>$this-&gt;container-&gt;getEncoding()</code>
      <code>$this-&gt;getDataContainer()-&gt;getDescription()</code>
      <code>$this-&gt;getDataContainer()-&gt;getId()</code>
      <code>$this-&gt;getDataContainer()-&gt;getId()</code>
      <code>$this-&gt;getDataContainer()-&gt;getLink()</code>
      <code>$this-&gt;getDataContainer()-&gt;getLink()</code>
      <code>$this-&gt;getDataContainer()-&gt;getTitle()</code>
    </PossiblyNullArgument>
    <PossiblyNullReference occurrences="1">
      <code>format</code>
    </PossiblyNullReference>
    <PropertyNotSetInConstructor occurrences="2">
      <code>Rss</code>
      <code>Rss</code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="src/Writer/Renderer/Feed/AbstractAtom.php">
    <InvalidArgument occurrences="3">
      <code>$flinks</code>
      <code>$gdata</code>
      <code>$gdata</code>
    </InvalidArgument>
    <InvalidArrayOffset occurrences="1">
      <code>$gdata['name']</code>
    </InvalidArrayOffset>
    <InvalidIterator occurrences="3">
      <code>$categories</code>
      <code>$flinks</code>
      <code>$hubs</code>
    </InvalidIterator>
    <InvalidMethodCall occurrences="1">
      <code>format</code>
    </InvalidMethodCall>
    <MixedArgument occurrences="15">
      <code>$cat['label']</code>
      <code>$cat['scheme']</code>
      <code>$cat['term']</code>
      <code>$cat['term']</code>
      <code>$data</code>
      <code>$data</code>
      <code>$data['email']</code>
      <code>$data['name']</code>
      <code>$data['uri']</code>
      <code>$gdata['name']</code>
      <code>$href</code>
      <code>$hubUrl</code>
      <code>$image['uri']</code>
      <code>$this-&gt;getDataContainer()-&gt;getDateModified()-&gt;format(DateTime::ATOM)</code>
      <code>$type</code>
    </MixedArgument>
    <MixedArrayAccess occurrences="7">
      <code>$cat['label']</code>
      <code>$cat['scheme']</code>
      <code>$cat['term']</code>
      <code>$cat['term']</code>
      <code>$data['email']</code>
      <code>$data['name']</code>
      <code>$data['uri']</code>
    </MixedArrayAccess>
    <MixedAssignment occurrences="4">
      <code>$cat</code>
      <code>$data</code>
      <code>$href</code>
      <code>$hubUrl</code>
    </MixedAssignment>
    <PossiblyNullArgument occurrences="8">
      <code>$gdata['uri']</code>
      <code>$gdata['version']</code>
      <code>$this-&gt;getDataContainer()-&gt;getDescription()</code>
      <code>$this-&gt;getDataContainer()-&gt;getId()</code>
      <code>$this-&gt;getDataContainer()-&gt;getLanguage()</code>
      <code>$this-&gt;getDataContainer()-&gt;getLink()</code>
      <code>$this-&gt;getDataContainer()-&gt;getLink()</code>
      <code>$this-&gt;getDataContainer()-&gt;getTitle()</code>
    </PossiblyNullArgument>
    <PossiblyNullArrayAccess occurrences="1">
      <code>$gdata['name']</code>
    </PossiblyNullArrayAccess>
    <PossiblyNullReference occurrences="1">
      <code>format</code>
    </PossiblyNullReference>
    <PropertyNotSetInConstructor occurrences="2">
      <code>AbstractAtom</code>
      <code>AbstractAtom</code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="src/Writer/Renderer/Feed/Atom.php">
    <ImplementedReturnTypeMismatch occurrences="1">
      <code>$this</code>
    </ImplementedReturnTypeMismatch>
    <InvalidScalarArgument occurrences="1">
      <code>$deep</code>
    </InvalidScalarArgument>
    <MixedArgument occurrences="1">
      <code>$entry</code>
    </MixedArgument>
    <MixedAssignment occurrences="2">
      <code>$entry</code>
      <code>$ext</code>
    </MixedAssignment>
    <MixedMethodCall occurrences="5">
      <code>render</code>
      <code>setDomDocument</code>
      <code>setEncoding</code>
      <code>setRootElement</code>
      <code>setType</code>
    </MixedMethodCall>
    <PossiblyNullArgument occurrences="1">
      <code>$this-&gt;container-&gt;getEncoding()</code>
    </PossiblyNullArgument>
    <PropertyNotSetInConstructor occurrences="2">
      <code>Atom</code>
      <code>Atom</code>
    </PropertyNotSetInConstructor>
    <RawObjectIteration occurrences="1">
      <code>$this-&gt;container</code>
    </RawObjectIteration>
  </file>
  <file src="src/Writer/Renderer/Feed/Atom/AbstractAtom.php">
    <InvalidArgument occurrences="3">
      <code>$flinks</code>
      <code>$gdata</code>
      <code>$gdata</code>
    </InvalidArgument>
    <InvalidArrayOffset occurrences="1">
      <code>$gdata['name']</code>
    </InvalidArrayOffset>
    <InvalidIterator occurrences="3">
      <code>$categories</code>
      <code>$flinks</code>
      <code>$hubs</code>
    </InvalidIterator>
    <InvalidMethodCall occurrences="1">
      <code>format</code>
    </InvalidMethodCall>
    <MixedArgument occurrences="15">
      <code>$cat['label']</code>
      <code>$cat['scheme']</code>
      <code>$cat['term']</code>
      <code>$cat['term']</code>
      <code>$data</code>
      <code>$data</code>
      <code>$data['email']</code>
      <code>$data['name']</code>
      <code>$data['uri']</code>
      <code>$gdata['name']</code>
      <code>$href</code>
      <code>$hubUrl</code>
      <code>$image['uri']</code>
      <code>$this-&gt;getDataContainer()-&gt;getDateModified()-&gt;format(DateTime::ATOM)</code>
      <code>$type</code>
    </MixedArgument>
    <MixedArrayAccess occurrences="7">
      <code>$cat['label']</code>
      <code>$cat['scheme']</code>
      <code>$cat['term']</code>
      <code>$cat['term']</code>
      <code>$data['email']</code>
      <code>$data['name']</code>
      <code>$data['uri']</code>
    </MixedArrayAccess>
    <MixedAssignment occurrences="4">
      <code>$cat</code>
      <code>$data</code>
      <code>$href</code>
      <code>$hubUrl</code>
    </MixedAssignment>
    <PossiblyNullArgument occurrences="8">
      <code>$gdata['uri']</code>
      <code>$gdata['version']</code>
      <code>$this-&gt;getDataContainer()-&gt;getDescription()</code>
      <code>$this-&gt;getDataContainer()-&gt;getId()</code>
      <code>$this-&gt;getDataContainer()-&gt;getLanguage()</code>
      <code>$this-&gt;getDataContainer()-&gt;getLink()</code>
      <code>$this-&gt;getDataContainer()-&gt;getLink()</code>
      <code>$this-&gt;getDataContainer()-&gt;getTitle()</code>
    </PossiblyNullArgument>
    <PossiblyNullArrayAccess occurrences="1">
      <code>$gdata['name']</code>
    </PossiblyNullArrayAccess>
    <PossiblyNullReference occurrences="1">
      <code>format</code>
    </PossiblyNullReference>
    <PropertyNotSetInConstructor occurrences="2">
      <code>AbstractAtom</code>
      <code>AbstractAtom</code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="src/Writer/Renderer/Feed/Atom/Source.php">
    <ImplementedReturnTypeMismatch occurrences="1">
      <code>$this</code>
    </ImplementedReturnTypeMismatch>
    <InvalidArgument occurrences="3">
      <code>$container</code>
      <code>$gdata</code>
      <code>$gdata</code>
    </InvalidArgument>
    <InvalidArrayOffset occurrences="1">
      <code>$gdata['name']</code>
    </InvalidArrayOffset>
    <MixedArgument occurrences="1">
      <code>$gdata['name']</code>
    </MixedArgument>
    <MixedAssignment occurrences="1">
      <code>$ext</code>
    </MixedAssignment>
    <MixedMethodCall occurrences="4">
      <code>render</code>
      <code>setDomDocument</code>
      <code>setRootElement</code>
      <code>setType</code>
    </MixedMethodCall>
    <PossiblyNullArgument occurrences="3">
      <code>$gdata['uri']</code>
      <code>$gdata['version']</code>
      <code>$this-&gt;container-&gt;getEncoding()</code>
    </PossiblyNullArgument>
    <PossiblyNullArrayAccess occurrences="1">
      <code>$gdata['name']</code>
    </PossiblyNullArrayAccess>
    <PropertyNotSetInConstructor occurrences="2">
      <code>Source</code>
      <code>Source</code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="src/Writer/Renderer/Feed/AtomSource.php">
    <ImplementedReturnTypeMismatch occurrences="1">
      <code>$this</code>
    </ImplementedReturnTypeMismatch>
    <InvalidArgument occurrences="2">
      <code>$gdata</code>
      <code>$gdata</code>
    </InvalidArgument>
    <InvalidArrayOffset occurrences="1">
      <code>$gdata['name']</code>
    </InvalidArrayOffset>
    <MixedArgument occurrences="1">
      <code>$gdata['name']</code>
    </MixedArgument>
    <MixedAssignment occurrences="1">
      <code>$ext</code>
    </MixedAssignment>
    <MixedMethodCall occurrences="4">
      <code>render</code>
      <code>setDomDocument</code>
      <code>setRootElement</code>
      <code>setType</code>
    </MixedMethodCall>
    <PossiblyNullArgument occurrences="3">
      <code>$gdata['uri']</code>
      <code>$gdata['version']</code>
      <code>$this-&gt;container-&gt;getEncoding()</code>
    </PossiblyNullArgument>
    <PossiblyNullArrayAccess occurrences="1">
      <code>$gdata['name']</code>
    </PossiblyNullArrayAccess>
    <PropertyNotSetInConstructor occurrences="2">
      <code>AtomSource</code>
      <code>AtomSource</code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="src/Writer/Renderer/Feed/Rss.php">
    <ImplementedReturnTypeMismatch occurrences="1">
      <code>$this</code>
    </ImplementedReturnTypeMismatch>
    <InvalidArgument occurrences="2">
      <code>$gdata</code>
      <code>$gdata</code>
    </InvalidArgument>
    <InvalidArrayOffset occurrences="1">
      <code>$gdata['name']</code>
    </InvalidArrayOffset>
    <InvalidIterator occurrences="1">
      <code>$categories</code>
    </InvalidIterator>
    <InvalidMethodCall occurrences="2">
      <code>format</code>
      <code>format</code>
    </InvalidMethodCall>
    <InvalidScalarArgument occurrences="1">
      <code>$deep</code>
    </InvalidScalarArgument>
    <MixedArgument occurrences="10">
      <code>$cat['scheme']</code>
      <code>$cat['term']</code>
      <code>$data</code>
      <code>$image['height']</code>
      <code>$image['uri']</code>
      <code>$image['width']</code>
      <code>$name</code>
      <code>$name</code>
      <code>$this-&gt;getDataContainer()-&gt;getDateModified()-&gt;format(DateTime::RSS)</code>
      <code>$this-&gt;getDataContainer()-&gt;getLastBuildDate()-&gt;format(DateTime::RSS)</code>
    </MixedArgument>
    <MixedArrayAccess occurrences="5">
      <code>$cat['scheme']</code>
      <code>$cat['term']</code>
      <code>$data['email']</code>
      <code>$data['name']</code>
      <code>$data['name']</code>
    </MixedArrayAccess>
    <MixedAssignment occurrences="6">
      <code>$cat</code>
      <code>$data</code>
      <code>$entry</code>
      <code>$ext</code>
      <code>$name</code>
      <code>$name</code>
    </MixedAssignment>
    <MixedMethodCall occurrences="5">
      <code>render</code>
      <code>setDomDocument</code>
      <code>setEncoding</code>
      <code>setRootElement</code>
      <code>setType</code>
    </MixedMethodCall>
    <MixedOperand occurrences="4">
      <code>$data['email']</code>
      <code>$data['name']</code>
      <code>$name</code>
      <code>$name</code>
    </MixedOperand>
    <PossiblyNullArgument occurrences="3">
      <code>$this-&gt;container-&gt;getEncoding()</code>
      <code>$this-&gt;getDataContainer()-&gt;getDescription()</code>
      <code>$this-&gt;getDataContainer()-&gt;getTitle()</code>
    </PossiblyNullArgument>
    <PossiblyNullArrayAccess occurrences="1">
      <code>$gdata['name']</code>
    </PossiblyNullArrayAccess>
    <PossiblyNullOperand occurrences="2">
      <code>$gdata['uri']</code>
      <code>$gdata['version']</code>
    </PossiblyNullOperand>
    <PossiblyNullReference occurrences="2">
      <code>format</code>
      <code>format</code>
    </PossiblyNullReference>
    <PropertyNotSetInConstructor occurrences="2">
      <code>Rss</code>
      <code>Rss</code>
    </PropertyNotSetInConstructor>
    <RawObjectIteration occurrences="1">
      <code>$this-&gt;container</code>
    </RawObjectIteration>
  </file>
  <file src="src/Writer/Renderer/RendererInterface.php">
    <MissingReturnType occurrences="2">
      <code>setRootElement</code>
      <code>setType</code>
    </MissingReturnType>
  </file>
  <file src="src/Writer/Source.php">
    <PropertyNotSetInConstructor occurrences="2">
      <code>Source</code>
      <code>Source</code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="src/Writer/StandaloneExtensionManager.php">
    <MissingPropertyType occurrences="1">
      <code>$extensions</code>
    </MissingPropertyType>
    <MissingReturnType occurrences="2">
      <code>add</code>
      <code>remove</code>
    </MissingReturnType>
    <MixedArgument occurrences="1">
      <code>$this-&gt;extensions</code>
    </MixedArgument>
    <MixedArrayAccess occurrences="2">
      <code>$this-&gt;extensions[$extension]</code>
      <code>$this-&gt;extensions[$name]</code>
    </MixedArrayAccess>
    <MixedArrayAssignment occurrences="1">
      <code>$this-&gt;extensions[$name]</code>
    </MixedArrayAssignment>
    <MixedAssignment occurrences="1">
      <code>$class</code>
    </MixedAssignment>
    <MixedMethodCall occurrences="1">
      <code>new $class()</code>
    </MixedMethodCall>
    <RedundantConditionGivenDocblockType occurrences="1">
      <code>is_string($class)</code>
    </RedundantConditionGivenDocblockType>
  </file>
  <file src="src/Writer/Writer.php">
    <DocblockTypeContradiction occurrences="1">
      <code>isset(static::$extensionManager)</code>
    </DocblockTypeContradiction>
    <InvalidDocblock occurrences="1">
      <code>public static function setExtensionManager(ExtensionManagerInterface $extensionManager)</code>
    </InvalidDocblock>
    <MissingReturnType occurrences="1">
      <code>setExtensionManager</code>
    </MissingReturnType>
    <MixedArgument occurrences="4">
      <code>static::$extensions['entry']</code>
      <code>static::$extensions['entryRenderer']</code>
      <code>static::$extensions['feed']</code>
      <code>static::$extensions['feedRenderer']</code>
    </MixedArgument>
    <MixedArrayAssignment occurrences="4">
      <code>static::$extensions['entry'][]</code>
      <code>static::$extensions['entryRenderer'][]</code>
      <code>static::$extensions['feed'][]</code>
      <code>static::$extensions['feedRenderer'][]</code>
    </MixedArrayAssignment>
  </file>
  <file src="test/PubSubHubbub/AbstractCallbackTest.php">
    <MissingReturnType occurrences="5">
      <code>testDetectCallbackReturnsEmptyStringIfNoResourcesMatchedInServerSuperglobal</code>
      <code>testDetectCallbackUrlFallsBackToOrigPathInfoWhenAllElseFails</code>
      <code>testDetectCallbackUrlIgnoresXOriginalUrlHeaderWhenXRewriteUrlHeaderIsNotPresent</code>
      <code>testDetectCallbackUrlRequiresCombinationOfIISWasUrlRewrittenAndUnencodedUrlToReturnEarly</code>
      <code>testDetectCallbackUrlUsesRequestUriWhenNoOtherRewriteHeadersAreFound</code>
    </MissingReturnType>
  </file>
  <file src="test/PubSubHubbub/ClientNotReset.php">
    <InvalidReturnType occurrences="1">
      <code>resetParameters</code>
    </InvalidReturnType>
    <MissingParamType occurrences="1">
      <code>$clearAuth</code>
    </MissingParamType>
    <PropertyNotSetInConstructor occurrences="6">
      <code>ClientNotReset</code>
      <code>ClientNotReset</code>
      <code>ClientNotReset</code>
      <code>ClientNotReset</code>
      <code>ClientNotReset</code>
      <code>ClientNotReset</code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="test/PubSubHubbub/Model/SubscriptionTest.php">
    <DeprecatedMethod occurrences="1">
      <code>assertInternalType</code>
    </DeprecatedMethod>
    <MissingReturnType occurrences="5">
      <code>createTable</code>
      <code>initDb</code>
      <code>testAllOperations</code>
      <code>testCurrentTimeSetterAndGetter</code>
      <code>testImpemetsSubscriptionInterface</code>
    </MissingReturnType>
    <MixedArgument occurrences="2">
      <code>$adapter</code>
      <code>$this-&gt;initDb()</code>
    </MixedArgument>
    <MixedAssignment occurrences="1">
      <code>$adapter</code>
    </MixedAssignment>
    <PossiblyUndefinedMethod occurrences="1">
      <code>execute</code>
    </PossiblyUndefinedMethod>
    <ReservedWord occurrences="10">
      <code>$this-&gt;assertFalse($subscription-&gt;deleteSubscription($id))</code>
      <code>$this-&gt;assertFalse($subscription-&gt;getSubscription($id))</code>
      <code>$this-&gt;assertFalse($subscription-&gt;hasSubscription($id))</code>
      <code>$this-&gt;assertFalse($subscription-&gt;setSubscription(['id' =&gt; $id]))</code>
      <code>$this-&gt;assertInternalType('array', $dataSubscription)</code>
      <code>$this-&gt;assertTrue($subscription-&gt;deleteSubscription($id))</code>
      <code>$this-&gt;assertTrue($subscription-&gt;hasSubscription($id))</code>
      <code>$this-&gt;assertTrue($subscription-&gt;setSubscription(['id' =&gt; $id]))</code>
      <code>$this-&gt;markTestSkipped('Test only with pdo_sqlite')</code>
    </ReservedWord>
  </file>
  <file src="test/PubSubHubbub/PubSubHubbubTest.php">
    <ArgumentTypeCoercion occurrences="1">
      <code>$feed</code>
    </ArgumentTypeCoercion>
    <MissingReturnType occurrences="1">
      <code>testCanDetectHubs</code>
    </MissingReturnType>
    <ReservedWord occurrences="1"/>
  </file>
  <file src="test/PubSubHubbub/PublisherTest.php">
    <InvalidArgument occurrences="7">
      <code>ExceptionInterface::class</code>
      <code>ExceptionInterface::class</code>
      <code>ExceptionInterface::class</code>
      <code>ExceptionInterface::class</code>
      <code>ExceptionInterface::class</code>
      <code>ExceptionInterface::class</code>
    </InvalidArgument>
    <InvalidScalarArgument occurrences="2">
      <code>123</code>
      <code>123</code>
    </InvalidScalarArgument>
    <MissingReturnType occurrences="29">
      <code>getClientFail</code>
      <code>getClientSuccess</code>
      <code>setUp</code>
      <code>testAddsHubServerUrl</code>
      <code>testAddsHubServerUrlsFromArray</code>
      <code>testAddsHubServerUrlsFromArrayUsingSetConfig</code>
      <code>testAddsParameter</code>
      <code>testAddsParametersFromArray</code>
      <code>testAddsParametersFromArrayInSingleMethod</code>
      <code>testAddsParametersFromArrayUsingSetConfig</code>
      <code>testAddsUpdatedTopicUrl</code>
      <code>testAddsUpdatedTopicUrlsFromArray</code>
      <code>testAddsUpdatedTopicUrlsFromArrayUsingSetConfig</code>
      <code>testNotifiesHubAndReportsFail</code>
      <code>testNotifiesHubAndReportsSuccess</code>
      <code>testNotifiesHubWithCorrectParameters</code>
      <code>testNotifiesHubWithCorrectParametersAndMultipleTopics</code>
      <code>testRemovesHubServerUrl</code>
      <code>testRemovesParameter</code>
      <code>testRemovesParameterIfSetToNull</code>
      <code>testRemovesUpdatedTopicUrl</code>
      <code>testRetrievesUniqueHubServerUrlsOnly</code>
      <code>testRetrievesUniqueUpdatedTopicUrlsOnly</code>
      <code>testThrowsExceptionOnSettingEmptyHubServerUrl</code>
      <code>testThrowsExceptionOnSettingEmptyUpdatedTopicUrl</code>
      <code>testThrowsExceptionOnSettingInvalidHubServerUrl</code>
      <code>testThrowsExceptionOnSettingInvalidUpdatedTopicUrl</code>
      <code>testThrowsExceptionOnSettingNonStringHubServerUrl</code>
      <code>testThrowsExceptionOnSettingNonStringUpdatedTopicUrl</code>
    </MissingReturnType>
    <MixedArgument occurrences="4">
      <code>$this-&gt;getClientFail()</code>
      <code>$this-&gt;getClientSuccess()</code>
      <code>$this-&gt;getClientSuccess()</code>
      <code>$this-&gt;getClientSuccess()</code>
    </MixedArgument>
    <ReservedWord occurrences="20">
      <code>$this-&gt;assertEquals(['foo' =&gt; 'bar'], $this-&gt;publisher-&gt;getParameters())</code>
      <code>$this-&gt;assertEquals(['http://www.example.com/hub'], $this-&gt;publisher-&gt;getHubUrls())</code>
      <code>$this-&gt;assertEquals(['http://www.example.com/topic'], $this-&gt;publisher-&gt;getUpdatedTopicUrls())</code>
      <code>$this-&gt;assertFalse($this-&gt;publisher-&gt;isSuccess())</code>
      <code>$this-&gt;assertTrue($this-&gt;publisher-&gt;isSuccess())</code>
    </ReservedWord>
  </file>
  <file src="test/PubSubHubbub/Subscriber/CallbackTest.php">
    <ArgumentTypeCoercion occurrences="2">
      <code>'Result'</code>
      <code>'Result'</code>
    </ArgumentTypeCoercion>
    <DeprecatedClass occurrences="3">
      <code>\Laminas\Db\Adapter\Adapter|\PHPUnit_Framework_MockObject_MockObject</code>
      <code>\Laminas\Db\ResultSet\ResultSet|\PHPUnit_Framework_MockObject_MockObject</code>
      <code>\Laminas\Db\TableGateway\TableGateway|\PHPUnit_Framework_MockObject_MockObject</code>
    </DeprecatedClass>
    <InvalidArgument occurrences="7">
      <code>''</code>
      <code>ExceptionInterface::class</code>
      <code>ExceptionInterface::class</code>
      <code>ExceptionInterface::class</code>
      <code>ExceptionInterface::class</code>
      <code>ExceptionInterface::class</code>
      <code>new stdClass()</code>
    </InvalidArgument>
    <MissingParamType occurrences="1">
      <code>$className</code>
    </MissingParamType>
    <MissingReturnType occurrences="32">
      <code>_getCleanMock</code>
      <code>setUp</code>
      <code>testCanSetHttpResponseObject</code>
      <code>testCanSetStorageImplementation</code>
      <code>testCanSetSubscriberCount</code>
      <code>testCanUsesDefaultHttpResponseObject</code>
      <code>testDefaultSubscriberCountIsOne</code>
      <code>testRespondsToInvalidConfirmationWith404Response</code>
      <code>testRespondsToInvalidFeedUpdateNotPostWith404Response</code>
      <code>testRespondsToInvalidFeedUpdateWrongFeedTypeForMimeWith200Response</code>
      <code>testRespondsToInvalidFeedUpdateWrongMimeWith404Response</code>
      <code>testRespondsToValidConfirmationWith200Response</code>
      <code>testRespondsToValidConfirmationWithBodyContainingHubChallenge</code>
      <code>testRespondsToValidFeedUpdateRequestWith200Response</code>
      <code>testRespondsToValidFeedUpdateWithXHubOnBehalfOfHeader</code>
      <code>testReturnsFalseIfChallengeMissingFromHttpGetData</code>
      <code>testReturnsFalseIfHubTopicInvalidFromHttpGetData</code>
      <code>testReturnsFalseIfHubVerificationNotAGetRequest</code>
      <code>testReturnsFalseIfLeaseSecondsMissedWhenModeIsSubscribeFromHttpGetData</code>
      <code>testReturnsFalseIfModeMissingFromHttpGetData</code>
      <code>testReturnsFalseIfModeNotRecognisedFromHttpGetData</code>
      <code>testReturnsFalseIfTopicMissingFromHttpGetData</code>
      <code>testReturnsFalseIfVerifyTokenMissingFromHttpGetData</code>
      <code>testReturnsFalseIfVerifyTokenRecordDoesNotAgreeWithConfirmRequest</code>
      <code>testReturnsFalseIfVerifyTokenRecordDoesNotExistForConfirmRequest</code>
      <code>testReturnsTrueIfModeSetAsUnsubscribeFromHttpGetData</code>
      <code>testThrowsExceptionIfNonObjectSetAsHttpResponseObject</code>
      <code>testThrowsExceptionOnInvalidHttpResponseObjectSet</code>
      <code>testThrowsExceptionOnSettingAnyScalarTypeCastToAZeroOrLessIntegerAsSubscriberCount</code>
      <code>testThrowsExceptionOnSettingLessThanZeroAsSubscriberCount</code>
      <code>testThrowsExceptionOnSettingZeroAsSubscriberCount</code>
      <code>testValidatesValidHttpGetData</code>
    </MissingReturnType>
    <MixedArgument occurrences="3">
      <code>$className</code>
      <code>$className</code>
      <code>$this-&gt;_tableGateway</code>
    </MixedArgument>
    <MixedAssignment occurrences="3">
      <code>$this-&gt;_adapter</code>
      <code>$this-&gt;_rowset</code>
      <code>$this-&gt;_tableGateway</code>
    </MixedAssignment>
    <MixedMethodCall occurrences="57">
      <code>expects</code>
      <code>method</code>
      <code>method</code>
      <code>method</code>
      <code>method</code>
      <code>method</code>
      <code>method</code>
      <code>method</code>
      <code>method</code>
      <code>method</code>
      <code>method</code>
      <code>method</code>
      <code>method</code>
      <code>method</code>
      <code>method</code>
      <code>method</code>
      <code>method</code>
      <code>method</code>
      <code>method</code>
      <code>method</code>
      <code>method</code>
      <code>method</code>
      <code>method</code>
      <code>method</code>
      <code>method</code>
      <code>will</code>
      <code>will</code>
      <code>will</code>
      <code>will</code>
      <code>will</code>
      <code>will</code>
      <code>will</code>
      <code>will</code>
      <code>will</code>
      <code>will</code>
      <code>will</code>
      <code>will</code>
      <code>will</code>
      <code>will</code>
      <code>will</code>
      <code>will</code>
      <code>will</code>
      <code>will</code>
      <code>will</code>
      <code>will</code>
      <code>will</code>
      <code>will</code>
      <code>will</code>
      <code>with</code>
      <code>with</code>
      <code>with</code>
      <code>with</code>
      <code>with</code>
      <code>with</code>
      <code>with</code>
      <code>with</code>
      <code>with</code>
    </MixedMethodCall>
    <PossiblyInvalidArgument occurrences="1">
      <code>$this-&gt;_tableGateway</code>
    </PossiblyInvalidArgument>
    <PossiblyUndefinedMethod occurrences="15">
      <code>expects</code>
      <code>expects</code>
      <code>expects</code>
      <code>expects</code>
      <code>expects</code>
      <code>expects</code>
      <code>expects</code>
      <code>expects</code>
      <code>expects</code>
      <code>expects</code>
      <code>expects</code>
      <code>expects</code>
      <code>expects</code>
      <code>expects</code>
      <code>getHeader</code>
    </PossiblyUndefinedMethod>
    <ReservedWord occurrences="25">
      <code>$this-&gt;assertEquals('abc', $this-&gt;_callback-&gt;getHttpResponse()-&gt;getContent())</code>
      <code>$this-&gt;assertEquals(1, $this-&gt;_callback-&gt;getHttpResponse()-&gt;getHeader('X-Hub-On-Behalf-Of'))</code>
      <code>$this-&gt;assertEquals(1, $this-&gt;_callback-&gt;getSubscriberCount())</code>
      <code>$this-&gt;assertEquals(10000, $this-&gt;_callback-&gt;getSubscriberCount())</code>
      <code>$this-&gt;assertEquals(200, $this-&gt;_callback-&gt;getHttpResponse()-&gt;getStatusCode())</code>
      <code>$this-&gt;assertEquals(200, $this-&gt;_callback-&gt;getHttpResponse()-&gt;getStatusCode())</code>
      <code>$this-&gt;assertEquals(200, $this-&gt;_callback-&gt;getHttpResponse()-&gt;getStatusCode())</code>
      <code>$this-&gt;assertEquals(404, $this-&gt;_callback-&gt;getHttpResponse()-&gt;getStatusCode())</code>
      <code>$this-&gt;assertEquals(404, $this-&gt;_callback-&gt;getHttpResponse()-&gt;getStatusCode())</code>
      <code>$this-&gt;assertEquals(404, $this-&gt;_callback-&gt;getHttpResponse()-&gt;getStatusCode())</code>
      <code>$this-&gt;assertFalse($this-&gt;_callback-&gt;isValidHubVerification($this-&gt;_get))</code>
      <code>$this-&gt;assertFalse($this-&gt;_callback-&gt;isValidHubVerification($this-&gt;_get))</code>
      <code>$this-&gt;assertFalse($this-&gt;_callback-&gt;isValidHubVerification($this-&gt;_get))</code>
      <code>$this-&gt;assertFalse($this-&gt;_callback-&gt;isValidHubVerification($this-&gt;_get))</code>
      <code>$this-&gt;assertFalse($this-&gt;_callback-&gt;isValidHubVerification($this-&gt;_get))</code>
      <code>$this-&gt;assertFalse($this-&gt;_callback-&gt;isValidHubVerification($this-&gt;_get))</code>
      <code>$this-&gt;assertFalse($this-&gt;_callback-&gt;isValidHubVerification($this-&gt;_get))</code>
      <code>$this-&gt;assertFalse($this-&gt;_callback-&gt;isValidHubVerification($this-&gt;_get))</code>
      <code>$this-&gt;assertFalse($this-&gt;_callback-&gt;isValidHubVerification($this-&gt;_get))</code>
      <code>$this-&gt;assertFalse($this-&gt;_callback-&gt;isValidHubVerification($this-&gt;_get))</code>
      <code>$this-&gt;assertInstanceOf(HttpResponse::class, $this-&gt;_callback-&gt;getHttpResponse())</code>
      <code>$this-&gt;assertInstanceOf(HttpResponse::class, $this-&gt;_callback-&gt;getHttpResponse())</code>
      <code>$this-&gt;assertThat($this-&gt;_callback-&gt;getStorage(), $this-&gt;identicalTo($storage))</code>
      <code>$this-&gt;assertTrue($this-&gt;_callback-&gt;isValidHubVerification($this-&gt;_get))</code>
      <code>$this-&gt;assertTrue($this-&gt;_callback-&gt;isValidHubVerification($this-&gt;_get))</code>
    </ReservedWord>
    <UndefinedClass occurrences="2">
      <code>'Result'</code>
      <code>'Result'</code>
    </UndefinedClass>
  </file>
  <file src="test/PubSubHubbub/SubscriberHttpTest.php">
    <MissingParamType occurrences="1">
      <code>$className</code>
    </MissingParamType>
    <MissingPropertyType occurrences="1">
      <code>$storage</code>
    </MissingPropertyType>
    <MissingReturnType occurrences="4">
      <code>_getCleanMock</code>
      <code>setUp</code>
      <code>testSubscriptionRequestSendsExpectedPostData</code>
      <code>testUnsubscriptionRequestSendsExpectedPostData</code>
    </MissingReturnType>
    <MixedArgument occurrences="3">
      <code>$className</code>
      <code>$className</code>
      <code>$this-&gt;storage</code>
    </MixedArgument>
    <PossiblyFalsePropertyAssignmentValue occurrences="1">
      <code>getenv('TESTS_LAMINAS_FEED_PUBSUBHUBBUB_BASEURI')</code>
    </PossiblyFalsePropertyAssignmentValue>
    <PossiblyNullArgument occurrences="2">
      <code>$name</code>
      <code>$name</code>
    </PossiblyNullArgument>
    <PossiblyNullOperand occurrences="1">
      <code>$name</code>
    </PossiblyNullOperand>
    <ReservedWord occurrences="4">
      <code>$this-&gt;assertEquals($subscriptionRecord['subscription_state'], PubSubHubbub::SUBSCRIPTION_TODELETE)</code>
      <code>$this-&gt;markTestSkipped('Laminas\Feed\PubSubHubbub\Subscriber dynamic tests are not enabled in phpunit.xml')</code>
    </ReservedWord>
    <TooFewArguments occurrences="1">
      <code>getSubscription</code>
    </TooFewArguments>
  </file>
  <file src="test/PubSubHubbub/SubscriberTest.php">
    <InvalidArgument occurrences="17">
      <code>ExceptionInterface::class</code>
      <code>ExceptionInterface::class</code>
      <code>ExceptionInterface::class</code>
      <code>ExceptionInterface::class</code>
      <code>ExceptionInterface::class</code>
      <code>ExceptionInterface::class</code>
      <code>ExceptionInterface::class</code>
      <code>ExceptionInterface::class</code>
      <code>ExceptionInterface::class</code>
      <code>ExceptionInterface::class</code>
      <code>ExceptionInterface::class</code>
      <code>ExceptionInterface::class</code>
      <code>ExceptionInterface::class</code>
      <code>ExceptionInterface::class</code>
      <code>ExceptionInterface::class</code>
      <code>ExceptionInterface::class</code>
    </InvalidArgument>
    <InvalidScalarArgument occurrences="5">
      <code>'0aa'</code>
      <code>'10000'</code>
      <code>123</code>
      <code>123</code>
      <code>123</code>
    </InvalidScalarArgument>
    <MissingParamType occurrences="1">
      <code>$className</code>
    </MissingParamType>
    <MissingPropertyType occurrences="2">
      <code>$adapter</code>
      <code>$tableGateway</code>
    </MissingPropertyType>
    <MissingReturnType occurrences="35">
      <code>_getCleanMock</code>
      <code>setUp</code>
      <code>testAddsHubServerUrl</code>
      <code>testAddsHubServerUrlsFromArray</code>
      <code>testAddsHubServerUrlsFromArrayUsingSetOptions</code>
      <code>testAddsParameter</code>
      <code>testAddsParametersFromArray</code>
      <code>testAddsParametersFromArrayInSingleMethod</code>
      <code>testAddsParametersFromArrayUsingSetOptions</code>
      <code>testCanSetCallbackUrl</code>
      <code>testCanSetLeaseSeconds</code>
      <code>testCanSetPreferredVerificationMode</code>
      <code>testCanSetStorageImplementation</code>
      <code>testCanSetTopicUrl</code>
      <code>testGetStorageThrowsExceptionIfNoneSet</code>
      <code>testPreferredVerificationModeDefaultsToSync</code>
      <code>testRemovesHubServerUrl</code>
      <code>testRemovesParameter</code>
      <code>testRemovesParameterIfSetToNull</code>
      <code>testRetrievesUniqueHubServerUrlsOnly</code>
      <code>testSetsPreferredVerificationModeThrowsExceptionOnSettingBadMode</code>
      <code>testThrowsExceptionOnMissingCallbackUrl</code>
      <code>testThrowsExceptionOnMissingTopicUrl</code>
      <code>testThrowsExceptionOnSettingAnyScalarTypeCastToAZeroOrLessIntegerAsLeaseSeconds</code>
      <code>testThrowsExceptionOnSettingEmptyCallbackUrl</code>
      <code>testThrowsExceptionOnSettingEmptyHubServerUrl</code>
      <code>testThrowsExceptionOnSettingEmptyTopicUrl</code>
      <code>testThrowsExceptionOnSettingInvalidCallbackUrl</code>
      <code>testThrowsExceptionOnSettingInvalidHubServerUrl</code>
      <code>testThrowsExceptionOnSettingInvalidTopicUrl</code>
      <code>testThrowsExceptionOnSettingLessThanZeroAsLeaseSeconds</code>
      <code>testThrowsExceptionOnSettingNonStringCallbackUrl</code>
      <code>testThrowsExceptionOnSettingNonStringHubServerUrl</code>
      <code>testThrowsExceptionOnSettingNonStringTopicUrl</code>
      <code>testThrowsExceptionOnSettingZeroAsLeaseSeconds</code>
    </MissingReturnType>
    <MixedArgument occurrences="3">
      <code>$className</code>
      <code>$className</code>
      <code>$this-&gt;tableGateway</code>
    </MixedArgument>
    <MixedMethodCall occurrences="3">
      <code>expects</code>
      <code>method</code>
      <code>will</code>
    </MixedMethodCall>
    <ReservedWord occurrences="17">
      <code>$this-&gt;assertEquals('http://www.example.com/callback', $this-&gt;subscriber-&gt;getCallbackUrl())</code>
      <code>$this-&gt;assertEquals('http://www.example.com/topic', $this-&gt;subscriber-&gt;getTopicUrl())</code>
      <code>$this-&gt;assertEquals(10000, $this-&gt;subscriber-&gt;getLeaseSeconds())</code>
      <code>$this-&gt;assertEquals(PubSubHubbub::VERIFICATION_MODE_ASYNC, $this-&gt;subscriber-&gt;getPreferredVerificationMode())</code>
      <code>$this-&gt;assertEquals(PubSubHubbub::VERIFICATION_MODE_SYNC, $this-&gt;subscriber-&gt;getPreferredVerificationMode())</code>
      <code>$this-&gt;assertEquals(['foo' =&gt; 'bar'], $this-&gt;subscriber-&gt;getParameters())</code>
      <code>$this-&gt;assertEquals(['http://www.example.com/hub'], $this-&gt;subscriber-&gt;getHubUrls())</code>
      <code>$this-&gt;assertThat($this-&gt;subscriber-&gt;getStorage(), $this-&gt;identicalTo($storage))</code>
    </ReservedWord>
  </file>
  <file src="test/PubSubHubbub/TestAsset/Callback.php">
    <MissingReturnType occurrences="1">
      <code>handle</code>
    </MissingReturnType>
    <PropertyNotSetInConstructor occurrences="2">
      <code>Callback</code>
      <code>Callback</code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="test/Reader/Entry/AtomStandaloneEntryTest.php">
    <MissingPropertyType occurrences="3">
      <code>$expectedCats</code>
      <code>$expectedCatsDc</code>
      <code>$feedSamplePath</code>
    </MissingPropertyType>
    <MissingReturnType occurrences="17">
      <code>setUp</code>
      <code>testGetsAuthorFromAtom10</code>
      <code>testGetsAuthorsFromAtom10</code>
      <code>testGetsCategoriesFromAtom10</code>
      <code>testGetsCommentLinkFromAtom10</code>
      <code>testGetsContentFromAtom10</code>
      <code>testGetsContentFromAtom10Html</code>
      <code>testGetsContentFromAtom10HtmlCdata</code>
      <code>testGetsContentFromAtom10XhtmlNamespaced</code>
      <code>testGetsDateCreatedFromAtom10</code>
      <code>testGetsDateModifiedFromAtom10</code>
      <code>testGetsDescriptionFromAtom10</code>
      <code>testGetsEnclosureFromAtom10</code>
      <code>testGetsIdFromAtom10</code>
      <code>testGetsLinkFromAtom10</code>
      <code>testGetsTitleFromAtom10</code>
      <code>testReaderImportOfAtomEntryDocumentReturnsEntryClass</code>
    </MissingReturnType>
    <MixedOperand occurrences="16">
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
    </MixedOperand>
    <ReservedWord occurrences="17">
      <code>$this-&gt;assertEquals($authors, (array) $entry-&gt;getAuthors())</code>
      <code>$this-&gt;assertEquals($edate, $entry-&gt;getDateCreated())</code>
      <code>$this-&gt;assertEquals($edate, $entry-&gt;getDateModified())</code>
      <code>$this-&gt;assertEquals($expected, $entry-&gt;getEnclosure())</code>
      <code>$this-&gt;assertEquals($this-&gt;expectedCats, (array) $entry-&gt;getCategories())</code>
      <code>$this-&gt;assertEquals('1', $entry-&gt;getId())</code>
      <code>$this-&gt;assertEquals('&lt;p class="x:"&gt;&lt;em&gt;Entry Content &amp;amp;x:&lt;/em&gt;&lt;/p&gt;', $entry-&gt;getContent())</code>
      <code>$this-&gt;assertEquals('&lt;p&gt;Entry Content &amp;amp;&lt;/p&gt;', $entry-&gt;getContent())</code>
      <code>$this-&gt;assertEquals('&lt;p&gt;Entry Content &amp;amp;&lt;/p&gt;', $entry-&gt;getContent())</code>
      <code>$this-&gt;assertEquals('Entry Content &amp;amp;', $entry-&gt;getContent())</code>
      <code>$this-&gt;assertEquals('Entry Description', $entry-&gt;getDescription())</code>
      <code>$this-&gt;assertEquals('Entry Title', $entry-&gt;getTitle())</code>
      <code>$this-&gt;assertEquals('http://www.example.com/entry', $entry-&gt;getLink())</code>
      <code>$this-&gt;assertEquals('http://www.example.com/entry/comments', $entry-&gt;getCommentLink())</code>
      <code>$this-&gt;assertEquals(['topic1', 'Cat &amp; Dog'], array_values($entry-&gt;getCategories()-&gt;getValues()))</code>
      <code>$this-&gt;assertInstanceOf(Atom::class, $object)</code>
    </ReservedWord>
    <UndefinedInterfaceMethod occurrences="6">
      <code>getCommentLink</code>
      <code>getContent</code>
      <code>getContent</code>
      <code>getContent</code>
      <code>getContent</code>
      <code>getEnclosure</code>
    </UndefinedInterfaceMethod>
  </file>
  <file src="test/Reader/Entry/AtomTest.php">
    <MissingPropertyType occurrences="3">
      <code>$expectedCats</code>
      <code>$expectedCatsDc</code>
      <code>$feedSamplePath</code>
    </MissingPropertyType>
    <MissingReturnType occurrences="40">
      <code>setUp</code>
      <code>testGetsAuthorFromAtom03</code>
      <code>testGetsAuthorFromAtom10</code>
      <code>testGetsAuthorsFromAtom03</code>
      <code>testGetsAuthorsFromAtom10</code>
      <code>testGetsBaseUriFromAtom10FromEntryElement</code>
      <code>testGetsBaseUriFromAtom10FromFeedElement</code>
      <code>testGetsCategoriesFromAtom03Atom10Extension</code>
      <code>testGetsCategoriesFromAtom03Dc10</code>
      <code>testGetsCategoriesFromAtom03Dc11</code>
      <code>testGetsCategoriesFromAtom03None</code>
      <code>testGetsCategoriesFromAtom10</code>
      <code>testGetsCategoriesFromAtom10None</code>
      <code>testGetsCommentLinkFromAtom03</code>
      <code>testGetsCommentLinkFromAtom10</code>
      <code>testGetsCommentLinkFromAtom10RelativeLinks</code>
      <code>testGetsContentFromAtom03</code>
      <code>testGetsContentFromAtom10</code>
      <code>testGetsContentFromAtom10Html</code>
      <code>testGetsContentFromAtom10HtmlCdata</code>
      <code>testGetsContentFromAtom10XhtmlNamespaced</code>
      <code>testGetsContentWithoutChildElementsFromAtom10XhtmlNamespaced</code>
      <code>testGetsDateCreatedFromAtom03</code>
      <code>testGetsDateCreatedFromAtom10</code>
      <code>testGetsDateCreatedWithFractional</code>
      <code>testGetsDateModifiedFromAtom03</code>
      <code>testGetsDateModifiedFromAtom10</code>
      <code>testGetsDateModifiedWithFractional</code>
      <code>testGetsDescriptionFromAtom03</code>
      <code>testGetsDescriptionFromAtom10</code>
      <code>testGetsEnclosureFromAtom03</code>
      <code>testGetsEnclosureFromAtom10</code>
      <code>testGetsIdFromAtom03</code>
      <code>testGetsIdFromAtom10</code>
      <code>testGetsLinkFromAtom03</code>
      <code>testGetsLinkFromAtom10</code>
      <code>testGetsLinkFromAtom10WithNoRelAttribute</code>
      <code>testGetsLinkFromAtom10WithRelativeUrl</code>
      <code>testGetsTitleFromAtom03</code>
      <code>testGetsTitleFromAtom10</code>
    </MissingReturnType>
    <MixedArgument occurrences="6">
      <code>$entry-&gt;getCategories()-&gt;getValues()</code>
      <code>$entry-&gt;getCategories()-&gt;getValues()</code>
      <code>$entry-&gt;getCategories()-&gt;getValues()</code>
      <code>$entry-&gt;getCategories()-&gt;getValues()</code>
      <code>$entry-&gt;getCategories()-&gt;getValues()</code>
      <code>$entry-&gt;getCategories()-&gt;getValues()</code>
    </MixedArgument>
    <MixedAssignment occurrences="39">
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
    </MixedAssignment>
    <MixedMethodCall occurrences="51">
      <code>getAuthor</code>
      <code>getAuthor</code>
      <code>getAuthors</code>
      <code>getAuthors</code>
      <code>getBaseUrl</code>
      <code>getBaseUrl</code>
      <code>getCategories</code>
      <code>getCategories</code>
      <code>getCategories</code>
      <code>getCategories</code>
      <code>getCategories</code>
      <code>getCategories</code>
      <code>getCategories</code>
      <code>getCategories</code>
      <code>getCategories</code>
      <code>getCategories</code>
      <code>getCategories</code>
      <code>getCategories</code>
      <code>getCommentLink</code>
      <code>getCommentLink</code>
      <code>getCommentLink</code>
      <code>getContent</code>
      <code>getContent</code>
      <code>getContent</code>
      <code>getContent</code>
      <code>getContent</code>
      <code>getContent</code>
      <code>getDateCreated</code>
      <code>getDateCreated</code>
      <code>getDateCreated</code>
      <code>getDateModified</code>
      <code>getDateModified</code>
      <code>getDateModified</code>
      <code>getDescription</code>
      <code>getDescription</code>
      <code>getEnclosure</code>
      <code>getEnclosure</code>
      <code>getId</code>
      <code>getId</code>
      <code>getLink</code>
      <code>getLink</code>
      <code>getLink</code>
      <code>getLink</code>
      <code>getTitle</code>
      <code>getTitle</code>
      <code>getValues</code>
      <code>getValues</code>
      <code>getValues</code>
      <code>getValues</code>
      <code>getValues</code>
      <code>getValues</code>
    </MixedMethodCall>
    <MixedOperand occurrences="39">
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
    </MixedOperand>
    <ReservedWord occurrences="45">
      <code>$this-&gt;assertEquals($authors, (array) $entry-&gt;getAuthors())</code>
      <code>$this-&gt;assertEquals($authors, (array) $entry-&gt;getAuthors())</code>
      <code>$this-&gt;assertEquals($edate, $entry-&gt;getDateCreated())</code>
      <code>$this-&gt;assertEquals($edate, $entry-&gt;getDateCreated())</code>
      <code>$this-&gt;assertEquals($edate, $entry-&gt;getDateCreated())</code>
      <code>$this-&gt;assertEquals($edate, $entry-&gt;getDateModified())</code>
      <code>$this-&gt;assertEquals($edate, $entry-&gt;getDateModified())</code>
      <code>$this-&gt;assertEquals($edate, $entry-&gt;getDateModified())</code>
      <code>$this-&gt;assertEquals($expected, $entry-&gt;getEnclosure())</code>
      <code>$this-&gt;assertEquals($expected, $entry-&gt;getEnclosure())</code>
      <code>$this-&gt;assertEquals($this-&gt;expectedCats, (array) $entry-&gt;getCategories())</code>
      <code>$this-&gt;assertEquals($this-&gt;expectedCats, (array) $entry-&gt;getCategories())</code>
      <code>$this-&gt;assertEquals($this-&gt;expectedCatsDc, (array) $entry-&gt;getCategories())</code>
      <code>$this-&gt;assertEquals($this-&gt;expectedCatsDc, (array) $entry-&gt;getCategories())</code>
      <code>$this-&gt;assertEquals('1', $entry-&gt;getId())</code>
      <code>$this-&gt;assertEquals('1', $entry-&gt;getId())</code>
      <code>$this-&gt;assertEquals('&lt;p class="x:"&gt;&lt;em&gt;Entry Content &amp;amp;x:&lt;/em&gt;&lt;/p&gt;', $entry-&gt;getContent())</code>
      <code>$this-&gt;assertEquals('&lt;p&gt;Entry Content &amp;amp;&lt;/p&gt;', $entry-&gt;getContent())</code>
      <code>$this-&gt;assertEquals('&lt;p&gt;Entry Content &amp;amp;&lt;/p&gt;', $entry-&gt;getContent())</code>
      <code>$this-&gt;assertEquals('Entry Content &amp;amp;', $entry-&gt;getContent())</code>
      <code>$this-&gt;assertEquals('Entry Content &amp;amp;x:', $entry-&gt;getContent())</code>
      <code>$this-&gt;assertEquals('Entry Content', $entry-&gt;getContent())</code>
      <code>$this-&gt;assertEquals('Entry Description', $entry-&gt;getDescription())</code>
      <code>$this-&gt;assertEquals('Entry Description', $entry-&gt;getDescription())</code>
      <code>$this-&gt;assertEquals('Entry Title', $entry-&gt;getTitle())</code>
      <code>$this-&gt;assertEquals('Entry Title', $entry-&gt;getTitle())</code>
      <code>$this-&gt;assertEquals('http://www.example.com', $entry-&gt;getBaseUrl())</code>
      <code>$this-&gt;assertEquals('http://www.example.com/', $entry-&gt;getBaseUrl())</code>
      <code>$this-&gt;assertEquals('http://www.example.com/entry', $entry-&gt;getLink())</code>
      <code>$this-&gt;assertEquals('http://www.example.com/entry', $entry-&gt;getLink())</code>
      <code>$this-&gt;assertEquals('http://www.example.com/entry', $entry-&gt;getLink())</code>
      <code>$this-&gt;assertEquals('http://www.example.com/entry', $entry-&gt;getLink())</code>
      <code>$this-&gt;assertEquals('http://www.example.com/entry/comments', $entry-&gt;getCommentLink())</code>
      <code>$this-&gt;assertEquals('http://www.example.com/entry/comments', $entry-&gt;getCommentLink())</code>
      <code>$this-&gt;assertEquals('http://www.example.com/entry/comments', $entry-&gt;getCommentLink())</code>
      <code>$this-&gt;assertEquals(['topic1', 'Cat &amp; Dog'], array_values($entry-&gt;getCategories()-&gt;getValues()))</code>
      <code>$this-&gt;assertEquals(['topic1', 'Cat &amp; Dog'], array_values($entry-&gt;getCategories()-&gt;getValues()))</code>
      <code>$this-&gt;assertEquals(['topic1', 'topic2'], array_values($entry-&gt;getCategories()-&gt;getValues()))</code>
      <code>$this-&gt;assertEquals(['topic1', 'topic2'], array_values($entry-&gt;getCategories()-&gt;getValues()))</code>
      <code>$this-&gt;assertEquals([], (array) $entry-&gt;getCategories())</code>
      <code>$this-&gt;assertEquals([], (array) $entry-&gt;getCategories())</code>
      <code>$this-&gt;assertEquals([], array_values($entry-&gt;getCategories()-&gt;getValues()))</code>
      <code>$this-&gt;assertEquals([], array_values($entry-&gt;getCategories()-&gt;getValues()))</code>
    </ReservedWord>
  </file>
  <file src="test/Reader/Entry/CommonTest.php">
    <MissingPropertyType occurrences="1">
      <code>$feedSamplePath</code>
    </MissingPropertyType>
    <MissingReturnType occurrences="12">
      <code>setUp</code>
      <code>testFeedEntryCanDetectFeedType</code>
      <code>testFeedEntryCanSetAnyType</code>
      <code>testGetsDomDocumentObject</code>
      <code>testGetsDomElementObject</code>
      <code>testGetsDomXpathObject</code>
      <code>testGetsNamedExtension</code>
      <code>testGetsXpathPrefixString</code>
      <code>testReturnsEncodingOfFeed</code>
      <code>testReturnsEncodingOfFeedAsUtf8IfUndefined</code>
      <code>testReturnsNullIfExtensionDoesNotExist</code>
      <code>testSaveXmlOutputsXmlStringForEntry</code>
    </MissingReturnType>
    <MixedArgument occurrences="1">
      <code>$entry-&gt;getElement()-&gt;tagName</code>
    </MixedArgument>
    <MixedAssignment occurrences="11">
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
    </MixedAssignment>
    <MixedMethodCall occurrences="14">
      <code>getDomDocument</code>
      <code>getElement</code>
      <code>getElement</code>
      <code>getElement</code>
      <code>getEncoding</code>
      <code>getEncoding</code>
      <code>getExtension</code>
      <code>getExtension</code>
      <code>getId</code>
      <code>getId</code>
      <code>getType</code>
      <code>getXpath</code>
      <code>getXpathPrefix</code>
      <code>saveXml</code>
    </MixedMethodCall>
    <MixedOperand occurrences="12">
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
    </MixedOperand>
    <MixedPropertyFetch occurrences="1">
      <code>$entry-&gt;getElement()-&gt;tagName</code>
    </MixedPropertyFetch>
    <ReservedWord occurrences="11">
      <code>$this-&gt;assertEquals($entry-&gt;getType(), $stub-&gt;getType())</code>
      <code>$this-&gt;assertEquals($expected, $entry-&gt;saveXml())</code>
      <code>$this-&gt;assertEquals($stub-&gt;getType(), Reader\Reader::TYPE_ANY)</code>
      <code>$this-&gt;assertEquals('//atom:entry[1]', $entry-&gt;getXpathPrefix())</code>
      <code>$this-&gt;assertEquals('UTF-8', $entry-&gt;getEncoding())</code>
      <code>$this-&gt;assertEquals('UTF-8', $entry-&gt;getEncoding())</code>
      <code>$this-&gt;assertEquals(null, $entry-&gt;getExtension('Foo'))</code>
      <code>$this-&gt;assertInstanceOf(DOMDocument::class, $entry-&gt;getDomDocument())</code>
      <code>$this-&gt;assertInstanceOf(DOMElement::class, $entry-&gt;getElement())</code>
      <code>$this-&gt;assertInstanceOf(DOMXPath::class, $entry-&gt;getXpath())</code>
      <code>$this-&gt;assertInstanceOf(Entry::class, $entry-&gt;getExtension('Atom'))</code>
    </ReservedWord>
    <UndefinedInterfaceMethod occurrences="2">
      <code>getType</code>
      <code>getType</code>
    </UndefinedInterfaceMethod>
  </file>
  <file src="test/Reader/Entry/RssTest.php">
    <MissingParamType occurrences="2">
      <code>$edate</code>
      <code>$path</code>
    </MissingParamType>
    <MissingPropertyType occurrences="4">
      <code>$expectedCats</code>
      <code>$expectedCatsAtom</code>
      <code>$expectedCatsRdf</code>
      <code>$feedSamplePath</code>
    </MissingPropertyType>
    <MissingReturnType occurrences="281">
      <code>dateModifiedProvider</code>
      <code>setUp</code>
      <code>testGetsAuthorFromRss090</code>
      <code>testGetsAuthorFromRss090Dc10</code>
      <code>testGetsAuthorFromRss090Dc11</code>
      <code>testGetsAuthorFromRss090None</code>
      <code>testGetsAuthorFromRss091</code>
      <code>testGetsAuthorFromRss091Dc10</code>
      <code>testGetsAuthorFromRss091Dc11</code>
      <code>testGetsAuthorFromRss091None</code>
      <code>testGetsAuthorFromRss092</code>
      <code>testGetsAuthorFromRss092Dc10</code>
      <code>testGetsAuthorFromRss092Dc11</code>
      <code>testGetsAuthorFromRss092None</code>
      <code>testGetsAuthorFromRss093</code>
      <code>testGetsAuthorFromRss093Dc10</code>
      <code>testGetsAuthorFromRss093Dc11</code>
      <code>testGetsAuthorFromRss093None</code>
      <code>testGetsAuthorFromRss094</code>
      <code>testGetsAuthorFromRss094Dc10</code>
      <code>testGetsAuthorFromRss094Dc11</code>
      <code>testGetsAuthorFromRss094None</code>
      <code>testGetsAuthorFromRss10</code>
      <code>testGetsAuthorFromRss10Dc10</code>
      <code>testGetsAuthorFromRss10Dc11</code>
      <code>testGetsAuthorFromRss10None</code>
      <code>testGetsAuthorFromRss20</code>
      <code>testGetsAuthorFromRss20Dc10</code>
      <code>testGetsAuthorFromRss20Dc11</code>
      <code>testGetsAuthorFromRss20None</code>
      <code>testGetsAuthorsFromRss090</code>
      <code>testGetsAuthorsFromRss090Dc10</code>
      <code>testGetsAuthorsFromRss090Dc11</code>
      <code>testGetsAuthorsFromRss090None</code>
      <code>testGetsAuthorsFromRss091</code>
      <code>testGetsAuthorsFromRss091Dc10</code>
      <code>testGetsAuthorsFromRss091Dc11</code>
      <code>testGetsAuthorsFromRss091None</code>
      <code>testGetsAuthorsFromRss092</code>
      <code>testGetsAuthorsFromRss092Dc10</code>
      <code>testGetsAuthorsFromRss092Dc11</code>
      <code>testGetsAuthorsFromRss092None</code>
      <code>testGetsAuthorsFromRss093</code>
      <code>testGetsAuthorsFromRss093Dc10</code>
      <code>testGetsAuthorsFromRss093Dc11</code>
      <code>testGetsAuthorsFromRss093None</code>
      <code>testGetsAuthorsFromRss094</code>
      <code>testGetsAuthorsFromRss094Dc10</code>
      <code>testGetsAuthorsFromRss094Dc11</code>
      <code>testGetsAuthorsFromRss094None</code>
      <code>testGetsAuthorsFromRss10</code>
      <code>testGetsAuthorsFromRss10Dc10</code>
      <code>testGetsAuthorsFromRss10Dc11</code>
      <code>testGetsAuthorsFromRss10None</code>
      <code>testGetsAuthorsFromRss20</code>
      <code>testGetsAuthorsFromRss20Dc10</code>
      <code>testGetsAuthorsFromRss20Dc11</code>
      <code>testGetsAuthorsFromRss20None</code>
      <code>testGetsCategoriesFromRss090Atom10</code>
      <code>testGetsCategoriesFromRss090Dc10</code>
      <code>testGetsCategoriesFromRss090Dc11</code>
      <code>testGetsCategoriesFromRss090None</code>
      <code>testGetsCategoriesFromRss091Atom10</code>
      <code>testGetsCategoriesFromRss091Dc10</code>
      <code>testGetsCategoriesFromRss091Dc11</code>
      <code>testGetsCategoriesFromRss091None</code>
      <code>testGetsCategoriesFromRss092Atom10</code>
      <code>testGetsCategoriesFromRss092Dc10</code>
      <code>testGetsCategoriesFromRss092Dc11</code>
      <code>testGetsCategoriesFromRss092None</code>
      <code>testGetsCategoriesFromRss093Atom10</code>
      <code>testGetsCategoriesFromRss093Dc10</code>
      <code>testGetsCategoriesFromRss093Dc11</code>
      <code>testGetsCategoriesFromRss093None</code>
      <code>testGetsCategoriesFromRss094Atom10</code>
      <code>testGetsCategoriesFromRss094Dc10</code>
      <code>testGetsCategoriesFromRss094Dc11</code>
      <code>testGetsCategoriesFromRss094None</code>
      <code>testGetsCategoriesFromRss10Atom10</code>
      <code>testGetsCategoriesFromRss10Dc10</code>
      <code>testGetsCategoriesFromRss10Dc11</code>
      <code>testGetsCategoriesFromRss10None</code>
      <code>testGetsCategoriesFromRss20</code>
      <code>testGetsCategoriesFromRss20None</code>
      <code>testGetsCommentCountFromRss090Atom10</code>
      <code>testGetsCommentCountFromRss090None</code>
      <code>testGetsCommentCountFromRss090Slash10</code>
      <code>testGetsCommentCountFromRss090Thread10</code>
      <code>testGetsCommentCountFromRss091Atom10</code>
      <code>testGetsCommentCountFromRss091None</code>
      <code>testGetsCommentCountFromRss091Slash10</code>
      <code>testGetsCommentCountFromRss091Thread10</code>
      <code>testGetsCommentCountFromRss092Atom10</code>
      <code>testGetsCommentCountFromRss092None</code>
      <code>testGetsCommentCountFromRss092Slash10</code>
      <code>testGetsCommentCountFromRss092Thread10</code>
      <code>testGetsCommentCountFromRss093Atom10</code>
      <code>testGetsCommentCountFromRss093None</code>
      <code>testGetsCommentCountFromRss093Slash10</code>
      <code>testGetsCommentCountFromRss093Thread10</code>
      <code>testGetsCommentCountFromRss094Atom10</code>
      <code>testGetsCommentCountFromRss094None</code>
      <code>testGetsCommentCountFromRss094Slash10</code>
      <code>testGetsCommentCountFromRss094Thread10</code>
      <code>testGetsCommentCountFromRss10Atom10</code>
      <code>testGetsCommentCountFromRss10None</code>
      <code>testGetsCommentCountFromRss10Slash10</code>
      <code>testGetsCommentCountFromRss10Thread10</code>
      <code>testGetsCommentCountFromRss20Atom10</code>
      <code>testGetsCommentCountFromRss20None</code>
      <code>testGetsCommentCountFromRss20Slash10</code>
      <code>testGetsCommentCountFromRss20Thread10</code>
      <code>testGetsCommentFeedLinkFromRss090Atom10</code>
      <code>testGetsCommentFeedLinkFromRss090None</code>
      <code>testGetsCommentFeedLinkFromRss090WellFormedWeb10</code>
      <code>testGetsCommentFeedLinkFromRss091Atom10</code>
      <code>testGetsCommentFeedLinkFromRss091None</code>
      <code>testGetsCommentFeedLinkFromRss091WellFormedWeb10</code>
      <code>testGetsCommentFeedLinkFromRss092Atom10</code>
      <code>testGetsCommentFeedLinkFromRss092None</code>
      <code>testGetsCommentFeedLinkFromRss092WellFormedWeb10</code>
      <code>testGetsCommentFeedLinkFromRss093Atom10</code>
      <code>testGetsCommentFeedLinkFromRss093None</code>
      <code>testGetsCommentFeedLinkFromRss093WellFormedWeb10</code>
      <code>testGetsCommentFeedLinkFromRss094Atom10</code>
      <code>testGetsCommentFeedLinkFromRss094None</code>
      <code>testGetsCommentFeedLinkFromRss094WellFormedWeb10</code>
      <code>testGetsCommentFeedLinkFromRss10Atom10</code>
      <code>testGetsCommentFeedLinkFromRss10None</code>
      <code>testGetsCommentFeedLinkFromRss10WellFormedWeb10</code>
      <code>testGetsCommentFeedLinkFromRss20Atom10</code>
      <code>testGetsCommentFeedLinkFromRss20None</code>
      <code>testGetsCommentFeedLinkFromRss20WellFormedWeb10</code>
      <code>testGetsCommentLinkFromRss090Atom10</code>
      <code>testGetsCommentLinkFromRss090None</code>
      <code>testGetsCommentLinkFromRss091</code>
      <code>testGetsCommentLinkFromRss091Atom10</code>
      <code>testGetsCommentLinkFromRss091None</code>
      <code>testGetsCommentLinkFromRss092</code>
      <code>testGetsCommentLinkFromRss092Atom10</code>
      <code>testGetsCommentLinkFromRss092None</code>
      <code>testGetsCommentLinkFromRss093</code>
      <code>testGetsCommentLinkFromRss093Atom10</code>
      <code>testGetsCommentLinkFromRss093None</code>
      <code>testGetsCommentLinkFromRss094</code>
      <code>testGetsCommentLinkFromRss094Atom10</code>
      <code>testGetsCommentLinkFromRss094None</code>
      <code>testGetsCommentLinkFromRss10Atom10</code>
      <code>testGetsCommentLinkFromRss10None</code>
      <code>testGetsCommentLinkFromRss20</code>
      <code>testGetsCommentLinkFromRss20Atom10</code>
      <code>testGetsCommentLinkFromRss20None</code>
      <code>testGetsContentFromRss090</code>
      <code>testGetsContentFromRss090Dc10</code>
      <code>testGetsContentFromRss090None</code>
      <code>testGetsContentFromRss091</code>
      <code>testGetsContentFromRss091Dc10</code>
      <code>testGetsContentFromRss091None</code>
      <code>testGetsContentFromRss092</code>
      <code>testGetsContentFromRss092Dc10</code>
      <code>testGetsContentFromRss092None</code>
      <code>testGetsContentFromRss093</code>
      <code>testGetsContentFromRss093Dc10</code>
      <code>testGetsContentFromRss093None</code>
      <code>testGetsContentFromRss094</code>
      <code>testGetsContentFromRss094Dc10</code>
      <code>testGetsContentFromRss094None</code>
      <code>testGetsContentFromRss10</code>
      <code>testGetsContentFromRss10Dc10</code>
      <code>testGetsContentFromRss10None</code>
      <code>testGetsContentFromRss20</code>
      <code>testGetsContentFromRss20Dc10</code>
      <code>testGetsContentFromRss20None</code>
      <code>testGetsDateModified</code>
      <code>testGetsDescriptionFromRss090</code>
      <code>testGetsDescriptionFromRss090Dc10</code>
      <code>testGetsDescriptionFromRss090Dc11</code>
      <code>testGetsDescriptionFromRss090None</code>
      <code>testGetsDescriptionFromRss091</code>
      <code>testGetsDescriptionFromRss091Dc10</code>
      <code>testGetsDescriptionFromRss091Dc11</code>
      <code>testGetsDescriptionFromRss091None</code>
      <code>testGetsDescriptionFromRss092</code>
      <code>testGetsDescriptionFromRss092Dc10</code>
      <code>testGetsDescriptionFromRss092Dc11</code>
      <code>testGetsDescriptionFromRss092None</code>
      <code>testGetsDescriptionFromRss093</code>
      <code>testGetsDescriptionFromRss093Dc10</code>
      <code>testGetsDescriptionFromRss093Dc11</code>
      <code>testGetsDescriptionFromRss093None</code>
      <code>testGetsDescriptionFromRss094</code>
      <code>testGetsDescriptionFromRss094Dc10</code>
      <code>testGetsDescriptionFromRss094Dc11</code>
      <code>testGetsDescriptionFromRss094None</code>
      <code>testGetsDescriptionFromRss10</code>
      <code>testGetsDescriptionFromRss10Dc10</code>
      <code>testGetsDescriptionFromRss10Dc11</code>
      <code>testGetsDescriptionFromRss10None</code>
      <code>testGetsDescriptionFromRss20</code>
      <code>testGetsDescriptionFromRss20Dc10</code>
      <code>testGetsDescriptionFromRss20Dc11</code>
      <code>testGetsDescriptionFromRss20None</code>
      <code>testGetsEnclosureFromRss10</code>
      <code>testGetsEnclosureFromRss20</code>
      <code>testGetsIdFromRss090</code>
      <code>testGetsIdFromRss090Dc10</code>
      <code>testGetsIdFromRss090Dc11</code>
      <code>testGetsIdFromRss090None</code>
      <code>testGetsIdFromRss090Title</code>
      <code>testGetsIdFromRss091</code>
      <code>testGetsIdFromRss091Dc10</code>
      <code>testGetsIdFromRss091Dc11</code>
      <code>testGetsIdFromRss091None</code>
      <code>testGetsIdFromRss091Title</code>
      <code>testGetsIdFromRss092</code>
      <code>testGetsIdFromRss092Dc10</code>
      <code>testGetsIdFromRss092Dc11</code>
      <code>testGetsIdFromRss092None</code>
      <code>testGetsIdFromRss092Title</code>
      <code>testGetsIdFromRss093</code>
      <code>testGetsIdFromRss093Dc10</code>
      <code>testGetsIdFromRss093Dc11</code>
      <code>testGetsIdFromRss093None</code>
      <code>testGetsIdFromRss093Title</code>
      <code>testGetsIdFromRss094</code>
      <code>testGetsIdFromRss094Dc10</code>
      <code>testGetsIdFromRss094Dc11</code>
      <code>testGetsIdFromRss094None</code>
      <code>testGetsIdFromRss094Title</code>
      <code>testGetsIdFromRss10</code>
      <code>testGetsIdFromRss10Dc10</code>
      <code>testGetsIdFromRss10Dc11</code>
      <code>testGetsIdFromRss10None</code>
      <code>testGetsIdFromRss10Title</code>
      <code>testGetsIdFromRss20</code>
      <code>testGetsIdFromRss20Dc10</code>
      <code>testGetsIdFromRss20Dc11</code>
      <code>testGetsIdFromRss20None</code>
      <code>testGetsIdFromRss20Title</code>
      <code>testGetsLinkFromRss090</code>
      <code>testGetsLinkFromRss090None</code>
      <code>testGetsLinkFromRss091</code>
      <code>testGetsLinkFromRss091None</code>
      <code>testGetsLinkFromRss092</code>
      <code>testGetsLinkFromRss092None</code>
      <code>testGetsLinkFromRss093</code>
      <code>testGetsLinkFromRss093None</code>
      <code>testGetsLinkFromRss094</code>
      <code>testGetsLinkFromRss094None</code>
      <code>testGetsLinkFromRss10</code>
      <code>testGetsLinkFromRss10None</code>
      <code>testGetsLinkFromRss20</code>
      <code>testGetsLinkFromRss20None</code>
      <code>testGetsTitleFromRss090</code>
      <code>testGetsTitleFromRss090Dc10</code>
      <code>testGetsTitleFromRss090Dc11</code>
      <code>testGetsTitleFromRss090None</code>
      <code>testGetsTitleFromRss091</code>
      <code>testGetsTitleFromRss091Dc10</code>
      <code>testGetsTitleFromRss091Dc11</code>
      <code>testGetsTitleFromRss091None</code>
      <code>testGetsTitleFromRss092</code>
      <code>testGetsTitleFromRss092Dc10</code>
      <code>testGetsTitleFromRss092Dc11</code>
      <code>testGetsTitleFromRss092None</code>
      <code>testGetsTitleFromRss093</code>
      <code>testGetsTitleFromRss093Dc10</code>
      <code>testGetsTitleFromRss093Dc11</code>
      <code>testGetsTitleFromRss093None</code>
      <code>testGetsTitleFromRss094</code>
      <code>testGetsTitleFromRss094Dc10</code>
      <code>testGetsTitleFromRss094Dc11</code>
      <code>testGetsTitleFromRss094None</code>
      <code>testGetsTitleFromRss10</code>
      <code>testGetsTitleFromRss10Dc10</code>
      <code>testGetsTitleFromRss10Dc11</code>
      <code>testGetsTitleFromRss10None</code>
      <code>testGetsTitleFromRss20</code>
      <code>testGetsTitleFromRss20Dc10</code>
      <code>testGetsTitleFromRss20Dc11</code>
      <code>testGetsTitleFromRss20None</code>
    </MissingReturnType>
    <MixedArgument occurrences="26">
      <code>$entry-&gt;getCategories()-&gt;getValues()</code>
      <code>$entry-&gt;getCategories()-&gt;getValues()</code>
      <code>$entry-&gt;getCategories()-&gt;getValues()</code>
      <code>$entry-&gt;getCategories()-&gt;getValues()</code>
      <code>$entry-&gt;getCategories()-&gt;getValues()</code>
      <code>$entry-&gt;getCategories()-&gt;getValues()</code>
      <code>$entry-&gt;getCategories()-&gt;getValues()</code>
      <code>$entry-&gt;getCategories()-&gt;getValues()</code>
      <code>$entry-&gt;getCategories()-&gt;getValues()</code>
      <code>$entry-&gt;getCategories()-&gt;getValues()</code>
      <code>$entry-&gt;getCategories()-&gt;getValues()</code>
      <code>$entry-&gt;getCategories()-&gt;getValues()</code>
      <code>$entry-&gt;getCategories()-&gt;getValues()</code>
      <code>$entry-&gt;getCategories()-&gt;getValues()</code>
      <code>$entry-&gt;getCategories()-&gt;getValues()</code>
      <code>$entry-&gt;getCategories()-&gt;getValues()</code>
      <code>$entry-&gt;getCategories()-&gt;getValues()</code>
      <code>$entry-&gt;getCategories()-&gt;getValues()</code>
      <code>$entry-&gt;getCategories()-&gt;getValues()</code>
      <code>$entry-&gt;getCategories()-&gt;getValues()</code>
      <code>$entry-&gt;getCategories()-&gt;getValues()</code>
      <code>$entry-&gt;getCategories()-&gt;getValues()</code>
      <code>$entry-&gt;getCategories()-&gt;getValues()</code>
      <code>$entry-&gt;getCategories()-&gt;getValues()</code>
      <code>$entry-&gt;getCategories()-&gt;getValues()</code>
      <code>$entry-&gt;getCategories()-&gt;getValues()</code>
    </MixedArgument>
    <MixedAssignment occurrences="279">
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
    </MixedAssignment>
    <MixedMethodCall occurrences="361">
      <code>getAuthor</code>
      <code>getAuthor</code>
      <code>getAuthor</code>
      <code>getAuthor</code>
      <code>getAuthor</code>
      <code>getAuthor</code>
      <code>getAuthor</code>
      <code>getAuthor</code>
      <code>getAuthor</code>
      <code>getAuthor</code>
      <code>getAuthor</code>
      <code>getAuthor</code>
      <code>getAuthor</code>
      <code>getAuthor</code>
      <code>getAuthor</code>
      <code>getAuthor</code>
      <code>getAuthor</code>
      <code>getAuthor</code>
      <code>getAuthor</code>
      <code>getAuthor</code>
      <code>getAuthor</code>
      <code>getAuthor</code>
      <code>getAuthor</code>
      <code>getAuthor</code>
      <code>getAuthor</code>
      <code>getAuthor</code>
      <code>getAuthor</code>
      <code>getAuthor</code>
      <code>getAuthors</code>
      <code>getAuthors</code>
      <code>getAuthors</code>
      <code>getAuthors</code>
      <code>getAuthors</code>
      <code>getAuthors</code>
      <code>getAuthors</code>
      <code>getAuthors</code>
      <code>getAuthors</code>
      <code>getAuthors</code>
      <code>getAuthors</code>
      <code>getAuthors</code>
      <code>getAuthors</code>
      <code>getAuthors</code>
      <code>getAuthors</code>
      <code>getAuthors</code>
      <code>getAuthors</code>
      <code>getAuthors</code>
      <code>getAuthors</code>
      <code>getAuthors</code>
      <code>getAuthors</code>
      <code>getAuthors</code>
      <code>getAuthors</code>
      <code>getAuthors</code>
      <code>getAuthors</code>
      <code>getAuthors</code>
      <code>getAuthors</code>
      <code>getAuthors</code>
      <code>getAuthors</code>
      <code>getAuthors</code>
      <code>getAuthors</code>
      <code>getAuthors</code>
      <code>getAuthors</code>
      <code>getAuthors</code>
      <code>getAuthors</code>
      <code>getAuthors</code>
      <code>getAuthors</code>
      <code>getAuthors</code>
      <code>getAuthors</code>
      <code>getAuthors</code>
      <code>getAuthors</code>
      <code>getAuthors</code>
      <code>getAuthors</code>
      <code>getCategories</code>
      <code>getCategories</code>
      <code>getCategories</code>
      <code>getCategories</code>
      <code>getCategories</code>
      <code>getCategories</code>
      <code>getCategories</code>
      <code>getCategories</code>
      <code>getCategories</code>
      <code>getCategories</code>
      <code>getCategories</code>
      <code>getCategories</code>
      <code>getCategories</code>
      <code>getCategories</code>
      <code>getCategories</code>
      <code>getCategories</code>
      <code>getCategories</code>
      <code>getCategories</code>
      <code>getCategories</code>
      <code>getCategories</code>
      <code>getCategories</code>
      <code>getCategories</code>
      <code>getCategories</code>
      <code>getCategories</code>
      <code>getCategories</code>
      <code>getCategories</code>
      <code>getCategories</code>
      <code>getCategories</code>
      <code>getCategories</code>
      <code>getCategories</code>
      <code>getCategories</code>
      <code>getCategories</code>
      <code>getCategories</code>
      <code>getCategories</code>
      <code>getCategories</code>
      <code>getCategories</code>
      <code>getCategories</code>
      <code>getCategories</code>
      <code>getCategories</code>
      <code>getCategories</code>
      <code>getCategories</code>
      <code>getCategories</code>
      <code>getCategories</code>
      <code>getCategories</code>
      <code>getCategories</code>
      <code>getCategories</code>
      <code>getCategories</code>
      <code>getCategories</code>
      <code>getCategories</code>
      <code>getCategories</code>
      <code>getCategories</code>
      <code>getCategories</code>
      <code>getCommentCount</code>
      <code>getCommentCount</code>
      <code>getCommentCount</code>
      <code>getCommentCount</code>
      <code>getCommentCount</code>
      <code>getCommentCount</code>
      <code>getCommentCount</code>
      <code>getCommentCount</code>
      <code>getCommentCount</code>
      <code>getCommentCount</code>
      <code>getCommentCount</code>
      <code>getCommentCount</code>
      <code>getCommentCount</code>
      <code>getCommentCount</code>
      <code>getCommentCount</code>
      <code>getCommentCount</code>
      <code>getCommentCount</code>
      <code>getCommentCount</code>
      <code>getCommentCount</code>
      <code>getCommentCount</code>
      <code>getCommentCount</code>
      <code>getCommentCount</code>
      <code>getCommentCount</code>
      <code>getCommentCount</code>
      <code>getCommentCount</code>
      <code>getCommentCount</code>
      <code>getCommentCount</code>
      <code>getCommentCount</code>
      <code>getCommentFeedLink</code>
      <code>getCommentFeedLink</code>
      <code>getCommentFeedLink</code>
      <code>getCommentFeedLink</code>
      <code>getCommentFeedLink</code>
      <code>getCommentFeedLink</code>
      <code>getCommentFeedLink</code>
      <code>getCommentFeedLink</code>
      <code>getCommentFeedLink</code>
      <code>getCommentFeedLink</code>
      <code>getCommentFeedLink</code>
      <code>getCommentFeedLink</code>
      <code>getCommentFeedLink</code>
      <code>getCommentFeedLink</code>
      <code>getCommentFeedLink</code>
      <code>getCommentFeedLink</code>
      <code>getCommentFeedLink</code>
      <code>getCommentFeedLink</code>
      <code>getCommentFeedLink</code>
      <code>getCommentFeedLink</code>
      <code>getCommentFeedLink</code>
      <code>getCommentLink</code>
      <code>getCommentLink</code>
      <code>getCommentLink</code>
      <code>getCommentLink</code>
      <code>getCommentLink</code>
      <code>getCommentLink</code>
      <code>getCommentLink</code>
      <code>getCommentLink</code>
      <code>getCommentLink</code>
      <code>getCommentLink</code>
      <code>getCommentLink</code>
      <code>getCommentLink</code>
      <code>getCommentLink</code>
      <code>getCommentLink</code>
      <code>getCommentLink</code>
      <code>getCommentLink</code>
      <code>getCommentLink</code>
      <code>getCommentLink</code>
      <code>getCommentLink</code>
      <code>getContent</code>
      <code>getContent</code>
      <code>getContent</code>
      <code>getContent</code>
      <code>getContent</code>
      <code>getContent</code>
      <code>getContent</code>
      <code>getContent</code>
      <code>getContent</code>
      <code>getContent</code>
      <code>getContent</code>
      <code>getContent</code>
      <code>getContent</code>
      <code>getContent</code>
      <code>getContent</code>
      <code>getContent</code>
      <code>getContent</code>
      <code>getContent</code>
      <code>getContent</code>
      <code>getContent</code>
      <code>getContent</code>
      <code>getDateModified</code>
      <code>getDescription</code>
      <code>getDescription</code>
      <code>getDescription</code>
      <code>getDescription</code>
      <code>getDescription</code>
      <code>getDescription</code>
      <code>getDescription</code>
      <code>getDescription</code>
      <code>getDescription</code>
      <code>getDescription</code>
      <code>getDescription</code>
      <code>getDescription</code>
      <code>getDescription</code>
      <code>getDescription</code>
      <code>getDescription</code>
      <code>getDescription</code>
      <code>getDescription</code>
      <code>getDescription</code>
      <code>getDescription</code>
      <code>getDescription</code>
      <code>getDescription</code>
      <code>getDescription</code>
      <code>getDescription</code>
      <code>getDescription</code>
      <code>getDescription</code>
      <code>getDescription</code>
      <code>getDescription</code>
      <code>getDescription</code>
      <code>getEnclosure</code>
      <code>getEnclosure</code>
      <code>getId</code>
      <code>getId</code>
      <code>getId</code>
      <code>getId</code>
      <code>getId</code>
      <code>getId</code>
      <code>getId</code>
      <code>getId</code>
      <code>getId</code>
      <code>getId</code>
      <code>getId</code>
      <code>getId</code>
      <code>getId</code>
      <code>getId</code>
      <code>getId</code>
      <code>getId</code>
      <code>getId</code>
      <code>getId</code>
      <code>getId</code>
      <code>getId</code>
      <code>getId</code>
      <code>getId</code>
      <code>getId</code>
      <code>getId</code>
      <code>getId</code>
      <code>getId</code>
      <code>getId</code>
      <code>getId</code>
      <code>getId</code>
      <code>getId</code>
      <code>getId</code>
      <code>getId</code>
      <code>getId</code>
      <code>getId</code>
      <code>getId</code>
      <code>getLink</code>
      <code>getLink</code>
      <code>getLink</code>
      <code>getLink</code>
      <code>getLink</code>
      <code>getLink</code>
      <code>getLink</code>
      <code>getLink</code>
      <code>getLink</code>
      <code>getLink</code>
      <code>getLink</code>
      <code>getLink</code>
      <code>getLink</code>
      <code>getLink</code>
      <code>getTitle</code>
      <code>getTitle</code>
      <code>getTitle</code>
      <code>getTitle</code>
      <code>getTitle</code>
      <code>getTitle</code>
      <code>getTitle</code>
      <code>getTitle</code>
      <code>getTitle</code>
      <code>getTitle</code>
      <code>getTitle</code>
      <code>getTitle</code>
      <code>getTitle</code>
      <code>getTitle</code>
      <code>getTitle</code>
      <code>getTitle</code>
      <code>getTitle</code>
      <code>getTitle</code>
      <code>getTitle</code>
      <code>getTitle</code>
      <code>getTitle</code>
      <code>getTitle</code>
      <code>getTitle</code>
      <code>getTitle</code>
      <code>getTitle</code>
      <code>getTitle</code>
      <code>getTitle</code>
      <code>getTitle</code>
      <code>getValues</code>
      <code>getValues</code>
      <code>getValues</code>
      <code>getValues</code>
      <code>getValues</code>
      <code>getValues</code>
      <code>getValues</code>
      <code>getValues</code>
      <code>getValues</code>
      <code>getValues</code>
      <code>getValues</code>
      <code>getValues</code>
      <code>getValues</code>
      <code>getValues</code>
      <code>getValues</code>
      <code>getValues</code>
      <code>getValues</code>
      <code>getValues</code>
      <code>getValues</code>
      <code>getValues</code>
      <code>getValues</code>
      <code>getValues</code>
      <code>getValues</code>
      <code>getValues</code>
      <code>getValues</code>
      <code>getValues</code>
      <code>getValues</code>
      <code>getValues</code>
      <code>getValues</code>
      <code>getValues</code>
      <code>getValues</code>
      <code>getValues</code>
      <code>getValues</code>
      <code>getValues</code>
      <code>getValues</code>
      <code>getValues</code>
      <code>getValues</code>
      <code>getValues</code>
      <code>getValues</code>
      <code>getValues</code>
      <code>getValues</code>
    </MixedMethodCall>
    <MixedOperand occurrences="279">
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
    </MixedOperand>
    <ReservedWord occurrences="320">
      <code>$this-&gt;assertEquals($edate, $entry-&gt;getDateModified())</code>
      <code>$this-&gt;assertEquals($expected, $entry-&gt;getEnclosure())</code>
      <code>$this-&gt;assertEquals($this-&gt;expectedCats, (array) $entry-&gt;getCategories())</code>
      <code>$this-&gt;assertEquals($this-&gt;expectedCatsAtom, (array) $entry-&gt;getCategories())</code>
      <code>$this-&gt;assertEquals($this-&gt;expectedCatsAtom, (array) $entry-&gt;getCategories())</code>
      <code>$this-&gt;assertEquals($this-&gt;expectedCatsAtom, (array) $entry-&gt;getCategories())</code>
      <code>$this-&gt;assertEquals($this-&gt;expectedCatsAtom, (array) $entry-&gt;getCategories())</code>
      <code>$this-&gt;assertEquals($this-&gt;expectedCatsAtom, (array) $entry-&gt;getCategories())</code>
      <code>$this-&gt;assertEquals($this-&gt;expectedCatsAtom, (array) $entry-&gt;getCategories())</code>
      <code>$this-&gt;assertEquals($this-&gt;expectedCatsRdf, (array) $entry-&gt;getCategories())</code>
      <code>$this-&gt;assertEquals($this-&gt;expectedCatsRdf, (array) $entry-&gt;getCategories())</code>
      <code>$this-&gt;assertEquals($this-&gt;expectedCatsRdf, (array) $entry-&gt;getCategories())</code>
      <code>$this-&gt;assertEquals($this-&gt;expectedCatsRdf, (array) $entry-&gt;getCategories())</code>
      <code>$this-&gt;assertEquals($this-&gt;expectedCatsRdf, (array) $entry-&gt;getCategories())</code>
      <code>$this-&gt;assertEquals($this-&gt;expectedCatsRdf, (array) $entry-&gt;getCategories())</code>
      <code>$this-&gt;assertEquals($this-&gt;expectedCatsRdf, (array) $entry-&gt;getCategories())</code>
      <code>$this-&gt;assertEquals($this-&gt;expectedCatsRdf, (array) $entry-&gt;getCategories())</code>
      <code>$this-&gt;assertEquals($this-&gt;expectedCatsRdf, (array) $entry-&gt;getCategories())</code>
      <code>$this-&gt;assertEquals($this-&gt;expectedCatsRdf, (array) $entry-&gt;getCategories())</code>
      <code>$this-&gt;assertEquals($this-&gt;expectedCatsRdf, (array) $entry-&gt;getCategories())</code>
      <code>$this-&gt;assertEquals($this-&gt;expectedCatsRdf, (array) $entry-&gt;getCategories())</code>
      <code>$this-&gt;assertEquals('321', $entry-&gt;getCommentCount())</code>
      <code>$this-&gt;assertEquals('321', $entry-&gt;getCommentCount())</code>
      <code>$this-&gt;assertEquals('321', $entry-&gt;getCommentCount())</code>
      <code>$this-&gt;assertEquals('321', $entry-&gt;getCommentCount())</code>
      <code>$this-&gt;assertEquals('321', $entry-&gt;getCommentCount())</code>
      <code>$this-&gt;assertEquals('321', $entry-&gt;getCommentCount())</code>
      <code>$this-&gt;assertEquals('321', $entry-&gt;getCommentCount())</code>
      <code>$this-&gt;assertEquals('321', $entry-&gt;getCommentCount())</code>
      <code>$this-&gt;assertEquals('321', $entry-&gt;getCommentCount())</code>
      <code>$this-&gt;assertEquals('321', $entry-&gt;getCommentCount())</code>
      <code>$this-&gt;assertEquals('321', $entry-&gt;getCommentCount())</code>
      <code>$this-&gt;assertEquals('321', $entry-&gt;getCommentCount())</code>
      <code>$this-&gt;assertEquals('321', $entry-&gt;getCommentCount())</code>
      <code>$this-&gt;assertEquals('321', $entry-&gt;getCommentCount())</code>
      <code>$this-&gt;assertEquals('321', $entry-&gt;getCommentCount())</code>
      <code>$this-&gt;assertEquals('321', $entry-&gt;getCommentCount())</code>
      <code>$this-&gt;assertEquals('321', $entry-&gt;getCommentCount())</code>
      <code>$this-&gt;assertEquals('321', $entry-&gt;getCommentCount())</code>
      <code>$this-&gt;assertEquals('321', $entry-&gt;getCommentCount())</code>
      <code>$this-&gt;assertEquals('321', $entry-&gt;getCommentCount())</code>
      <code>$this-&gt;assertEquals('321', $entry-&gt;getCommentCount())</code>
      <code>$this-&gt;assertEquals('Entry Content', $entry-&gt;getContent())</code>
      <code>$this-&gt;assertEquals('Entry Content', $entry-&gt;getContent())</code>
      <code>$this-&gt;assertEquals('Entry Content', $entry-&gt;getContent())</code>
      <code>$this-&gt;assertEquals('Entry Content', $entry-&gt;getContent())</code>
      <code>$this-&gt;assertEquals('Entry Content', $entry-&gt;getContent())</code>
      <code>$this-&gt;assertEquals('Entry Content', $entry-&gt;getContent())</code>
      <code>$this-&gt;assertEquals('Entry Content', $entry-&gt;getContent())</code>
      <code>$this-&gt;assertEquals('Entry Description', $entry-&gt;getContent())</code>
      <code>$this-&gt;assertEquals('Entry Description', $entry-&gt;getContent())</code>
      <code>$this-&gt;assertEquals('Entry Description', $entry-&gt;getContent())</code>
      <code>$this-&gt;assertEquals('Entry Description', $entry-&gt;getContent())</code>
      <code>$this-&gt;assertEquals('Entry Description', $entry-&gt;getContent())</code>
      <code>$this-&gt;assertEquals('Entry Description', $entry-&gt;getContent())</code>
      <code>$this-&gt;assertEquals('Entry Description', $entry-&gt;getContent())</code>
      <code>$this-&gt;assertEquals('Entry Description', $entry-&gt;getDescription())</code>
      <code>$this-&gt;assertEquals('Entry Description', $entry-&gt;getDescription())</code>
      <code>$this-&gt;assertEquals('Entry Description', $entry-&gt;getDescription())</code>
      <code>$this-&gt;assertEquals('Entry Description', $entry-&gt;getDescription())</code>
      <code>$this-&gt;assertEquals('Entry Description', $entry-&gt;getDescription())</code>
      <code>$this-&gt;assertEquals('Entry Description', $entry-&gt;getDescription())</code>
      <code>$this-&gt;assertEquals('Entry Description', $entry-&gt;getDescription())</code>
      <code>$this-&gt;assertEquals('Entry Description', $entry-&gt;getDescription())</code>
      <code>$this-&gt;assertEquals('Entry Description', $entry-&gt;getDescription())</code>
      <code>$this-&gt;assertEquals('Entry Description', $entry-&gt;getDescription())</code>
      <code>$this-&gt;assertEquals('Entry Description', $entry-&gt;getDescription())</code>
      <code>$this-&gt;assertEquals('Entry Description', $entry-&gt;getDescription())</code>
      <code>$this-&gt;assertEquals('Entry Description', $entry-&gt;getDescription())</code>
      <code>$this-&gt;assertEquals('Entry Description', $entry-&gt;getDescription())</code>
      <code>$this-&gt;assertEquals('Entry Description', $entry-&gt;getDescription())</code>
      <code>$this-&gt;assertEquals('Entry Description', $entry-&gt;getDescription())</code>
      <code>$this-&gt;assertEquals('Entry Description', $entry-&gt;getDescription())</code>
      <code>$this-&gt;assertEquals('Entry Description', $entry-&gt;getDescription())</code>
      <code>$this-&gt;assertEquals('Entry Description', $entry-&gt;getDescription())</code>
      <code>$this-&gt;assertEquals('Entry Description', $entry-&gt;getDescription())</code>
      <code>$this-&gt;assertEquals('Entry Description', $entry-&gt;getDescription())</code>
      <code>$this-&gt;assertEquals('Entry Title', $entry-&gt;getId())</code>
      <code>$this-&gt;assertEquals('Entry Title', $entry-&gt;getId())</code>
      <code>$this-&gt;assertEquals('Entry Title', $entry-&gt;getId())</code>
      <code>$this-&gt;assertEquals('Entry Title', $entry-&gt;getId())</code>
      <code>$this-&gt;assertEquals('Entry Title', $entry-&gt;getId())</code>
      <code>$this-&gt;assertEquals('Entry Title', $entry-&gt;getId())</code>
      <code>$this-&gt;assertEquals('Entry Title', $entry-&gt;getId())</code>
      <code>$this-&gt;assertEquals('Entry Title', $entry-&gt;getTitle())</code>
      <code>$this-&gt;assertEquals('Entry Title', $entry-&gt;getTitle())</code>
      <code>$this-&gt;assertEquals('Entry Title', $entry-&gt;getTitle())</code>
      <code>$this-&gt;assertEquals('Entry Title', $entry-&gt;getTitle())</code>
      <code>$this-&gt;assertEquals('Entry Title', $entry-&gt;getTitle())</code>
      <code>$this-&gt;assertEquals('Entry Title', $entry-&gt;getTitle())</code>
      <code>$this-&gt;assertEquals('Entry Title', $entry-&gt;getTitle())</code>
      <code>$this-&gt;assertEquals('Entry Title', $entry-&gt;getTitle())</code>
      <code>$this-&gt;assertEquals('Entry Title', $entry-&gt;getTitle())</code>
      <code>$this-&gt;assertEquals('Entry Title', $entry-&gt;getTitle())</code>
      <code>$this-&gt;assertEquals('Entry Title', $entry-&gt;getTitle())</code>
      <code>$this-&gt;assertEquals('Entry Title', $entry-&gt;getTitle())</code>
      <code>$this-&gt;assertEquals('Entry Title', $entry-&gt;getTitle())</code>
      <code>$this-&gt;assertEquals('Entry Title', $entry-&gt;getTitle())</code>
      <code>$this-&gt;assertEquals('Entry Title', $entry-&gt;getTitle())</code>
      <code>$this-&gt;assertEquals('Entry Title', $entry-&gt;getTitle())</code>
      <code>$this-&gt;assertEquals('Entry Title', $entry-&gt;getTitle())</code>
      <code>$this-&gt;assertEquals('Entry Title', $entry-&gt;getTitle())</code>
      <code>$this-&gt;assertEquals('Entry Title', $entry-&gt;getTitle())</code>
      <code>$this-&gt;assertEquals('Entry Title', $entry-&gt;getTitle())</code>
      <code>$this-&gt;assertEquals('Entry Title', $entry-&gt;getTitle())</code>
      <code>$this-&gt;assertEquals('http://www.example.com/1', $entry-&gt;getId())</code>
      <code>$this-&gt;assertEquals('http://www.example.com/1', $entry-&gt;getId())</code>
      <code>$this-&gt;assertEquals('http://www.example.com/1', $entry-&gt;getId())</code>
      <code>$this-&gt;assertEquals('http://www.example.com/1', $entry-&gt;getId())</code>
      <code>$this-&gt;assertEquals('http://www.example.com/1', $entry-&gt;getId())</code>
      <code>$this-&gt;assertEquals('http://www.example.com/1', $entry-&gt;getId())</code>
      <code>$this-&gt;assertEquals('http://www.example.com/1', $entry-&gt;getId())</code>
      <code>$this-&gt;assertEquals('http://www.example.com/1', $entry-&gt;getId())</code>
      <code>$this-&gt;assertEquals('http://www.example.com/1', $entry-&gt;getId())</code>
      <code>$this-&gt;assertEquals('http://www.example.com/1', $entry-&gt;getId())</code>
      <code>$this-&gt;assertEquals('http://www.example.com/1', $entry-&gt;getId())</code>
      <code>$this-&gt;assertEquals('http://www.example.com/1', $entry-&gt;getId())</code>
      <code>$this-&gt;assertEquals('http://www.example.com/1', $entry-&gt;getId())</code>
      <code>$this-&gt;assertEquals('http://www.example.com/1', $entry-&gt;getId())</code>
      <code>$this-&gt;assertEquals('http://www.example.com/1', $entry-&gt;getId())</code>
      <code>$this-&gt;assertEquals('http://www.example.com/comments', $entry-&gt;getCommentLink())</code>
      <code>$this-&gt;assertEquals('http://www.example.com/comments', $entry-&gt;getCommentLink())</code>
      <code>$this-&gt;assertEquals('http://www.example.com/comments', $entry-&gt;getCommentLink())</code>
      <code>$this-&gt;assertEquals('http://www.example.com/comments', $entry-&gt;getCommentLink())</code>
      <code>$this-&gt;assertEquals('http://www.example.com/comments', $entry-&gt;getCommentLink())</code>
      <code>$this-&gt;assertEquals('http://www.example.com/comments', $entry-&gt;getCommentLink())</code>
      <code>$this-&gt;assertEquals('http://www.example.com/comments', $entry-&gt;getCommentLink())</code>
      <code>$this-&gt;assertEquals('http://www.example.com/comments', $entry-&gt;getCommentLink())</code>
      <code>$this-&gt;assertEquals('http://www.example.com/comments', $entry-&gt;getCommentLink())</code>
      <code>$this-&gt;assertEquals('http://www.example.com/comments', $entry-&gt;getCommentLink())</code>
      <code>$this-&gt;assertEquals('http://www.example.com/comments', $entry-&gt;getCommentLink())</code>
      <code>$this-&gt;assertEquals('http://www.example.com/comments', $entry-&gt;getCommentLink())</code>
      <code>$this-&gt;assertEquals('http://www.example.com/entry', $entry-&gt;getLink())</code>
      <code>$this-&gt;assertEquals('http://www.example.com/entry', $entry-&gt;getLink())</code>
      <code>$this-&gt;assertEquals('http://www.example.com/entry', $entry-&gt;getLink())</code>
      <code>$this-&gt;assertEquals('http://www.example.com/entry', $entry-&gt;getLink())</code>
      <code>$this-&gt;assertEquals('http://www.example.com/entry', $entry-&gt;getLink())</code>
      <code>$this-&gt;assertEquals('http://www.example.com/entry', $entry-&gt;getLink())</code>
      <code>$this-&gt;assertEquals('http://www.example.com/entry', $entry-&gt;getLink())</code>
      <code>$this-&gt;assertEquals('http://www.example.com/entry/321/feed/rss/', $entry-&gt;getCommentFeedLink())</code>
      <code>$this-&gt;assertEquals('http://www.example.com/entry/321/feed/rss/', $entry-&gt;getCommentFeedLink())</code>
      <code>$this-&gt;assertEquals('http://www.example.com/entry/321/feed/rss/', $entry-&gt;getCommentFeedLink())</code>
      <code>$this-&gt;assertEquals('http://www.example.com/entry/321/feed/rss/', $entry-&gt;getCommentFeedLink())</code>
      <code>$this-&gt;assertEquals('http://www.example.com/entry/321/feed/rss/', $entry-&gt;getCommentFeedLink())</code>
      <code>$this-&gt;assertEquals('http://www.example.com/entry/321/feed/rss/', $entry-&gt;getCommentFeedLink())</code>
      <code>$this-&gt;assertEquals('http://www.example.com/entry/321/feed/rss/', $entry-&gt;getCommentFeedLink())</code>
      <code>$this-&gt;assertEquals('http://www.example.com/entry/321/feed/rss/', $entry-&gt;getCommentFeedLink())</code>
      <code>$this-&gt;assertEquals('http://www.example.com/entry/321/feed/rss/', $entry-&gt;getCommentFeedLink())</code>
      <code>$this-&gt;assertEquals('http://www.example.com/entry/321/feed/rss/', $entry-&gt;getCommentFeedLink())</code>
      <code>$this-&gt;assertEquals('http://www.example.com/entry/321/feed/rss/', $entry-&gt;getCommentFeedLink())</code>
      <code>$this-&gt;assertEquals('http://www.example.com/entry/321/feed/rss/', $entry-&gt;getCommentFeedLink())</code>
      <code>$this-&gt;assertEquals('http://www.example.com/entry/321/feed/rss/', $entry-&gt;getCommentFeedLink())</code>
      <code>$this-&gt;assertEquals('http://www.example.com/entry/321/feed/rss/', $entry-&gt;getCommentFeedLink())</code>
      <code>$this-&gt;assertEquals(['Joe Bloggs', 'Jane Bloggs'], $entry-&gt;getAuthors()-&gt;getValues())</code>
      <code>$this-&gt;assertEquals(['Joe Bloggs', 'Jane Bloggs'], $entry-&gt;getAuthors()-&gt;getValues())</code>
      <code>$this-&gt;assertEquals(['Joe Bloggs', 'Jane Bloggs'], $entry-&gt;getAuthors()-&gt;getValues())</code>
      <code>$this-&gt;assertEquals(['Joe Bloggs', 'Jane Bloggs'], $entry-&gt;getAuthors()-&gt;getValues())</code>
      <code>$this-&gt;assertEquals(['Joe Bloggs', 'Jane Bloggs'], $entry-&gt;getAuthors()-&gt;getValues())</code>
      <code>$this-&gt;assertEquals(['Joe Bloggs', 'Jane Bloggs'], $entry-&gt;getAuthors()-&gt;getValues())</code>
      <code>$this-&gt;assertEquals(['Joe Bloggs', 'Jane Bloggs'], $entry-&gt;getAuthors()-&gt;getValues())</code>
      <code>$this-&gt;assertEquals(['Joe Bloggs', 'Jane Bloggs'], $entry-&gt;getAuthors()-&gt;getValues())</code>
      <code>$this-&gt;assertEquals(['Joe Bloggs', 'Jane Bloggs'], $entry-&gt;getAuthors()-&gt;getValues())</code>
      <code>$this-&gt;assertEquals(['Joe Bloggs', 'Jane Bloggs'], $entry-&gt;getAuthors()-&gt;getValues())</code>
      <code>$this-&gt;assertEquals(['Joe Bloggs', 'Jane Bloggs'], $entry-&gt;getAuthors()-&gt;getValues())</code>
      <code>$this-&gt;assertEquals(['Joe Bloggs', 'Jane Bloggs'], $entry-&gt;getAuthors()-&gt;getValues())</code>
      <code>$this-&gt;assertEquals(['Joe Bloggs', 'Jane Bloggs'], $entry-&gt;getAuthors()-&gt;getValues())</code>
      <code>$this-&gt;assertEquals(['Joe Bloggs', 'Jane Bloggs'], $entry-&gt;getAuthors()-&gt;getValues())</code>
      <code>$this-&gt;assertEquals(['Joe Bloggs', 'Jane Bloggs'], $entry-&gt;getAuthors()-&gt;getValues())</code>
      <code>$this-&gt;assertEquals(['name' =&gt; 'Jane Bloggs'], $entry-&gt;getAuthor(1))</code>
      <code>$this-&gt;assertEquals(['name' =&gt; 'Jane Bloggs'], $entry-&gt;getAuthor(1))</code>
      <code>$this-&gt;assertEquals(['name' =&gt; 'Jane Bloggs'], $entry-&gt;getAuthor(1))</code>
      <code>$this-&gt;assertEquals(['name' =&gt; 'Jane Bloggs'], $entry-&gt;getAuthor(1))</code>
      <code>$this-&gt;assertEquals(['name' =&gt; 'Jane Bloggs'], $entry-&gt;getAuthor(1))</code>
      <code>$this-&gt;assertEquals(['name' =&gt; 'Jane Bloggs'], $entry-&gt;getAuthor(1))</code>
      <code>$this-&gt;assertEquals(['name' =&gt; 'Jane Bloggs'], $entry-&gt;getAuthor(1))</code>
      <code>$this-&gt;assertEquals(['name' =&gt; 'Joe Bloggs', 'email' =&gt; 'joe@example.com'], $entry-&gt;getAuthor())</code>
      <code>$this-&gt;assertEquals(['name' =&gt; 'Joe Bloggs'], $entry-&gt;getAuthor())</code>
      <code>$this-&gt;assertEquals(['name' =&gt; 'Joe Bloggs'], $entry-&gt;getAuthor())</code>
      <code>$this-&gt;assertEquals(['name' =&gt; 'Joe Bloggs'], $entry-&gt;getAuthor())</code>
      <code>$this-&gt;assertEquals(['name' =&gt; 'Joe Bloggs'], $entry-&gt;getAuthor())</code>
      <code>$this-&gt;assertEquals(['name' =&gt; 'Joe Bloggs'], $entry-&gt;getAuthor())</code>
      <code>$this-&gt;assertEquals(['name' =&gt; 'Joe Bloggs'], $entry-&gt;getAuthor())</code>
      <code>$this-&gt;assertEquals(['name' =&gt; 'Joe Bloggs'], $entry-&gt;getAuthor())</code>
      <code>$this-&gt;assertEquals(['topic1', 'Cat &amp; Dog'], array_values($entry-&gt;getCategories()-&gt;getValues()))</code>
      <code>$this-&gt;assertEquals(['topic1', 'Cat &amp; Dog'], array_values($entry-&gt;getCategories()-&gt;getValues()))</code>
      <code>$this-&gt;assertEquals(['topic1', 'Cat &amp; Dog'], array_values($entry-&gt;getCategories()-&gt;getValues()))</code>
      <code>$this-&gt;assertEquals(['topic1', 'Cat &amp; Dog'], array_values($entry-&gt;getCategories()-&gt;getValues()))</code>
      <code>$this-&gt;assertEquals(['topic1', 'Cat &amp; Dog'], array_values($entry-&gt;getCategories()-&gt;getValues()))</code>
      <code>$this-&gt;assertEquals(['topic1', 'Cat &amp; Dog'], array_values($entry-&gt;getCategories()-&gt;getValues()))</code>
      <code>$this-&gt;assertEquals(['topic1', 'topic2'], array_values($entry-&gt;getCategories()-&gt;getValues()))</code>
      <code>$this-&gt;assertEquals(['topic1', 'topic2'], array_values($entry-&gt;getCategories()-&gt;getValues()))</code>
      <code>$this-&gt;assertEquals(['topic1', 'topic2'], array_values($entry-&gt;getCategories()-&gt;getValues()))</code>
      <code>$this-&gt;assertEquals(['topic1', 'topic2'], array_values($entry-&gt;getCategories()-&gt;getValues()))</code>
      <code>$this-&gt;assertEquals(['topic1', 'topic2'], array_values($entry-&gt;getCategories()-&gt;getValues()))</code>
      <code>$this-&gt;assertEquals(['topic1', 'topic2'], array_values($entry-&gt;getCategories()-&gt;getValues()))</code>
      <code>$this-&gt;assertEquals(['topic1', 'topic2'], array_values($entry-&gt;getCategories()-&gt;getValues()))</code>
      <code>$this-&gt;assertEquals(['topic1', 'topic2'], array_values($entry-&gt;getCategories()-&gt;getValues()))</code>
      <code>$this-&gt;assertEquals(['topic1', 'topic2'], array_values($entry-&gt;getCategories()-&gt;getValues()))</code>
      <code>$this-&gt;assertEquals(['topic1', 'topic2'], array_values($entry-&gt;getCategories()-&gt;getValues()))</code>
      <code>$this-&gt;assertEquals(['topic1', 'topic2'], array_values($entry-&gt;getCategories()-&gt;getValues()))</code>
      <code>$this-&gt;assertEquals(['topic1', 'topic2'], array_values($entry-&gt;getCategories()-&gt;getValues()))</code>
      <code>$this-&gt;assertEquals(['topic1', 'topic2'], array_values($entry-&gt;getCategories()-&gt;getValues()))</code>
      <code>$this-&gt;assertEquals([], (array) $entry-&gt;getCategories())</code>
      <code>$this-&gt;assertEquals([], (array) $entry-&gt;getCategories())</code>
      <code>$this-&gt;assertEquals([], (array) $entry-&gt;getCategories())</code>
      <code>$this-&gt;assertEquals([], (array) $entry-&gt;getCategories())</code>
      <code>$this-&gt;assertEquals([], (array) $entry-&gt;getCategories())</code>
      <code>$this-&gt;assertEquals([], (array) $entry-&gt;getCategories())</code>
      <code>$this-&gt;assertEquals([], (array) $entry-&gt;getCategories())</code>
      <code>$this-&gt;assertEquals([], array_values($entry-&gt;getCategories()-&gt;getValues()))</code>
      <code>$this-&gt;assertEquals([], array_values($entry-&gt;getCategories()-&gt;getValues()))</code>
      <code>$this-&gt;assertEquals([], array_values($entry-&gt;getCategories()-&gt;getValues()))</code>
      <code>$this-&gt;assertEquals([], array_values($entry-&gt;getCategories()-&gt;getValues()))</code>
      <code>$this-&gt;assertEquals([], array_values($entry-&gt;getCategories()-&gt;getValues()))</code>
      <code>$this-&gt;assertEquals([], array_values($entry-&gt;getCategories()-&gt;getValues()))</code>
      <code>$this-&gt;assertEquals([], array_values($entry-&gt;getCategories()-&gt;getValues()))</code>
      <code>$this-&gt;assertEquals(null, $entry-&gt;getAuthor())</code>
      <code>$this-&gt;assertEquals(null, $entry-&gt;getAuthor())</code>
      <code>$this-&gt;assertEquals(null, $entry-&gt;getAuthor())</code>
      <code>$this-&gt;assertEquals(null, $entry-&gt;getAuthor())</code>
      <code>$this-&gt;assertEquals(null, $entry-&gt;getAuthor())</code>
      <code>$this-&gt;assertEquals(null, $entry-&gt;getAuthor())</code>
      <code>$this-&gt;assertEquals(null, $entry-&gt;getAuthor())</code>
      <code>$this-&gt;assertEquals(null, $entry-&gt;getAuthor())</code>
      <code>$this-&gt;assertEquals(null, $entry-&gt;getAuthor())</code>
      <code>$this-&gt;assertEquals(null, $entry-&gt;getAuthor())</code>
      <code>$this-&gt;assertEquals(null, $entry-&gt;getAuthor())</code>
      <code>$this-&gt;assertEquals(null, $entry-&gt;getAuthor())</code>
      <code>$this-&gt;assertEquals(null, $entry-&gt;getAuthor())</code>
      <code>$this-&gt;assertEquals(null, $entry-&gt;getAuthors())</code>
      <code>$this-&gt;assertEquals(null, $entry-&gt;getAuthors())</code>
      <code>$this-&gt;assertEquals(null, $entry-&gt;getAuthors())</code>
      <code>$this-&gt;assertEquals(null, $entry-&gt;getAuthors())</code>
      <code>$this-&gt;assertEquals(null, $entry-&gt;getAuthors())</code>
      <code>$this-&gt;assertEquals(null, $entry-&gt;getAuthors())</code>
      <code>$this-&gt;assertEquals(null, $entry-&gt;getAuthors())</code>
      <code>$this-&gt;assertEquals(null, $entry-&gt;getAuthors())</code>
      <code>$this-&gt;assertEquals(null, $entry-&gt;getAuthors())</code>
      <code>$this-&gt;assertEquals(null, $entry-&gt;getAuthors())</code>
      <code>$this-&gt;assertEquals(null, $entry-&gt;getAuthors())</code>
      <code>$this-&gt;assertEquals(null, $entry-&gt;getAuthors())</code>
      <code>$this-&gt;assertEquals(null, $entry-&gt;getAuthors())</code>
      <code>$this-&gt;assertEquals(null, $entry-&gt;getCommentCount())</code>
      <code>$this-&gt;assertEquals(null, $entry-&gt;getCommentCount())</code>
      <code>$this-&gt;assertEquals(null, $entry-&gt;getCommentCount())</code>
      <code>$this-&gt;assertEquals(null, $entry-&gt;getCommentCount())</code>
      <code>$this-&gt;assertEquals(null, $entry-&gt;getCommentCount())</code>
      <code>$this-&gt;assertEquals(null, $entry-&gt;getCommentCount())</code>
      <code>$this-&gt;assertEquals(null, $entry-&gt;getCommentCount())</code>
      <code>$this-&gt;assertEquals(null, $entry-&gt;getCommentFeedLink())</code>
      <code>$this-&gt;assertEquals(null, $entry-&gt;getCommentFeedLink())</code>
      <code>$this-&gt;assertEquals(null, $entry-&gt;getCommentFeedLink())</code>
      <code>$this-&gt;assertEquals(null, $entry-&gt;getCommentFeedLink())</code>
      <code>$this-&gt;assertEquals(null, $entry-&gt;getCommentFeedLink())</code>
      <code>$this-&gt;assertEquals(null, $entry-&gt;getCommentFeedLink())</code>
      <code>$this-&gt;assertEquals(null, $entry-&gt;getCommentFeedLink())</code>
      <code>$this-&gt;assertEquals(null, $entry-&gt;getCommentLink())</code>
      <code>$this-&gt;assertEquals(null, $entry-&gt;getCommentLink())</code>
      <code>$this-&gt;assertEquals(null, $entry-&gt;getCommentLink())</code>
      <code>$this-&gt;assertEquals(null, $entry-&gt;getCommentLink())</code>
      <code>$this-&gt;assertEquals(null, $entry-&gt;getCommentLink())</code>
      <code>$this-&gt;assertEquals(null, $entry-&gt;getCommentLink())</code>
      <code>$this-&gt;assertEquals(null, $entry-&gt;getCommentLink())</code>
      <code>$this-&gt;assertEquals(null, $entry-&gt;getContent())</code>
      <code>$this-&gt;assertEquals(null, $entry-&gt;getContent())</code>
      <code>$this-&gt;assertEquals(null, $entry-&gt;getContent())</code>
      <code>$this-&gt;assertEquals(null, $entry-&gt;getContent())</code>
      <code>$this-&gt;assertEquals(null, $entry-&gt;getContent())</code>
      <code>$this-&gt;assertEquals(null, $entry-&gt;getContent())</code>
      <code>$this-&gt;assertEquals(null, $entry-&gt;getContent())</code>
      <code>$this-&gt;assertEquals(null, $entry-&gt;getDescription())</code>
      <code>$this-&gt;assertEquals(null, $entry-&gt;getDescription())</code>
      <code>$this-&gt;assertEquals(null, $entry-&gt;getDescription())</code>
      <code>$this-&gt;assertEquals(null, $entry-&gt;getDescription())</code>
      <code>$this-&gt;assertEquals(null, $entry-&gt;getDescription())</code>
      <code>$this-&gt;assertEquals(null, $entry-&gt;getDescription())</code>
      <code>$this-&gt;assertEquals(null, $entry-&gt;getDescription())</code>
      <code>$this-&gt;assertEquals(null, $entry-&gt;getEnclosure())</code>
      <code>$this-&gt;assertEquals(null, $entry-&gt;getId())</code>
      <code>$this-&gt;assertEquals(null, $entry-&gt;getId())</code>
      <code>$this-&gt;assertEquals(null, $entry-&gt;getId())</code>
      <code>$this-&gt;assertEquals(null, $entry-&gt;getId())</code>
      <code>$this-&gt;assertEquals(null, $entry-&gt;getId())</code>
      <code>$this-&gt;assertEquals(null, $entry-&gt;getId())</code>
      <code>$this-&gt;assertEquals(null, $entry-&gt;getId())</code>
      <code>$this-&gt;assertEquals(null, $entry-&gt;getId())</code>
      <code>$this-&gt;assertEquals(null, $entry-&gt;getId())</code>
      <code>$this-&gt;assertEquals(null, $entry-&gt;getId())</code>
      <code>$this-&gt;assertEquals(null, $entry-&gt;getId())</code>
      <code>$this-&gt;assertEquals(null, $entry-&gt;getId())</code>
      <code>$this-&gt;assertEquals(null, $entry-&gt;getId())</code>
      <code>$this-&gt;assertEquals(null, $entry-&gt;getLink())</code>
      <code>$this-&gt;assertEquals(null, $entry-&gt;getLink())</code>
      <code>$this-&gt;assertEquals(null, $entry-&gt;getLink())</code>
      <code>$this-&gt;assertEquals(null, $entry-&gt;getLink())</code>
      <code>$this-&gt;assertEquals(null, $entry-&gt;getLink())</code>
      <code>$this-&gt;assertEquals(null, $entry-&gt;getLink())</code>
      <code>$this-&gt;assertEquals(null, $entry-&gt;getLink())</code>
      <code>$this-&gt;assertEquals(null, $entry-&gt;getTitle())</code>
      <code>$this-&gt;assertEquals(null, $entry-&gt;getTitle())</code>
      <code>$this-&gt;assertEquals(null, $entry-&gt;getTitle())</code>
      <code>$this-&gt;assertEquals(null, $entry-&gt;getTitle())</code>
      <code>$this-&gt;assertEquals(null, $entry-&gt;getTitle())</code>
      <code>$this-&gt;assertEquals(null, $entry-&gt;getTitle())</code>
      <code>$this-&gt;assertEquals(null, $entry-&gt;getTitle())</code>
    </ReservedWord>
  </file>
  <file src="test/Reader/ExtensionPluginManagerCompatibilityTest.php">
    <InvalidReturnType occurrences="1">
      <code>getInstanceOf</code>
    </InvalidReturnType>
    <MissingReturnType occurrences="1">
      <code>testInstanceOfMatches</code>
    </MissingReturnType>
    <ReservedWord occurrences="1"/>
  </file>
  <file src="test/Reader/Feed/AtomSourceTest.php">
    <MissingPropertyType occurrences="4">
      <code>$expectedCats</code>
      <code>$expectedCatsDc</code>
      <code>$feedSamplePath</code>
      <code>$options</code>
    </MissingPropertyType>
    <MissingReturnType occurrences="16">
      <code>setUp</code>
      <code>testGetsAuthorArrayFromAtom10</code>
      <code>testGetsCategoriesFromAtom10</code>
      <code>testGetsCopyrightFromAtom10</code>
      <code>testGetsDateCreatedFromAtom10</code>
      <code>testGetsDateModifiedFromAtom10</code>
      <code>testGetsDescriptionFromAtom10</code>
      <code>testGetsFeedLinkFromAtom10</code>
      <code>testGetsGeneratorFromAtom10</code>
      <code>testGetsHubsFromAtom10</code>
      <code>testGetsIdFromAtom10</code>
      <code>testGetsLanguageFromAtom10</code>
      <code>testGetsLinkFromAtom10</code>
      <code>testGetsSingleAuthorFromAtom10</code>
      <code>testGetsSourceFromEntry</code>
      <code>testGetsTitleFromAtom10</code>
    </MissingReturnType>
    <MixedArgument occurrences="1">
      <code>$source-&gt;getCategories()-&gt;getValues()</code>
    </MixedArgument>
    <MixedAssignment occurrences="14">
      <code>$source</code>
      <code>$source</code>
      <code>$source</code>
      <code>$source</code>
      <code>$source</code>
      <code>$source</code>
      <code>$source</code>
      <code>$source</code>
      <code>$source</code>
      <code>$source</code>
      <code>$source</code>
      <code>$source</code>
      <code>$source</code>
      <code>$source</code>
    </MixedAssignment>
    <MixedMethodCall occurrences="30">
      <code>getAuthors</code>
      <code>getCategories</code>
      <code>getCategories</code>
      <code>getCopyright</code>
      <code>getDateCreated</code>
      <code>getDateModified</code>
      <code>getDescription</code>
      <code>getFeedLink</code>
      <code>getGenerator</code>
      <code>getHubs</code>
      <code>getId</code>
      <code>getLanguage</code>
      <code>getLink</code>
      <code>getSource</code>
      <code>getSource</code>
      <code>getSource</code>
      <code>getSource</code>
      <code>getSource</code>
      <code>getSource</code>
      <code>getSource</code>
      <code>getSource</code>
      <code>getSource</code>
      <code>getSource</code>
      <code>getSource</code>
      <code>getSource</code>
      <code>getSource</code>
      <code>getSource</code>
      <code>getSource</code>
      <code>getTitle</code>
      <code>getValues</code>
    </MixedMethodCall>
    <MixedOperand occurrences="15">
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
    </MixedOperand>
    <ReservedWord occurrences="16">
      <code>$this-&gt;assertEquals($authors, (array) $source-&gt;getAuthors())</code>
      <code>$this-&gt;assertEquals($edate, $source-&gt;getDateCreated())</code>
      <code>$this-&gt;assertEquals($edate, $source-&gt;getDateModified())</code>
      <code>$this-&gt;assertEquals($this-&gt;expectedCats, (array) $source-&gt;getCategories())</code>
      <code>$this-&gt;assertEquals('123', $source-&gt;getId())</code>
      <code>$this-&gt;assertEquals('Copyright 2008', $source-&gt;getCopyright())</code>
      <code>$this-&gt;assertEquals('Laminas_Feed', $source-&gt;getGenerator())</code>
      <code>$this-&gt;assertEquals('My Description', $source-&gt;getDescription())</code>
      <code>$this-&gt;assertEquals('My Title', $source-&gt;getTitle())</code>
      <code>$this-&gt;assertEquals('en-GB', $source-&gt;getLanguage())</code>
      <code>$this-&gt;assertEquals('http://www.example.com', $source-&gt;getLink())</code>
      <code>$this-&gt;assertEquals('http://www.example.com/feed/atom', $source-&gt;getFeedLink())</code>
      <code>$this-&gt;assertEquals(['topic1', 'Cat &amp; Dog'], array_values($source-&gt;getCategories()-&gt;getValues()))</code>
      <code>$this-&gt;assertInstanceOf(Source::class, $source)</code>
    </ReservedWord>
  </file>
  <file src="test/Reader/Feed/AtomTest.php">
    <MissingPropertyType occurrences="4">
      <code>$expectedCats</code>
      <code>$expectedCatsDc</code>
      <code>$feedSamplePath</code>
      <code>$options</code>
    </MissingPropertyType>
    <MissingReturnType occurrences="55">
      <code>setUp</code>
      <code>testCountableInterface</code>
      <code>testGetsAuthorArrayFromAtom03</code>
      <code>testGetsAuthorArrayFromAtom10</code>
      <code>testGetsBaseUriFromAtom10</code>
      <code>testGetsCategoriesFromAtom03Atom10Extension</code>
      <code>testGetsCategoriesFromAtom03Dc10</code>
      <code>testGetsCategoriesFromAtom03Dc11</code>
      <code>testGetsCategoriesFromAtom03None</code>
      <code>testGetsCategoriesFromAtom10</code>
      <code>testGetsCategoriesFromAtom10None</code>
      <code>testGetsCopyrightFromAtom03</code>
      <code>testGetsCopyrightFromAtom10</code>
      <code>testGetsCopyrightNullFromEmpty</code>
      <code>testGetsDateCreatedFromAtom03</code>
      <code>testGetsDateCreatedFromAtom10</code>
      <code>testGetsDateCreatedNullFromEmpty</code>
      <code>testGetsDateModifiedFromAtom03</code>
      <code>testGetsDateModifiedFromAtom10</code>
      <code>testGetsDateModifiedNullFromEmpty</code>
      <code>testGetsDescriptionFromAtom03</code>
      <code>testGetsDescriptionFromAtom10</code>
      <code>testGetsDescriptionNullFromEmpty</code>
      <code>testGetsFeedLinkFromAtom03</code>
      <code>testGetsFeedLinkFromAtom10</code>
      <code>testGetsFeedLinkFromAtom10IfRelativeUri</code>
      <code>testGetsFeedLinkNullFromEmpty</code>
      <code>testGetsGeneratorFromAtom03</code>
      <code>testGetsGeneratorFromAtom10</code>
      <code>testGetsGeneratorNullFromEmpty</code>
      <code>testGetsHubsFromAtom03</code>
      <code>testGetsHubsFromAtom10</code>
      <code>testGetsIdFromAtom03</code>
      <code>testGetsIdFromAtom10</code>
      <code>testGetsIdNullFromEmpty</code>
      <code>testGetsImageFromAtom03</code>
      <code>testGetsImageFromAtom03None</code>
      <code>testGetsImageFromAtom10</code>
      <code>testGetsImageFromAtom10None</code>
      <code>testGetsLanguageFromAtom03</code>
      <code>testGetsLanguageFromAtom10</code>
      <code>testGetsLanguageNullFromEmpty</code>
      <code>testGetsLastBuildDateAlwaysReturnsNullForAtom</code>
      <code>testGetsLinkFromAtom03</code>
      <code>testGetsLinkFromAtom10</code>
      <code>testGetsLinkFromAtom10WithNoRelAttribute</code>
      <code>testGetsLinkFromAtom10WithRelativeUrl</code>
      <code>testGetsLinkNullFromEmpty</code>
      <code>testGetsOriginalSourceUriIfFeedLinkNotAvailableFromFeed</code>
      <code>testGetsSingleAuthorFromAtom03</code>
      <code>testGetsSingleAuthorFromAtom10</code>
      <code>testGetsSingleAuthorNullFromEmpty</code>
      <code>testGetsTitleFromAtom03</code>
      <code>testGetsTitleFromAtom10</code>
      <code>testGetsTitleNullFromEmpty</code>
    </MissingReturnType>
    <MixedOperand occurrences="54">
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
    </MixedOperand>
    <ReservedWord occurrences="60">
      <code>$this-&gt;assertCount(0, $feed)</code>
      <code>$this-&gt;assertEquals($authors, (array) $feed-&gt;getAuthors())</code>
      <code>$this-&gt;assertEquals($authors, (array) $feed-&gt;getAuthors())</code>
      <code>$this-&gt;assertEquals($edate, $feed-&gt;getDateCreated())</code>
      <code>$this-&gt;assertEquals($edate, $feed-&gt;getDateCreated())</code>
      <code>$this-&gt;assertEquals($edate, $feed-&gt;getDateModified())</code>
      <code>$this-&gt;assertEquals($edate, $feed-&gt;getDateModified())</code>
      <code>$this-&gt;assertEquals($this-&gt;expectedCats, (array) $feed-&gt;getCategories())</code>
      <code>$this-&gt;assertEquals($this-&gt;expectedCats, (array) $feed-&gt;getCategories())</code>
      <code>$this-&gt;assertEquals($this-&gt;expectedCatsDc, (array) $feed-&gt;getCategories())</code>
      <code>$this-&gt;assertEquals($this-&gt;expectedCatsDc, (array) $feed-&gt;getCategories())</code>
      <code>$this-&gt;assertEquals('123', $feed-&gt;getId())</code>
      <code>$this-&gt;assertEquals('123', $feed-&gt;getId())</code>
      <code>$this-&gt;assertEquals('Copyright 2008', $feed-&gt;getCopyright())</code>
      <code>$this-&gt;assertEquals('Copyright 2008', $feed-&gt;getCopyright())</code>
      <code>$this-&gt;assertEquals('Laminas_Feed', $feed-&gt;getGenerator())</code>
      <code>$this-&gt;assertEquals('Laminas_Feed', $feed-&gt;getGenerator())</code>
      <code>$this-&gt;assertEquals('My Description', $feed-&gt;getDescription())</code>
      <code>$this-&gt;assertEquals('My Description', $feed-&gt;getDescription())</code>
      <code>$this-&gt;assertEquals('My Title', $feed-&gt;getTitle())</code>
      <code>$this-&gt;assertEquals('My Title', $feed-&gt;getTitle())</code>
      <code>$this-&gt;assertEquals('en-GB', $feed-&gt;getLanguage())</code>
      <code>$this-&gt;assertEquals('en-GB', $feed-&gt;getLanguage())</code>
      <code>$this-&gt;assertEquals('http://www.example.com', $feed-&gt;getLink())</code>
      <code>$this-&gt;assertEquals('http://www.example.com', $feed-&gt;getLink())</code>
      <code>$this-&gt;assertEquals('http://www.example.com', $feed-&gt;getLink())</code>
      <code>$this-&gt;assertEquals('http://www.example.com', $feed-&gt;getLink())</code>
      <code>$this-&gt;assertEquals('http://www.example.com/', $feed-&gt;getBaseUrl())</code>
      <code>$this-&gt;assertEquals('http://www.example.com/feed/atom', $feed-&gt;getFeedLink())</code>
      <code>$this-&gt;assertEquals('http://www.example.com/feed/atom', $feed-&gt;getFeedLink())</code>
      <code>$this-&gt;assertEquals('http://www.example.com/feed/atom', $feed-&gt;getFeedLink())</code>
      <code>$this-&gt;assertEquals('http://www.example.com/feed/atom', $feed-&gt;getFeedLink())</code>
      <code>$this-&gt;assertEquals(['topic1', 'Cat &amp; Dog'], array_values($feed-&gt;getCategories()-&gt;getValues()))</code>
      <code>$this-&gt;assertEquals(['topic1', 'Cat &amp; Dog'], array_values($feed-&gt;getCategories()-&gt;getValues()))</code>
      <code>$this-&gt;assertEquals(['topic1', 'topic2'], array_values($feed-&gt;getCategories()-&gt;getValues()))</code>
      <code>$this-&gt;assertEquals(['topic1', 'topic2'], array_values($feed-&gt;getCategories()-&gt;getValues()))</code>
      <code>$this-&gt;assertEquals(['uri' =&gt; 'http://www.example.com/logo.gif'], $feed-&gt;getImage())</code>
      <code>$this-&gt;assertEquals(['uri' =&gt; 'http://www.example.com/logo.gif'], $feed-&gt;getImage())</code>
      <code>$this-&gt;assertEquals([], (array) $feed-&gt;getCategories())</code>
      <code>$this-&gt;assertEquals([], (array) $feed-&gt;getCategories())</code>
      <code>$this-&gt;assertEquals([], array_values($feed-&gt;getCategories()-&gt;getValues()))</code>
      <code>$this-&gt;assertEquals([], array_values($feed-&gt;getCategories()-&gt;getValues()))</code>
      <code>$this-&gt;assertEquals(null, $feed-&gt;getImage())</code>
      <code>$this-&gt;assertEquals(null, $feed-&gt;getImage())</code>
      <code>$this-&gt;assertNull($feed-&gt;getAuthor())</code>
      <code>$this-&gt;assertNull($feed-&gt;getCopyright())</code>
      <code>$this-&gt;assertNull($feed-&gt;getDateCreated())</code>
      <code>$this-&gt;assertNull($feed-&gt;getDateModified())</code>
      <code>$this-&gt;assertNull($feed-&gt;getDescription())</code>
      <code>$this-&gt;assertNull($feed-&gt;getFeedLink())</code>
      <code>$this-&gt;assertNull($feed-&gt;getGenerator())</code>
      <code>$this-&gt;assertNull($feed-&gt;getId())</code>
      <code>$this-&gt;assertNull($feed-&gt;getLanguage())</code>
      <code>$this-&gt;assertNull($feed-&gt;getLastBuildDate())</code>
      <code>$this-&gt;assertNull($feed-&gt;getLink())</code>
      <code>$this-&gt;assertNull($feed-&gt;getTitle())</code>
    </ReservedWord>
    <UndefinedInterfaceMethod occurrences="9">
      <code>getBaseUrl</code>
      <code>getHubs</code>
      <code>getHubs</code>
      <code>getImage</code>
      <code>getImage</code>
      <code>getImage</code>
      <code>getImage</code>
      <code>getLastBuildDate</code>
      <code>setOriginalSourceUri</code>
    </UndefinedInterfaceMethod>
  </file>
  <file src="test/Reader/Feed/CommonTest.php">
    <MissingPropertyType occurrences="1">
      <code>$feedSamplePath</code>
    </MissingPropertyType>
    <MissingReturnType occurrences="10">
      <code>setUp</code>
      <code>testGetsDomDocumentObject</code>
      <code>testGetsDomElementObject</code>
      <code>testGetsDomXpathObject</code>
      <code>testGetsNamedExtension</code>
      <code>testGetsXpathPrefixString</code>
      <code>testReturnsEncodingOfFeed</code>
      <code>testReturnsEncodingOfFeedAsUtf8IfUndefined</code>
      <code>testReturnsNullIfExtensionDoesNotExist</code>
      <code>testSaveXmlOutputsXmlStringForFeed</code>
    </MissingReturnType>
    <MixedOperand occurrences="10">
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
    </MixedOperand>
    <ReservedWord occurrences="9">
      <code>$this-&gt;assertEquals($expected, $feed-&gt;saveXml())</code>
      <code>$this-&gt;assertEquals('/atom:feed', $feed-&gt;getXpathPrefix())</code>
      <code>$this-&gt;assertEquals('UTF-8', $feed-&gt;getEncoding())</code>
      <code>$this-&gt;assertEquals('UTF-8', $feed-&gt;getEncoding())</code>
      <code>$this-&gt;assertEquals(null, $feed-&gt;getExtension('Foo'))</code>
      <code>$this-&gt;assertInstanceOf(DOMDocument::class, $feed-&gt;getDomDocument())</code>
      <code>$this-&gt;assertInstanceOf(DOMElement::class, $feed-&gt;getElement())</code>
      <code>$this-&gt;assertInstanceOf(DOMXPath::class, $feed-&gt;getXpath())</code>
      <code>$this-&gt;assertInstanceOf(Feed::class, $feed-&gt;getExtension('Atom'))</code>
    </ReservedWord>
    <UndefinedInterfaceMethod occurrences="9">
      <code>getDomDocument</code>
      <code>getElement</code>
      <code>getEncoding</code>
      <code>getEncoding</code>
      <code>getExtension</code>
      <code>getExtension</code>
      <code>getXpath</code>
      <code>getXpathPrefix</code>
      <code>saveXml</code>
    </UndefinedInterfaceMethod>
  </file>
  <file src="test/Reader/Feed/RssTest.php">
    <InvalidMethodCall occurrences="28">
      <code>getValues</code>
      <code>getValues</code>
      <code>getValues</code>
      <code>getValues</code>
      <code>getValues</code>
      <code>getValues</code>
      <code>getValues</code>
      <code>getValues</code>
      <code>getValues</code>
      <code>getValues</code>
      <code>getValues</code>
      <code>getValues</code>
      <code>getValues</code>
      <code>getValues</code>
      <code>getValues</code>
      <code>getValues</code>
      <code>getValues</code>
      <code>getValues</code>
      <code>getValues</code>
      <code>getValues</code>
      <code>getValues</code>
      <code>getValues</code>
      <code>getValues</code>
      <code>getValues</code>
      <code>getValues</code>
      <code>getValues</code>
      <code>getValues</code>
      <code>getValues</code>
    </InvalidMethodCall>
    <MissingParamType occurrences="2">
      <code>$edate</code>
      <code>$path</code>
    </MissingParamType>
    <MissingPropertyType occurrences="4">
      <code>$expectedCats</code>
      <code>$expectedCatsAtom</code>
      <code>$expectedCatsRdf</code>
      <code>$feedSamplePath</code>
    </MissingPropertyType>
    <MissingReturnType occurrences="284">
      <code>dateModifiedProvider</code>
      <code>setUp</code>
      <code>testCountableInterface</code>
      <code>testGetsAuthorArrayFromRss090</code>
      <code>testGetsAuthorArrayFromRss090Atom10</code>
      <code>testGetsAuthorArrayFromRss090Dc10</code>
      <code>testGetsAuthorArrayFromRss090Dc11</code>
      <code>testGetsAuthorArrayFromRss090None</code>
      <code>testGetsAuthorArrayFromRss091</code>
      <code>testGetsAuthorArrayFromRss091Atom10</code>
      <code>testGetsAuthorArrayFromRss091Dc10</code>
      <code>testGetsAuthorArrayFromRss091Dc11</code>
      <code>testGetsAuthorArrayFromRss091None</code>
      <code>testGetsAuthorArrayFromRss092</code>
      <code>testGetsAuthorArrayFromRss092Atom10</code>
      <code>testGetsAuthorArrayFromRss092Dc10</code>
      <code>testGetsAuthorArrayFromRss092Dc11</code>
      <code>testGetsAuthorArrayFromRss092None</code>
      <code>testGetsAuthorArrayFromRss093</code>
      <code>testGetsAuthorArrayFromRss093Atom10</code>
      <code>testGetsAuthorArrayFromRss093Dc10</code>
      <code>testGetsAuthorArrayFromRss093Dc11</code>
      <code>testGetsAuthorArrayFromRss093None</code>
      <code>testGetsAuthorArrayFromRss094</code>
      <code>testGetsAuthorArrayFromRss094Atom10</code>
      <code>testGetsAuthorArrayFromRss094Dc10</code>
      <code>testGetsAuthorArrayFromRss094Dc11</code>
      <code>testGetsAuthorArrayFromRss094None</code>
      <code>testGetsAuthorArrayFromRss10</code>
      <code>testGetsAuthorArrayFromRss10Atom10</code>
      <code>testGetsAuthorArrayFromRss10Dc10</code>
      <code>testGetsAuthorArrayFromRss10Dc11</code>
      <code>testGetsAuthorArrayFromRss10None</code>
      <code>testGetsAuthorArrayFromRss20</code>
      <code>testGetsAuthorArrayFromRss20Atom10</code>
      <code>testGetsAuthorArrayFromRss20Dc10</code>
      <code>testGetsAuthorArrayFromRss20Dc11</code>
      <code>testGetsAuthorArrayFromRss20None</code>
      <code>testGetsCategoriesFromRss090Atom10</code>
      <code>testGetsCategoriesFromRss090Dc10</code>
      <code>testGetsCategoriesFromRss090Dc11</code>
      <code>testGetsCategoriesFromRss090None</code>
      <code>testGetsCategoriesFromRss091Atom10</code>
      <code>testGetsCategoriesFromRss091Dc10</code>
      <code>testGetsCategoriesFromRss091Dc11</code>
      <code>testGetsCategoriesFromRss091None</code>
      <code>testGetsCategoriesFromRss092Atom10</code>
      <code>testGetsCategoriesFromRss092Dc10</code>
      <code>testGetsCategoriesFromRss092Dc11</code>
      <code>testGetsCategoriesFromRss092None</code>
      <code>testGetsCategoriesFromRss093Atom10</code>
      <code>testGetsCategoriesFromRss093Dc10</code>
      <code>testGetsCategoriesFromRss093Dc11</code>
      <code>testGetsCategoriesFromRss093None</code>
      <code>testGetsCategoriesFromRss094Atom10</code>
      <code>testGetsCategoriesFromRss094Dc10</code>
      <code>testGetsCategoriesFromRss094Dc11</code>
      <code>testGetsCategoriesFromRss094None</code>
      <code>testGetsCategoriesFromRss10Atom10</code>
      <code>testGetsCategoriesFromRss10Dc10</code>
      <code>testGetsCategoriesFromRss10Dc11</code>
      <code>testGetsCategoriesFromRss10None</code>
      <code>testGetsCategoriesFromRss20</code>
      <code>testGetsCategoriesFromRss20None</code>
      <code>testGetsCopyrightFromRss090</code>
      <code>testGetsCopyrightFromRss090Dc10</code>
      <code>testGetsCopyrightFromRss090Dc11</code>
      <code>testGetsCopyrightFromRss090None</code>
      <code>testGetsCopyrightFromRss091</code>
      <code>testGetsCopyrightFromRss091Dc10</code>
      <code>testGetsCopyrightFromRss091Dc11</code>
      <code>testGetsCopyrightFromRss091None</code>
      <code>testGetsCopyrightFromRss092</code>
      <code>testGetsCopyrightFromRss092Dc10</code>
      <code>testGetsCopyrightFromRss092Dc11</code>
      <code>testGetsCopyrightFromRss092None</code>
      <code>testGetsCopyrightFromRss093</code>
      <code>testGetsCopyrightFromRss093Dc10</code>
      <code>testGetsCopyrightFromRss093Dc11</code>
      <code>testGetsCopyrightFromRss093None</code>
      <code>testGetsCopyrightFromRss094</code>
      <code>testGetsCopyrightFromRss094Dc10</code>
      <code>testGetsCopyrightFromRss094Dc11</code>
      <code>testGetsCopyrightFromRss094None</code>
      <code>testGetsCopyrightFromRss10</code>
      <code>testGetsCopyrightFromRss10Dc10</code>
      <code>testGetsCopyrightFromRss10Dc11</code>
      <code>testGetsCopyrightFromRss10None</code>
      <code>testGetsCopyrightFromRss20</code>
      <code>testGetsCopyrightFromRss20Dc10</code>
      <code>testGetsCopyrightFromRss20Dc11</code>
      <code>testGetsCopyrightFromRss20None</code>
      <code>testGetsDateModified</code>
      <code>testGetsDescriptionFromRss090</code>
      <code>testGetsDescriptionFromRss090Dc10</code>
      <code>testGetsDescriptionFromRss090Dc11</code>
      <code>testGetsDescriptionFromRss090None</code>
      <code>testGetsDescriptionFromRss091</code>
      <code>testGetsDescriptionFromRss091Dc10</code>
      <code>testGetsDescriptionFromRss091Dc11</code>
      <code>testGetsDescriptionFromRss091None</code>
      <code>testGetsDescriptionFromRss092</code>
      <code>testGetsDescriptionFromRss092Dc10</code>
      <code>testGetsDescriptionFromRss092Dc11</code>
      <code>testGetsDescriptionFromRss092None</code>
      <code>testGetsDescriptionFromRss093</code>
      <code>testGetsDescriptionFromRss093Dc10</code>
      <code>testGetsDescriptionFromRss093Dc11</code>
      <code>testGetsDescriptionFromRss093None</code>
      <code>testGetsDescriptionFromRss094</code>
      <code>testGetsDescriptionFromRss094Dc10</code>
      <code>testGetsDescriptionFromRss094Dc11</code>
      <code>testGetsDescriptionFromRss094None</code>
      <code>testGetsDescriptionFromRss10</code>
      <code>testGetsDescriptionFromRss10Dc10</code>
      <code>testGetsDescriptionFromRss10Dc11</code>
      <code>testGetsDescriptionFromRss10None</code>
      <code>testGetsDescriptionFromRss20</code>
      <code>testGetsDescriptionFromRss20Dc10</code>
      <code>testGetsDescriptionFromRss20Dc11</code>
      <code>testGetsDescriptionFromRss20None</code>
      <code>testGetsFeedLinkFromRss090</code>
      <code>testGetsFeedLinkFromRss090None</code>
      <code>testGetsFeedLinkFromRss091</code>
      <code>testGetsFeedLinkFromRss091None</code>
      <code>testGetsFeedLinkFromRss092</code>
      <code>testGetsFeedLinkFromRss092None</code>
      <code>testGetsFeedLinkFromRss093</code>
      <code>testGetsFeedLinkFromRss093None</code>
      <code>testGetsFeedLinkFromRss094</code>
      <code>testGetsFeedLinkFromRss094None</code>
      <code>testGetsFeedLinkFromRss10</code>
      <code>testGetsFeedLinkFromRss10None</code>
      <code>testGetsFeedLinkFromRss20</code>
      <code>testGetsFeedLinkFromRss20None</code>
      <code>testGetsGeneratorFromRss090</code>
      <code>testGetsGeneratorFromRss090None</code>
      <code>testGetsGeneratorFromRss091</code>
      <code>testGetsGeneratorFromRss091None</code>
      <code>testGetsGeneratorFromRss092</code>
      <code>testGetsGeneratorFromRss092None</code>
      <code>testGetsGeneratorFromRss093</code>
      <code>testGetsGeneratorFromRss093None</code>
      <code>testGetsGeneratorFromRss094</code>
      <code>testGetsGeneratorFromRss094None</code>
      <code>testGetsGeneratorFromRss10</code>
      <code>testGetsGeneratorFromRss10None</code>
      <code>testGetsGeneratorFromRss20</code>
      <code>testGetsGeneratorFromRss20None</code>
      <code>testGetsHubsFromRss090</code>
      <code>testGetsHubsFromRss090None</code>
      <code>testGetsHubsFromRss091</code>
      <code>testGetsHubsFromRss091None</code>
      <code>testGetsHubsFromRss092</code>
      <code>testGetsHubsFromRss092None</code>
      <code>testGetsHubsFromRss093</code>
      <code>testGetsHubsFromRss093None</code>
      <code>testGetsHubsFromRss094</code>
      <code>testGetsHubsFromRss094None</code>
      <code>testGetsHubsFromRss10</code>
      <code>testGetsHubsFromRss10None</code>
      <code>testGetsHubsFromRss20</code>
      <code>testGetsHubsFromRss20None</code>
      <code>testGetsImageFromRss090None</code>
      <code>testGetsImageFromRss091</code>
      <code>testGetsImageFromRss091None</code>
      <code>testGetsImageFromRss092</code>
      <code>testGetsImageFromRss092None</code>
      <code>testGetsImageFromRss093</code>
      <code>testGetsImageFromRss093None</code>
      <code>testGetsImageFromRss094</code>
      <code>testGetsImageFromRss094None</code>
      <code>testGetsImageFromRss10None</code>
      <code>testGetsImageFromRss20</code>
      <code>testGetsImageFromRss20None</code>
      <code>testGetsLanguageFromRss090</code>
      <code>testGetsLanguageFromRss090Dc10</code>
      <code>testGetsLanguageFromRss090Dc11</code>
      <code>testGetsLanguageFromRss090None</code>
      <code>testGetsLanguageFromRss091</code>
      <code>testGetsLanguageFromRss091Dc10</code>
      <code>testGetsLanguageFromRss091Dc11</code>
      <code>testGetsLanguageFromRss091None</code>
      <code>testGetsLanguageFromRss092</code>
      <code>testGetsLanguageFromRss092Dc10</code>
      <code>testGetsLanguageFromRss092Dc11</code>
      <code>testGetsLanguageFromRss092None</code>
      <code>testGetsLanguageFromRss093</code>
      <code>testGetsLanguageFromRss093Dc10</code>
      <code>testGetsLanguageFromRss093Dc11</code>
      <code>testGetsLanguageFromRss093None</code>
      <code>testGetsLanguageFromRss094</code>
      <code>testGetsLanguageFromRss094Dc10</code>
      <code>testGetsLanguageFromRss094Dc11</code>
      <code>testGetsLanguageFromRss094None</code>
      <code>testGetsLanguageFromRss10</code>
      <code>testGetsLanguageFromRss10Dc10</code>
      <code>testGetsLanguageFromRss10Dc11</code>
      <code>testGetsLanguageFromRss10None</code>
      <code>testGetsLanguageFromRss10XmlLang</code>
      <code>testGetsLanguageFromRss20</code>
      <code>testGetsLanguageFromRss20Dc10</code>
      <code>testGetsLanguageFromRss20Dc11</code>
      <code>testGetsLanguageFromRss20None</code>
      <code>testGetsLastBuildDateFromRss20</code>
      <code>testGetsLastBuildDateFromRss20None</code>
      <code>testGetsLinkFromRss090</code>
      <code>testGetsLinkFromRss090None</code>
      <code>testGetsLinkFromRss091</code>
      <code>testGetsLinkFromRss091None</code>
      <code>testGetsLinkFromRss092</code>
      <code>testGetsLinkFromRss092None</code>
      <code>testGetsLinkFromRss093</code>
      <code>testGetsLinkFromRss093None</code>
      <code>testGetsLinkFromRss094</code>
      <code>testGetsLinkFromRss094None</code>
      <code>testGetsLinkFromRss10</code>
      <code>testGetsLinkFromRss10None</code>
      <code>testGetsLinkFromRss20</code>
      <code>testGetsLinkFromRss20None</code>
      <code>testGetsOriginalSourceUriIfFeedLinkNotAvailableFromFeed</code>
      <code>testGetsSingleAuthorFromRss090</code>
      <code>testGetsSingleAuthorFromRss090Dc10</code>
      <code>testGetsSingleAuthorFromRss090Dc11</code>
      <code>testGetsSingleAuthorFromRss090None</code>
      <code>testGetsSingleAuthorFromRss091</code>
      <code>testGetsSingleAuthorFromRss091Dc10</code>
      <code>testGetsSingleAuthorFromRss091Dc11</code>
      <code>testGetsSingleAuthorFromRss091None</code>
      <code>testGetsSingleAuthorFromRss092</code>
      <code>testGetsSingleAuthorFromRss092Dc10</code>
      <code>testGetsSingleAuthorFromRss092Dc11</code>
      <code>testGetsSingleAuthorFromRss092None</code>
      <code>testGetsSingleAuthorFromRss093</code>
      <code>testGetsSingleAuthorFromRss093Dc10</code>
      <code>testGetsSingleAuthorFromRss093Dc11</code>
      <code>testGetsSingleAuthorFromRss093None</code>
      <code>testGetsSingleAuthorFromRss094</code>
      <code>testGetsSingleAuthorFromRss094Dc10</code>
      <code>testGetsSingleAuthorFromRss094Dc11</code>
      <code>testGetsSingleAuthorFromRss094None</code>
      <code>testGetsSingleAuthorFromRss10</code>
      <code>testGetsSingleAuthorFromRss10Dc10</code>
      <code>testGetsSingleAuthorFromRss10Dc11</code>
      <code>testGetsSingleAuthorFromRss10None</code>
      <code>testGetsSingleAuthorFromRss20</code>
      <code>testGetsSingleAuthorFromRss20Dc10</code>
      <code>testGetsSingleAuthorFromRss20Dc11</code>
      <code>testGetsSingleAuthorFromRss20None</code>
      <code>testGetsTitleFromRss090</code>
      <code>testGetsTitleFromRss090Atom10</code>
      <code>testGetsTitleFromRss090Dc10</code>
      <code>testGetsTitleFromRss090Dc11</code>
      <code>testGetsTitleFromRss090None</code>
      <code>testGetsTitleFromRss091</code>
      <code>testGetsTitleFromRss091Atom10</code>
      <code>testGetsTitleFromRss091Dc10</code>
      <code>testGetsTitleFromRss091Dc11</code>
      <code>testGetsTitleFromRss091None</code>
      <code>testGetsTitleFromRss092</code>
      <code>testGetsTitleFromRss092Atom10</code>
      <code>testGetsTitleFromRss092Dc10</code>
      <code>testGetsTitleFromRss092Dc11</code>
      <code>testGetsTitleFromRss092None</code>
      <code>testGetsTitleFromRss093</code>
      <code>testGetsTitleFromRss093Atom10</code>
      <code>testGetsTitleFromRss093Dc10</code>
      <code>testGetsTitleFromRss093Dc11</code>
      <code>testGetsTitleFromRss093None</code>
      <code>testGetsTitleFromRss094</code>
      <code>testGetsTitleFromRss094Atom10</code>
      <code>testGetsTitleFromRss094Dc10</code>
      <code>testGetsTitleFromRss094Dc11</code>
      <code>testGetsTitleFromRss094None</code>
      <code>testGetsTitleFromRss10</code>
      <code>testGetsTitleFromRss10Atom10</code>
      <code>testGetsTitleFromRss10Dc10</code>
      <code>testGetsTitleFromRss10Dc11</code>
      <code>testGetsTitleFromRss10None</code>
      <code>testGetsTitleFromRss20</code>
      <code>testGetsTitleFromRss20Atom10</code>
      <code>testGetsTitleFromRss20Dc10</code>
      <code>testGetsTitleFromRss20Dc11</code>
      <code>testGetsTitleFromRss20None</code>
    </MissingReturnType>
    <MixedOperand occurrences="282">
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
    </MixedOperand>
    <ReservedWord occurrences="336">
      <code>$this-&gt;assertCount(0, $feed)</code>
      <code>$this-&gt;assertEquals($edate, $feed-&gt;getDateModified())</code>
      <code>$this-&gt;assertEquals($edate, $feed-&gt;getLastBuildDate())</code>
      <code>$this-&gt;assertEquals($this-&gt;expectedCats, (array) $feed-&gt;getCategories())</code>
      <code>$this-&gt;assertEquals($this-&gt;expectedCatsAtom, (array) $feed-&gt;getCategories())</code>
      <code>$this-&gt;assertEquals($this-&gt;expectedCatsAtom, (array) $feed-&gt;getCategories())</code>
      <code>$this-&gt;assertEquals($this-&gt;expectedCatsAtom, (array) $feed-&gt;getCategories())</code>
      <code>$this-&gt;assertEquals($this-&gt;expectedCatsAtom, (array) $feed-&gt;getCategories())</code>
      <code>$this-&gt;assertEquals($this-&gt;expectedCatsAtom, (array) $feed-&gt;getCategories())</code>
      <code>$this-&gt;assertEquals($this-&gt;expectedCatsAtom, (array) $feed-&gt;getCategories())</code>
      <code>$this-&gt;assertEquals($this-&gt;expectedCatsRdf, (array) $feed-&gt;getCategories())</code>
      <code>$this-&gt;assertEquals($this-&gt;expectedCatsRdf, (array) $feed-&gt;getCategories())</code>
      <code>$this-&gt;assertEquals($this-&gt;expectedCatsRdf, (array) $feed-&gt;getCategories())</code>
      <code>$this-&gt;assertEquals($this-&gt;expectedCatsRdf, (array) $feed-&gt;getCategories())</code>
      <code>$this-&gt;assertEquals($this-&gt;expectedCatsRdf, (array) $feed-&gt;getCategories())</code>
      <code>$this-&gt;assertEquals($this-&gt;expectedCatsRdf, (array) $feed-&gt;getCategories())</code>
      <code>$this-&gt;assertEquals($this-&gt;expectedCatsRdf, (array) $feed-&gt;getCategories())</code>
      <code>$this-&gt;assertEquals($this-&gt;expectedCatsRdf, (array) $feed-&gt;getCategories())</code>
      <code>$this-&gt;assertEquals($this-&gt;expectedCatsRdf, (array) $feed-&gt;getCategories())</code>
      <code>$this-&gt;assertEquals($this-&gt;expectedCatsRdf, (array) $feed-&gt;getCategories())</code>
      <code>$this-&gt;assertEquals($this-&gt;expectedCatsRdf, (array) $feed-&gt;getCategories())</code>
      <code>$this-&gt;assertEquals($this-&gt;expectedCatsRdf, (array) $feed-&gt;getCategories())</code>
      <code>$this-&gt;assertEquals('Copyright 2008', $feed-&gt;getCopyright())</code>
      <code>$this-&gt;assertEquals('Copyright 2008', $feed-&gt;getCopyright())</code>
      <code>$this-&gt;assertEquals('Copyright 2008', $feed-&gt;getCopyright())</code>
      <code>$this-&gt;assertEquals('Copyright 2008', $feed-&gt;getCopyright())</code>
      <code>$this-&gt;assertEquals('Copyright 2008', $feed-&gt;getCopyright())</code>
      <code>$this-&gt;assertEquals('Copyright 2008', $feed-&gt;getCopyright())</code>
      <code>$this-&gt;assertEquals('Copyright 2008', $feed-&gt;getCopyright())</code>
      <code>$this-&gt;assertEquals('Copyright 2008', $feed-&gt;getCopyright())</code>
      <code>$this-&gt;assertEquals('Copyright 2008', $feed-&gt;getCopyright())</code>
      <code>$this-&gt;assertEquals('Copyright 2008', $feed-&gt;getCopyright())</code>
      <code>$this-&gt;assertEquals('Copyright 2008', $feed-&gt;getCopyright())</code>
      <code>$this-&gt;assertEquals('Copyright 2008', $feed-&gt;getCopyright())</code>
      <code>$this-&gt;assertEquals('Copyright 2008', $feed-&gt;getCopyright())</code>
      <code>$this-&gt;assertEquals('Copyright 2008', $feed-&gt;getCopyright())</code>
      <code>$this-&gt;assertEquals('Copyright 2008', $feed-&gt;getCopyright())</code>
      <code>$this-&gt;assertEquals('Copyright 2008', $feed-&gt;getCopyright())</code>
      <code>$this-&gt;assertEquals('Copyright 2008', $feed-&gt;getCopyright())</code>
      <code>$this-&gt;assertEquals('Copyright 2008', $feed-&gt;getCopyright())</code>
      <code>$this-&gt;assertEquals('Copyright 2008', $feed-&gt;getCopyright())</code>
      <code>$this-&gt;assertEquals('Laminas_Feed_Writer', $feed-&gt;getGenerator())</code>
      <code>$this-&gt;assertEquals('Laminas_Feed_Writer', $feed-&gt;getGenerator())</code>
      <code>$this-&gt;assertEquals('Laminas_Feed_Writer', $feed-&gt;getGenerator())</code>
      <code>$this-&gt;assertEquals('Laminas_Feed_Writer', $feed-&gt;getGenerator())</code>
      <code>$this-&gt;assertEquals('Laminas_Feed_Writer', $feed-&gt;getGenerator())</code>
      <code>$this-&gt;assertEquals('Laminas_Feed_Writer', $feed-&gt;getGenerator())</code>
      <code>$this-&gt;assertEquals('Laminas_Feed_Writer', $feed-&gt;getGenerator())</code>
      <code>$this-&gt;assertEquals('My Description', $feed-&gt;getDescription())</code>
      <code>$this-&gt;assertEquals('My Description', $feed-&gt;getDescription())</code>
      <code>$this-&gt;assertEquals('My Description', $feed-&gt;getDescription())</code>
      <code>$this-&gt;assertEquals('My Description', $feed-&gt;getDescription())</code>
      <code>$this-&gt;assertEquals('My Description', $feed-&gt;getDescription())</code>
      <code>$this-&gt;assertEquals('My Description', $feed-&gt;getDescription())</code>
      <code>$this-&gt;assertEquals('My Description', $feed-&gt;getDescription())</code>
      <code>$this-&gt;assertEquals('My Description', $feed-&gt;getDescription())</code>
      <code>$this-&gt;assertEquals('My Description', $feed-&gt;getDescription())</code>
      <code>$this-&gt;assertEquals('My Description', $feed-&gt;getDescription())</code>
      <code>$this-&gt;assertEquals('My Description', $feed-&gt;getDescription())</code>
      <code>$this-&gt;assertEquals('My Description', $feed-&gt;getDescription())</code>
      <code>$this-&gt;assertEquals('My Description', $feed-&gt;getDescription())</code>
      <code>$this-&gt;assertEquals('My Description', $feed-&gt;getDescription())</code>
      <code>$this-&gt;assertEquals('My Description', $feed-&gt;getDescription())</code>
      <code>$this-&gt;assertEquals('My Description', $feed-&gt;getDescription())</code>
      <code>$this-&gt;assertEquals('My Description', $feed-&gt;getDescription())</code>
      <code>$this-&gt;assertEquals('My Description', $feed-&gt;getDescription())</code>
      <code>$this-&gt;assertEquals('My Description', $feed-&gt;getDescription())</code>
      <code>$this-&gt;assertEquals('My Description', $feed-&gt;getDescription())</code>
      <code>$this-&gt;assertEquals('My Description', $feed-&gt;getDescription())</code>
      <code>$this-&gt;assertEquals('My Title', $feed-&gt;getTitle())</code>
      <code>$this-&gt;assertEquals('My Title', $feed-&gt;getTitle())</code>
      <code>$this-&gt;assertEquals('My Title', $feed-&gt;getTitle())</code>
      <code>$this-&gt;assertEquals('My Title', $feed-&gt;getTitle())</code>
      <code>$this-&gt;assertEquals('My Title', $feed-&gt;getTitle())</code>
      <code>$this-&gt;assertEquals('My Title', $feed-&gt;getTitle())</code>
      <code>$this-&gt;assertEquals('My Title', $feed-&gt;getTitle())</code>
      <code>$this-&gt;assertEquals('My Title', $feed-&gt;getTitle())</code>
      <code>$this-&gt;assertEquals('My Title', $feed-&gt;getTitle())</code>
      <code>$this-&gt;assertEquals('My Title', $feed-&gt;getTitle())</code>
      <code>$this-&gt;assertEquals('My Title', $feed-&gt;getTitle())</code>
      <code>$this-&gt;assertEquals('My Title', $feed-&gt;getTitle())</code>
      <code>$this-&gt;assertEquals('My Title', $feed-&gt;getTitle())</code>
      <code>$this-&gt;assertEquals('My Title', $feed-&gt;getTitle())</code>
      <code>$this-&gt;assertEquals('My Title', $feed-&gt;getTitle())</code>
      <code>$this-&gt;assertEquals('My Title', $feed-&gt;getTitle())</code>
      <code>$this-&gt;assertEquals('My Title', $feed-&gt;getTitle())</code>
      <code>$this-&gt;assertEquals('My Title', $feed-&gt;getTitle())</code>
      <code>$this-&gt;assertEquals('My Title', $feed-&gt;getTitle())</code>
      <code>$this-&gt;assertEquals('My Title', $feed-&gt;getTitle())</code>
      <code>$this-&gt;assertEquals('My Title', $feed-&gt;getTitle())</code>
      <code>$this-&gt;assertEquals('My Title', $feed-&gt;getTitle())</code>
      <code>$this-&gt;assertEquals('My Title', $feed-&gt;getTitle())</code>
      <code>$this-&gt;assertEquals('My Title', $feed-&gt;getTitle())</code>
      <code>$this-&gt;assertEquals('My Title', $feed-&gt;getTitle())</code>
      <code>$this-&gt;assertEquals('My Title', $feed-&gt;getTitle())</code>
      <code>$this-&gt;assertEquals('My Title', $feed-&gt;getTitle())</code>
      <code>$this-&gt;assertEquals('My Title', $feed-&gt;getTitle())</code>
      <code>$this-&gt;assertEquals('en', $feed-&gt;getLanguage())</code>
      <code>$this-&gt;assertEquals('en-GB', $feed-&gt;getLanguage())</code>
      <code>$this-&gt;assertEquals('en-GB', $feed-&gt;getLanguage())</code>
      <code>$this-&gt;assertEquals('en-GB', $feed-&gt;getLanguage())</code>
      <code>$this-&gt;assertEquals('en-GB', $feed-&gt;getLanguage())</code>
      <code>$this-&gt;assertEquals('en-GB', $feed-&gt;getLanguage())</code>
      <code>$this-&gt;assertEquals('en-GB', $feed-&gt;getLanguage())</code>
      <code>$this-&gt;assertEquals('en-GB', $feed-&gt;getLanguage())</code>
      <code>$this-&gt;assertEquals('en-GB', $feed-&gt;getLanguage())</code>
      <code>$this-&gt;assertEquals('en-GB', $feed-&gt;getLanguage())</code>
      <code>$this-&gt;assertEquals('en-GB', $feed-&gt;getLanguage())</code>
      <code>$this-&gt;assertEquals('en-GB', $feed-&gt;getLanguage())</code>
      <code>$this-&gt;assertEquals('en-GB', $feed-&gt;getLanguage())</code>
      <code>$this-&gt;assertEquals('en-GB', $feed-&gt;getLanguage())</code>
      <code>$this-&gt;assertEquals('en-GB', $feed-&gt;getLanguage())</code>
      <code>$this-&gt;assertEquals('en-GB', $feed-&gt;getLanguage())</code>
      <code>$this-&gt;assertEquals('en-GB', $feed-&gt;getLanguage())</code>
      <code>$this-&gt;assertEquals('en-GB', $feed-&gt;getLanguage())</code>
      <code>$this-&gt;assertEquals('en-GB', $feed-&gt;getLanguage())</code>
      <code>$this-&gt;assertEquals('en-GB', $feed-&gt;getLanguage())</code>
      <code>$this-&gt;assertEquals('http://www.example.com', $feed-&gt;getLink())</code>
      <code>$this-&gt;assertEquals('http://www.example.com', $feed-&gt;getLink())</code>
      <code>$this-&gt;assertEquals('http://www.example.com', $feed-&gt;getLink())</code>
      <code>$this-&gt;assertEquals('http://www.example.com', $feed-&gt;getLink())</code>
      <code>$this-&gt;assertEquals('http://www.example.com', $feed-&gt;getLink())</code>
      <code>$this-&gt;assertEquals('http://www.example.com', $feed-&gt;getLink())</code>
      <code>$this-&gt;assertEquals('http://www.example.com', $feed-&gt;getLink())</code>
      <code>$this-&gt;assertEquals('http://www.example.com/feed/rss', $feed-&gt;getFeedLink())</code>
      <code>$this-&gt;assertEquals('http://www.example.com/feed/rss', $feed-&gt;getFeedLink())</code>
      <code>$this-&gt;assertEquals('http://www.example.com/feed/rss', $feed-&gt;getFeedLink())</code>
      <code>$this-&gt;assertEquals('http://www.example.com/feed/rss', $feed-&gt;getFeedLink())</code>
      <code>$this-&gt;assertEquals('http://www.example.com/feed/rss', $feed-&gt;getFeedLink())</code>
      <code>$this-&gt;assertEquals('http://www.example.com/feed/rss', $feed-&gt;getFeedLink())</code>
      <code>$this-&gt;assertEquals('http://www.example.com/feed/rss', $feed-&gt;getFeedLink())</code>
      <code>$this-&gt;assertEquals('http://www.example.com/feed/rss', $feed-&gt;getFeedLink())</code>
      <code>$this-&gt;assertEquals(['Joe Bloggs', 'Jane Bloggs'], $feed-&gt;getAuthors()-&gt;getValues())</code>
      <code>$this-&gt;assertEquals(['Joe Bloggs', 'Jane Bloggs'], $feed-&gt;getAuthors()-&gt;getValues())</code>
      <code>$this-&gt;assertEquals(['Joe Bloggs', 'Jane Bloggs'], $feed-&gt;getAuthors()-&gt;getValues())</code>
      <code>$this-&gt;assertEquals(['Joe Bloggs', 'Jane Bloggs'], $feed-&gt;getAuthors()-&gt;getValues())</code>
      <code>$this-&gt;assertEquals(['Joe Bloggs', 'Jane Bloggs'], $feed-&gt;getAuthors()-&gt;getValues())</code>
      <code>$this-&gt;assertEquals(['Joe Bloggs', 'Jane Bloggs'], $feed-&gt;getAuthors()-&gt;getValues())</code>
      <code>$this-&gt;assertEquals(['Joe Bloggs', 'Jane Bloggs'], $feed-&gt;getAuthors()-&gt;getValues())</code>
      <code>$this-&gt;assertEquals(['Joe Bloggs', 'Jane Bloggs'], $feed-&gt;getAuthors()-&gt;getValues())</code>
      <code>$this-&gt;assertEquals(['Joe Bloggs', 'Jane Bloggs'], $feed-&gt;getAuthors()-&gt;getValues())</code>
      <code>$this-&gt;assertEquals(['Joe Bloggs', 'Jane Bloggs'], $feed-&gt;getAuthors()-&gt;getValues())</code>
      <code>$this-&gt;assertEquals(['Joe Bloggs', 'Jane Bloggs'], $feed-&gt;getAuthors()-&gt;getValues())</code>
      <code>$this-&gt;assertEquals(['Joe Bloggs', 'Jane Bloggs'], $feed-&gt;getAuthors()-&gt;getValues())</code>
      <code>$this-&gt;assertEquals(['Joe Bloggs', 'Jane Bloggs'], $feed-&gt;getAuthors()-&gt;getValues())</code>
      <code>$this-&gt;assertEquals(['Joe Bloggs', 'Jane Bloggs'], $feed-&gt;getAuthors()-&gt;getValues())</code>
      <code>$this-&gt;assertEquals(['Joe Bloggs', 'Jane Bloggs'], $feed-&gt;getAuthors()-&gt;getValues())</code>
      <code>$this-&gt;assertEquals(['Joe Bloggs', 'Jane Bloggs'], $feed-&gt;getAuthors()-&gt;getValues())</code>
      <code>$this-&gt;assertEquals(['Joe Bloggs', 'Jane Bloggs'], $feed-&gt;getAuthors()-&gt;getValues())</code>
      <code>$this-&gt;assertEquals(['Joe Bloggs', 'Jane Bloggs'], $feed-&gt;getAuthors()-&gt;getValues())</code>
      <code>$this-&gt;assertEquals(['Joe Bloggs', 'Jane Bloggs'], $feed-&gt;getAuthors()-&gt;getValues())</code>
      <code>$this-&gt;assertEquals(['Joe Bloggs', 'Jane Bloggs'], $feed-&gt;getAuthors()-&gt;getValues())</code>
      <code>$this-&gt;assertEquals(['Joe Bloggs', 'Jane Bloggs'], $feed-&gt;getAuthors()-&gt;getValues())</code>
      <code>$this-&gt;assertEquals(['Joe Bloggs', 'Jane Bloggs'], $feed-&gt;getAuthors()-&gt;getValues())</code>
      <code>$this-&gt;assertEquals(['Joe Bloggs', 'Jane Bloggs'], $feed-&gt;getAuthors()-&gt;getValues())</code>
      <code>$this-&gt;assertEquals(['Joe Bloggs', 'Jane Bloggs'], $feed-&gt;getAuthors()-&gt;getValues())</code>
      <code>$this-&gt;assertEquals(['Joe Bloggs', 'Jane Bloggs'], $feed-&gt;getAuthors()-&gt;getValues())</code>
      <code>$this-&gt;assertEquals(['Joe Bloggs', 'Jane Bloggs'], $feed-&gt;getAuthors()-&gt;getValues())</code>
      <code>$this-&gt;assertEquals(['Joe Bloggs', 'Jane Bloggs'], $feed-&gt;getAuthors()-&gt;getValues())</code>
      <code>$this-&gt;assertEquals(['Joe Bloggs', 'Jane Bloggs'], $feed-&gt;getAuthors()-&gt;getValues())</code>
      <code>$this-&gt;assertEquals(['name' =&gt; 'Joe Bloggs', 'email' =&gt; 'joe@example.com'], $feed-&gt;getAuthor())</code>
      <code>$this-&gt;assertEquals(['name' =&gt; 'Joe Bloggs', 'email' =&gt; 'joe@example.com'], $feed-&gt;getAuthor())</code>
      <code>$this-&gt;assertEquals(['name' =&gt; 'Joe Bloggs', 'email' =&gt; 'joe@example.com'], $feed-&gt;getAuthor())</code>
      <code>$this-&gt;assertEquals(['name' =&gt; 'Joe Bloggs', 'email' =&gt; 'joe@example.com'], $feed-&gt;getAuthor())</code>
      <code>$this-&gt;assertEquals(['name' =&gt; 'Joe Bloggs', 'email' =&gt; 'joe@example.com'], $feed-&gt;getAuthor())</code>
      <code>$this-&gt;assertEquals(['name' =&gt; 'Joe Bloggs', 'email' =&gt; 'joe@example.com'], $feed-&gt;getAuthor())</code>
      <code>$this-&gt;assertEquals(['name' =&gt; 'Joe Bloggs', 'email' =&gt; 'joe@example.com'], $feed-&gt;getAuthor())</code>
      <code>$this-&gt;assertEquals(['name' =&gt; 'Joe Bloggs'], $feed-&gt;getAuthor())</code>
      <code>$this-&gt;assertEquals(['name' =&gt; 'Joe Bloggs'], $feed-&gt;getAuthor())</code>
      <code>$this-&gt;assertEquals(['name' =&gt; 'Joe Bloggs'], $feed-&gt;getAuthor())</code>
      <code>$this-&gt;assertEquals(['name' =&gt; 'Joe Bloggs'], $feed-&gt;getAuthor())</code>
      <code>$this-&gt;assertEquals(['name' =&gt; 'Joe Bloggs'], $feed-&gt;getAuthor())</code>
      <code>$this-&gt;assertEquals(['name' =&gt; 'Joe Bloggs'], $feed-&gt;getAuthor())</code>
      <code>$this-&gt;assertEquals(['name' =&gt; 'Joe Bloggs'], $feed-&gt;getAuthor())</code>
      <code>$this-&gt;assertEquals(['name' =&gt; 'Joe Bloggs'], $feed-&gt;getAuthor())</code>
      <code>$this-&gt;assertEquals(['name' =&gt; 'Joe Bloggs'], $feed-&gt;getAuthor())</code>
      <code>$this-&gt;assertEquals(['name' =&gt; 'Joe Bloggs'], $feed-&gt;getAuthor())</code>
      <code>$this-&gt;assertEquals(['name' =&gt; 'Joe Bloggs'], $feed-&gt;getAuthor())</code>
      <code>$this-&gt;assertEquals(['name' =&gt; 'Joe Bloggs'], $feed-&gt;getAuthor())</code>
      <code>$this-&gt;assertEquals(['name' =&gt; 'Joe Bloggs'], $feed-&gt;getAuthor())</code>
      <code>$this-&gt;assertEquals(['name' =&gt; 'Joe Bloggs'], $feed-&gt;getAuthor())</code>
      <code>$this-&gt;assertEquals(['topic1', 'Cat &amp; Dog'], array_values($feed-&gt;getCategories()-&gt;getValues()))</code>
      <code>$this-&gt;assertEquals(['topic1', 'Cat &amp; Dog'], array_values($feed-&gt;getCategories()-&gt;getValues()))</code>
      <code>$this-&gt;assertEquals(['topic1', 'Cat &amp; Dog'], array_values($feed-&gt;getCategories()-&gt;getValues()))</code>
      <code>$this-&gt;assertEquals(['topic1', 'Cat &amp; Dog'], array_values($feed-&gt;getCategories()-&gt;getValues()))</code>
      <code>$this-&gt;assertEquals(['topic1', 'Cat &amp; Dog'], array_values($feed-&gt;getCategories()-&gt;getValues()))</code>
      <code>$this-&gt;assertEquals(['topic1', 'Cat &amp; Dog'], array_values($feed-&gt;getCategories()-&gt;getValues()))</code>
      <code>$this-&gt;assertEquals(['topic1', 'topic2'], array_values($feed-&gt;getCategories()-&gt;getValues()))</code>
      <code>$this-&gt;assertEquals(['topic1', 'topic2'], array_values($feed-&gt;getCategories()-&gt;getValues()))</code>
      <code>$this-&gt;assertEquals(['topic1', 'topic2'], array_values($feed-&gt;getCategories()-&gt;getValues()))</code>
      <code>$this-&gt;assertEquals(['topic1', 'topic2'], array_values($feed-&gt;getCategories()-&gt;getValues()))</code>
      <code>$this-&gt;assertEquals(['topic1', 'topic2'], array_values($feed-&gt;getCategories()-&gt;getValues()))</code>
      <code>$this-&gt;assertEquals(['topic1', 'topic2'], array_values($feed-&gt;getCategories()-&gt;getValues()))</code>
      <code>$this-&gt;assertEquals(['topic1', 'topic2'], array_values($feed-&gt;getCategories()-&gt;getValues()))</code>
      <code>$this-&gt;assertEquals(['topic1', 'topic2'], array_values($feed-&gt;getCategories()-&gt;getValues()))</code>
      <code>$this-&gt;assertEquals(['topic1', 'topic2'], array_values($feed-&gt;getCategories()-&gt;getValues()))</code>
      <code>$this-&gt;assertEquals(['topic1', 'topic2'], array_values($feed-&gt;getCategories()-&gt;getValues()))</code>
      <code>$this-&gt;assertEquals(['topic1', 'topic2'], array_values($feed-&gt;getCategories()-&gt;getValues()))</code>
      <code>$this-&gt;assertEquals(['topic1', 'topic2'], array_values($feed-&gt;getCategories()-&gt;getValues()))</code>
      <code>$this-&gt;assertEquals(['topic1', 'topic2'], array_values($feed-&gt;getCategories()-&gt;getValues()))</code>
      <code>$this-&gt;assertEquals([], (array) $feed-&gt;getCategories())</code>
      <code>$this-&gt;assertEquals([], (array) $feed-&gt;getCategories())</code>
      <code>$this-&gt;assertEquals([], (array) $feed-&gt;getCategories())</code>
      <code>$this-&gt;assertEquals([], (array) $feed-&gt;getCategories())</code>
      <code>$this-&gt;assertEquals([], (array) $feed-&gt;getCategories())</code>
      <code>$this-&gt;assertEquals([], (array) $feed-&gt;getCategories())</code>
      <code>$this-&gt;assertEquals([], (array) $feed-&gt;getCategories())</code>
      <code>$this-&gt;assertEquals([], array_values($feed-&gt;getCategories()-&gt;getValues()))</code>
      <code>$this-&gt;assertEquals([], array_values($feed-&gt;getCategories()-&gt;getValues()))</code>
      <code>$this-&gt;assertEquals([], array_values($feed-&gt;getCategories()-&gt;getValues()))</code>
      <code>$this-&gt;assertEquals([], array_values($feed-&gt;getCategories()-&gt;getValues()))</code>
      <code>$this-&gt;assertEquals([], array_values($feed-&gt;getCategories()-&gt;getValues()))</code>
      <code>$this-&gt;assertEquals([], array_values($feed-&gt;getCategories()-&gt;getValues()))</code>
      <code>$this-&gt;assertEquals([], array_values($feed-&gt;getCategories()-&gt;getValues()))</code>
      <code>$this-&gt;assertEquals(null, $feed-&gt;getAuthor())</code>
      <code>$this-&gt;assertEquals(null, $feed-&gt;getAuthor())</code>
      <code>$this-&gt;assertEquals(null, $feed-&gt;getAuthor())</code>
      <code>$this-&gt;assertEquals(null, $feed-&gt;getAuthor())</code>
      <code>$this-&gt;assertEquals(null, $feed-&gt;getAuthor())</code>
      <code>$this-&gt;assertEquals(null, $feed-&gt;getAuthor())</code>
      <code>$this-&gt;assertEquals(null, $feed-&gt;getAuthor())</code>
      <code>$this-&gt;assertEquals(null, $feed-&gt;getAuthors())</code>
      <code>$this-&gt;assertEquals(null, $feed-&gt;getAuthors())</code>
      <code>$this-&gt;assertEquals(null, $feed-&gt;getAuthors())</code>
      <code>$this-&gt;assertEquals(null, $feed-&gt;getAuthors())</code>
      <code>$this-&gt;assertEquals(null, $feed-&gt;getAuthors())</code>
      <code>$this-&gt;assertEquals(null, $feed-&gt;getAuthors())</code>
      <code>$this-&gt;assertEquals(null, $feed-&gt;getAuthors())</code>
      <code>$this-&gt;assertEquals(null, $feed-&gt;getCopyright())</code>
      <code>$this-&gt;assertEquals(null, $feed-&gt;getCopyright())</code>
      <code>$this-&gt;assertEquals(null, $feed-&gt;getCopyright())</code>
      <code>$this-&gt;assertEquals(null, $feed-&gt;getCopyright())</code>
      <code>$this-&gt;assertEquals(null, $feed-&gt;getCopyright())</code>
      <code>$this-&gt;assertEquals(null, $feed-&gt;getCopyright())</code>
      <code>$this-&gt;assertEquals(null, $feed-&gt;getCopyright())</code>
      <code>$this-&gt;assertEquals(null, $feed-&gt;getCopyright())</code>
      <code>$this-&gt;assertEquals(null, $feed-&gt;getCopyright())</code>
      <code>$this-&gt;assertEquals(null, $feed-&gt;getDescription())</code>
      <code>$this-&gt;assertEquals(null, $feed-&gt;getDescription())</code>
      <code>$this-&gt;assertEquals(null, $feed-&gt;getDescription())</code>
      <code>$this-&gt;assertEquals(null, $feed-&gt;getDescription())</code>
      <code>$this-&gt;assertEquals(null, $feed-&gt;getDescription())</code>
      <code>$this-&gt;assertEquals(null, $feed-&gt;getDescription())</code>
      <code>$this-&gt;assertEquals(null, $feed-&gt;getDescription())</code>
      <code>$this-&gt;assertEquals(null, $feed-&gt;getFeedLink())</code>
      <code>$this-&gt;assertEquals(null, $feed-&gt;getFeedLink())</code>
      <code>$this-&gt;assertEquals(null, $feed-&gt;getFeedLink())</code>
      <code>$this-&gt;assertEquals(null, $feed-&gt;getFeedLink())</code>
      <code>$this-&gt;assertEquals(null, $feed-&gt;getFeedLink())</code>
      <code>$this-&gt;assertEquals(null, $feed-&gt;getFeedLink())</code>
      <code>$this-&gt;assertEquals(null, $feed-&gt;getFeedLink())</code>
      <code>$this-&gt;assertEquals(null, $feed-&gt;getGenerator())</code>
      <code>$this-&gt;assertEquals(null, $feed-&gt;getGenerator())</code>
      <code>$this-&gt;assertEquals(null, $feed-&gt;getGenerator())</code>
      <code>$this-&gt;assertEquals(null, $feed-&gt;getGenerator())</code>
      <code>$this-&gt;assertEquals(null, $feed-&gt;getGenerator())</code>
      <code>$this-&gt;assertEquals(null, $feed-&gt;getGenerator())</code>
      <code>$this-&gt;assertEquals(null, $feed-&gt;getGenerator())</code>
      <code>$this-&gt;assertEquals(null, $feed-&gt;getHubs())</code>
      <code>$this-&gt;assertEquals(null, $feed-&gt;getHubs())</code>
      <code>$this-&gt;assertEquals(null, $feed-&gt;getHubs())</code>
      <code>$this-&gt;assertEquals(null, $feed-&gt;getHubs())</code>
      <code>$this-&gt;assertEquals(null, $feed-&gt;getHubs())</code>
      <code>$this-&gt;assertEquals(null, $feed-&gt;getHubs())</code>
      <code>$this-&gt;assertEquals(null, $feed-&gt;getHubs())</code>
      <code>$this-&gt;assertEquals(null, $feed-&gt;getImage())</code>
      <code>$this-&gt;assertEquals(null, $feed-&gt;getImage())</code>
      <code>$this-&gt;assertEquals(null, $feed-&gt;getImage())</code>
      <code>$this-&gt;assertEquals(null, $feed-&gt;getImage())</code>
      <code>$this-&gt;assertEquals(null, $feed-&gt;getImage())</code>
      <code>$this-&gt;assertEquals(null, $feed-&gt;getImage())</code>
      <code>$this-&gt;assertEquals(null, $feed-&gt;getImage())</code>
      <code>$this-&gt;assertEquals(null, $feed-&gt;getLanguage())</code>
      <code>$this-&gt;assertEquals(null, $feed-&gt;getLanguage())</code>
      <code>$this-&gt;assertEquals(null, $feed-&gt;getLanguage())</code>
      <code>$this-&gt;assertEquals(null, $feed-&gt;getLanguage())</code>
      <code>$this-&gt;assertEquals(null, $feed-&gt;getLanguage())</code>
      <code>$this-&gt;assertEquals(null, $feed-&gt;getLanguage())</code>
      <code>$this-&gt;assertEquals(null, $feed-&gt;getLanguage())</code>
      <code>$this-&gt;assertEquals(null, $feed-&gt;getLanguage())</code>
      <code>$this-&gt;assertEquals(null, $feed-&gt;getLanguage())</code>
      <code>$this-&gt;assertEquals(null, $feed-&gt;getLastBuildDate())</code>
      <code>$this-&gt;assertEquals(null, $feed-&gt;getLink())</code>
      <code>$this-&gt;assertEquals(null, $feed-&gt;getLink())</code>
      <code>$this-&gt;assertEquals(null, $feed-&gt;getLink())</code>
      <code>$this-&gt;assertEquals(null, $feed-&gt;getLink())</code>
      <code>$this-&gt;assertEquals(null, $feed-&gt;getLink())</code>
      <code>$this-&gt;assertEquals(null, $feed-&gt;getLink())</code>
      <code>$this-&gt;assertEquals(null, $feed-&gt;getLink())</code>
      <code>$this-&gt;assertEquals(null, $feed-&gt;getTitle())</code>
      <code>$this-&gt;assertEquals(null, $feed-&gt;getTitle())</code>
      <code>$this-&gt;assertEquals(null, $feed-&gt;getTitle())</code>
      <code>$this-&gt;assertEquals(null, $feed-&gt;getTitle())</code>
      <code>$this-&gt;assertEquals(null, $feed-&gt;getTitle())</code>
      <code>$this-&gt;assertEquals(null, $feed-&gt;getTitle())</code>
      <code>$this-&gt;assertEquals(null, $feed-&gt;getTitle())</code>
    </ReservedWord>
    <UndefinedInterfaceMethod occurrences="29">
      <code>getHubs</code>
      <code>getHubs</code>
      <code>getHubs</code>
      <code>getHubs</code>
      <code>getHubs</code>
      <code>getHubs</code>
      <code>getHubs</code>
      <code>getHubs</code>
      <code>getHubs</code>
      <code>getHubs</code>
      <code>getHubs</code>
      <code>getHubs</code>
      <code>getHubs</code>
      <code>getHubs</code>
      <code>getImage</code>
      <code>getImage</code>
      <code>getImage</code>
      <code>getImage</code>
      <code>getImage</code>
      <code>getImage</code>
      <code>getImage</code>
      <code>getImage</code>
      <code>getImage</code>
      <code>getImage</code>
      <code>getImage</code>
      <code>getImage</code>
      <code>getLastBuildDate</code>
      <code>getLastBuildDate</code>
      <code>setOriginalSourceUri</code>
    </UndefinedInterfaceMethod>
  </file>
  <file src="test/Reader/FeedSetTest.php">
    <MissingParamType occurrences="3">
      <code>$link</code>
      <code>$result</code>
      <code>$uri</code>
    </MissingParamType>
    <MissingReturnType occurrences="3">
      <code>linkAndUriProvider</code>
      <code>setUp</code>
      <code>testAbsolutiseUri</code>
    </MissingReturnType>
    <ReservedWord occurrences="1">
      <code>$this-&gt;assertEquals($result, $method-&gt;invoke($this-&gt;feedSet, $link, $uri))</code>
    </ReservedWord>
  </file>
  <file src="test/Reader/Http/LaminasHttpClientDecoratorTest.php">
    <MissingClosureReturnType occurrences="1">
      <code>function () use ($response) {</code>
    </MissingClosureReturnType>
    <MissingParamType occurrences="5">
      <code>$body</code>
      <code>$contains</code>
      <code>$headers</code>
      <code>$statusCode</code>
      <code>$uri</code>
    </MissingParamType>
    <MissingReturnType occurrences="9">
      <code>createMockHttpHeaders</code>
      <code>createMockHttpResponse</code>
      <code>invalidHeaders</code>
      <code>prepareDefaultClientInteractions</code>
      <code>setUp</code>
      <code>testDecoratorInjectsProvidedHeadersIntoClientWhenSending</code>
      <code>testDecoratorRaisesExceptionForInvalidHeaders</code>
      <code>testDecoratorReturnsFeedResponse</code>
      <code>testProvidesAccessToDecoratedClient</code>
    </MissingReturnType>
    <MixedArgument occurrences="9">
      <code>$contains</code>
      <code>$headers</code>
      <code>$headers-&gt;reveal()</code>
      <code>$httpResponse</code>
      <code>$httpResponse</code>
      <code>$responseHeaders-&gt;reveal()</code>
      <code>$this-&gt;client-&gt;reveal()</code>
      <code>$this-&gt;client-&gt;reveal()</code>
      <code>$this-&gt;client-&gt;reveal()</code>
    </MixedArgument>
    <MixedAssignment occurrences="5">
      <code>$headers</code>
      <code>$httpResponse</code>
      <code>$httpResponse</code>
      <code>$httpResponse</code>
      <code>$responseHeaders</code>
    </MixedAssignment>
    <MixedMethodCall occurrences="27">
      <code>getRequest</code>
      <code>getRequest</code>
      <code>resetParameters</code>
      <code>resetParameters</code>
      <code>reveal</code>
      <code>reveal</code>
      <code>reveal</code>
      <code>reveal</code>
      <code>reveal</code>
      <code>send</code>
      <code>setHeaders</code>
      <code>setHeaders</code>
      <code>setMethod</code>
      <code>setMethod</code>
      <code>setUri</code>
      <code>setUri</code>
      <code>shouldBeCalled</code>
      <code>shouldBeCalled</code>
      <code>shouldBeCalled</code>
      <code>shouldBeCalled</code>
      <code>shouldBeCalled</code>
      <code>shouldBeCalled</code>
      <code>shouldBeCalled</code>
      <code>shouldBeCalled</code>
      <code>will</code>
      <code>willReturn</code>
      <code>willReturn</code>
    </MixedMethodCall>
    <ReservedWord occurrences="11">
      <code>$this-&gt;assertEquals('', $response-&gt;getBody())</code>
      <code>$this-&gt;assertEquals('', $response-&gt;getBody())</code>
      <code>$this-&gt;assertEquals('application/rss+xml', $response-&gt;getHeaderLine('Content-Type'))</code>
      <code>$this-&gt;assertEquals('application/rss+xml', $response-&gt;getHeaderLine('Content-Type'))</code>
      <code>$this-&gt;assertEquals(1234, $response-&gt;getHeaderLine('Content-Length'))</code>
      <code>$this-&gt;assertEquals(1234.56, $response-&gt;getHeaderLine('X-Content-Length'))</code>
      <code>$this-&gt;assertEquals(200, $response-&gt;getStatusCode())</code>
      <code>$this-&gt;assertEquals(200, $response-&gt;getStatusCode())</code>
      <code>$this-&gt;assertInstanceOf(FeedResponse::class, $response)</code>
      <code>$this-&gt;assertInstanceOf(FeedResponse::class, $response)</code>
      <code>$this-&gt;expectExceptionMessage($contains)</code>
    </ReservedWord>
    <UndefinedThisPropertyAssignment occurrences="1">
      <code>$this-&gt;client</code>
    </UndefinedThisPropertyAssignment>
    <UndefinedThisPropertyFetch occurrences="4">
      <code>$this-&gt;client</code>
      <code>$this-&gt;client</code>
      <code>$this-&gt;client</code>
      <code>$this-&gt;client</code>
    </UndefinedThisPropertyFetch>
  </file>
  <file src="test/Reader/Http/Psr7ResponseDecoratorTest.php">
    <MissingReturnType occurrences="9">
      <code>testCanRetrieveDecoratedResponse</code>
      <code>testCastsStreamToStringWhenReturningPsr7Body</code>
      <code>testDecoratorIsAFeedResponse</code>
      <code>testDecoratorIsAHeaderAwareResponse</code>
      <code>testDecoratorIsNotAPsr7Response</code>
      <code>testDecoratorReturnsDefaultValueWhenOriginalResponseDoesNotHaveHeader</code>
      <code>testProxiesToDecoratedResponseToRetrieveBody</code>
      <code>testProxiesToDecoratedResponseToRetrieveHeaderLine</code>
      <code>testProxiesToDecoratedResponseToRetrieveStatusCode</code>
    </MissingReturnType>
    <ReservedWord occurrences="3">
      <code>$this-&gt;assertInstanceOf(HeaderAwareResponseInterface::class, $decorator)</code>
      <code>$this-&gt;assertInstanceOf(ResponseInterface::class, $decorator)</code>
      <code>$this-&gt;assertNotInstanceOf(Psr7ResponseInterface::class, $decorator)</code>
    </ReservedWord>
  </file>
  <file src="test/Reader/Http/ResponseTest.php">
    <DeprecatedMethod occurrences="2">
      <code>assertAttributeSame</code>
      <code>assertAttributeSame</code>
    </DeprecatedMethod>
    <MissingParamType occurrences="5">
      <code>$body</code>
      <code>$contains</code>
      <code>$contains</code>
      <code>$headers</code>
      <code>$statusCode</code>
    </MissingParamType>
    <MissingReturnType occurrences="11">
      <code>invalidBodies</code>
      <code>invalidHeaders</code>
      <code>invalidStatusCodes</code>
      <code>testConstructorCanAcceptAStringCastableObjectForTheResponseBody</code>
      <code>testConstructorCanAcceptHeaders</code>
      <code>testConstructorCanAcceptResponseBody</code>
      <code>testConstructorOnlyRequiresStatusCode</code>
      <code>testConstructorRaisesExceptionForInvalidBody</code>
      <code>testConstructorRaisesExceptionForInvalidHeaderStructures</code>
      <code>testConstructorRaisesExceptionForInvalidStatusCode</code>
      <code>testRetrievingHeaderLineWithDefaultValueReturnsDefaultValueWhenHeaderIsNotFound</code>
    </MissingReturnType>
    <MixedArgument occurrences="5">
      <code>$body</code>
      <code>$contains</code>
      <code>$contains</code>
      <code>$headers</code>
      <code>$statusCode</code>
    </MixedArgument>
    <ReservedWord occurrences="14">
      <code>$this-&gt;assertAttributeSame([], 'headers', $response)</code>
      <code>$this-&gt;assertAttributeSame([], 'headers', $response)</code>
      <code>$this-&gt;assertEquals('', $response-&gt;getBody())</code>
      <code>$this-&gt;assertEquals('', $response-&gt;getBody())</code>
      <code>$this-&gt;assertEquals('BODY', $response-&gt;getBody())</code>
      <code>$this-&gt;assertEquals('CREATED', $response-&gt;getBody())</code>
      <code>$this-&gt;assertEquals('http://example.org/foo', $response-&gt;getHeaderLine('Location'))</code>
      <code>$this-&gt;assertEquals(1234, $response-&gt;getHeaderLine('Content-Length'))</code>
      <code>$this-&gt;assertEquals(1234.56, $response-&gt;getHeaderLine('X-Content-Length'))</code>
      <code>$this-&gt;assertEquals(200, $response-&gt;getStatusCode())</code>
      <code>$this-&gt;assertEquals(201, $response-&gt;getStatusCode())</code>
      <code>$this-&gt;assertEquals(204, $response-&gt;getStatusCode())</code>
      <code>$this-&gt;expectExceptionMessage($contains)</code>
      <code>$this-&gt;expectExceptionMessage($contains)</code>
    </ReservedWord>
  </file>
  <file src="test/Reader/Integration/GooglePlayPodcastRss2Test.php">
    <MissingPropertyType occurrences="1">
      <code>$feedSamplePath</code>
    </MissingPropertyType>
    <MissingReturnType occurrences="41">
      <code>setUp</code>
      <code>testCanRetrieveEntryImage</code>
      <code>testCanRetrievePodcastType</code>
      <code>testGetEpisodeReturnsNullIfNoTagPresent</code>
      <code>testGetEpisodeReturnsValueWhenTagPresent</code>
      <code>testGetEpisodeTypeReturnsFullIfNoTagPresent</code>
      <code>testGetEpisodeTypeReturnsValueWhenTagPresent</code>
      <code>testGetSeasonReturnsNullIfNoTagPresent</code>
      <code>testGetSeasonReturnsValueWhenTagPresent</code>
      <code>testGetsCastAuthor</code>
      <code>testGetsCategories</code>
      <code>testGetsCopyright</code>
      <code>testGetsDescription</code>
      <code>testGetsDuration</code>
      <code>testGetsEnclosure</code>
      <code>testGetsEncoding</code>
      <code>testGetsEntryBlock</code>
      <code>testGetsEntryCastAuthor</code>
      <code>testGetsEntryCount</code>
      <code>testGetsEntryEncoding</code>
      <code>testGetsEntryExplicit</code>
      <code>testGetsEntryId</code>
      <code>testGetsEntryTitle</code>
      <code>testGetsEpisodeDescription</code>
      <code>testGetsFeedBlock</code>
      <code>testGetsFeedExplicit</code>
      <code>testGetsImage</code>
      <code>testGetsLanguage</code>
      <code>testGetsLink</code>
      <code>testGetsNewFeedUrl</code>
      <code>testGetsOwner</code>
      <code>testGetsPodcastDescription</code>
      <code>testGetsSubtitle</code>
      <code>testGetsTitle</code>
      <code>testIsClosedCaptionedReturnsFalseWhenEpisodeDefinesItWithValueOtherThanYes</code>
      <code>testIsClosedCaptionedReturnsFalseWhenEpisodeDoesNotDefineIt</code>
      <code>testIsClosedCaptionedReturnsTrueWhenEpisodeDefinesItWithValueYes</code>
      <code>testIsCompleteReturnsFalseWhenTagValueIsSomethingOtherThanYes</code>
      <code>testIsCompleteReturnsTrueWhenTagValueIsYes</code>
      <code>testIsNotCompleteByDefault</code>
      <code>testPodcastTypeIsEpisodicWhenNoTagPresent</code>
    </MissingReturnType>
    <MixedArgument occurrences="35">
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
    </MixedArgument>
    <MixedAssignment occurrences="20">
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
    </MixedAssignment>
    <MixedMethodCall occurrences="20">
      <code>getCastAuthor</code>
      <code>getDuration</code>
      <code>getEnclosure</code>
      <code>getEncoding</code>
      <code>getEpisode</code>
      <code>getEpisode</code>
      <code>getEpisodeType</code>
      <code>getEpisodeType</code>
      <code>getId</code>
      <code>getItunesImage</code>
      <code>getPlayPodcastBlock</code>
      <code>getPlayPodcastDescription</code>
      <code>getPlayPodcastExplicit</code>
      <code>getSeason</code>
      <code>getSeason</code>
      <code>getSubtitle</code>
      <code>getTitle</code>
      <code>isClosedCaptioned</code>
      <code>isClosedCaptioned</code>
      <code>isClosedCaptioned</code>
    </MixedMethodCall>
    <ReservedWord occurrences="40">
      <code>$this-&gt;assertEquals($expected, $entry-&gt;getEnclosure())</code>
      <code>$this-&gt;assertEquals($expected, $entry-&gt;getPlayPodcastDescription())</code>
      <code>$this-&gt;assertEquals($expected, $entry-&gt;getSubtitle())</code>
      <code>$this-&gt;assertEquals($expected, $feed-&gt;getDescription())</code>
      <code>$this-&gt;assertEquals($expected, $feed-&gt;getPlayPodcastDescription())</code>
      <code>$this-&gt;assertEquals('7:04', $entry-&gt;getDuration())</code>
      <code>$this-&gt;assertEquals('All About Everything', $feed-&gt;getTitle())</code>
      <code>$this-&gt;assertEquals('John Doe', $entry-&gt;getCastAuthor())</code>
      <code>$this-&gt;assertEquals('John Doe', $feed-&gt;getPlayPodcastAuthor())</code>
      <code>$this-&gt;assertEquals('Shake Shake Shake Your Spices', $entry-&gt;getTitle())</code>
      <code>$this-&gt;assertEquals('UTF-8', $entry-&gt;getEncoding())</code>
      <code>$this-&gt;assertEquals('UTF-8', $feed-&gt;getEncoding())</code>
      <code>$this-&gt;assertEquals('bonus', $entry-&gt;getEpisodeType())</code>
      <code>$this-&gt;assertEquals('en-us', $feed-&gt;getLanguage())</code>
      <code>$this-&gt;assertEquals('episodic', $feed-&gt;getPodcastType())</code>
      <code>$this-&gt;assertEquals('full', $entry-&gt;getEpisodeType())</code>
      <code>$this-&gt;assertEquals('http://example.com/podcasts/archive/aae20050615.m4a', $entry-&gt;getId())</code>
      <code>$this-&gt;assertEquals('http://newlocation.com/example.rss', $feed-&gt;getNewFeedUrl())</code>
      <code>$this-&gt;assertEquals('http://www.example.com/podcasts/everything/index.html', $feed-&gt;getLink())</code>
      <code>$this-&gt;assertEquals('john.doe@example.com (John Doe)', $feed-&gt;getOwner())</code>
      <code>$this-&gt;assertEquals('no', $entry-&gt;getPlayPodcastExplicit())</code>
      <code>$this-&gt;assertEquals('no', $feed-&gt;getPlayPodcastBlock())</code>
      <code>$this-&gt;assertEquals('serial', $feed-&gt;getPodcastType())</code>
      <code>$this-&gt;assertEquals('yes', $entry-&gt;getPlayPodcastBlock())</code>
      <code>$this-&gt;assertEquals('yes', $feed-&gt;getPlayPodcastExplicit())</code>
      <code>$this-&gt;assertEquals('℗ &amp; © 2005 John Doe &amp; Family', $feed-&gt;getCopyright())</code>
      <code>$this-&gt;assertEquals(10, $entry-&gt;getEpisode())</code>
      <code>$this-&gt;assertEquals(3, $entry-&gt;getSeason())</code>
      <code>$this-&gt;assertEquals(3, $feed-&gt;count())</code>
      <code>$this-&gt;assertFalse($entry-&gt;isClosedCaptioned())</code>
      <code>$this-&gt;assertFalse($entry-&gt;isClosedCaptioned())</code>
      <code>$this-&gt;assertFalse($feed-&gt;isComplete())</code>
      <code>$this-&gt;assertFalse($feed-&gt;isComplete())</code>
      <code>$this-&gt;assertNull($entry-&gt;getEpisode())</code>
      <code>$this-&gt;assertNull($entry-&gt;getSeason())</code>
      <code>$this-&gt;assertTrue($entry-&gt;isClosedCaptioned())</code>
      <code>$this-&gt;assertTrue($feed-&gt;isComplete())</code>
    </ReservedWord>
    <UndefinedInterfaceMethod occurrences="14">
      <code>getEncoding</code>
      <code>getNewFeedUrl</code>
      <code>getOwner</code>
      <code>getPlayPodcastAuthor</code>
      <code>getPlayPodcastBlock</code>
      <code>getPlayPodcastCategories</code>
      <code>getPlayPodcastDescription</code>
      <code>getPlayPodcastExplicit</code>
      <code>getPlayPodcastImage</code>
      <code>getPodcastType</code>
      <code>getPodcastType</code>
      <code>isComplete</code>
      <code>isComplete</code>
      <code>isComplete</code>
    </UndefinedInterfaceMethod>
  </file>
  <file src="test/Reader/Integration/HOnlineComAtom10Test.php">
    <MissingPropertyType occurrences="1">
      <code>$feedSamplePath</code>
    </MissingPropertyType>
    <MissingReturnType occurrences="20">
      <code>setUp</code>
      <code>testGetsAuthors</code>
      <code>testGetsCopyright</code>
      <code>testGetsDescription</code>
      <code>testGetsEncoding</code>
      <code>testGetsEntryAuthors</code>
      <code>testGetsEntryContent</code>
      <code>testGetsEntryCount</code>
      <code>testGetsEntryDescription</code>
      <code>testGetsEntryEncoding</code>
      <code>testGetsEntryId</code>
      <code>testGetsEntryLink</code>
      <code>testGetsEntryLinks</code>
      <code>testGetsEntryPermaLink</code>
      <code>testGetsEntrySingleAuthor</code>
      <code>testGetsEntryTitle</code>
      <code>testGetsLanguage</code>
      <code>testGetsLink</code>
      <code>testGetsSingleAuthor</code>
      <code>testGetsTitle</code>
    </MissingReturnType>
    <MixedArgument occurrences="19">
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
    </MixedArgument>
    <MixedAssignment occurrences="10">
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
    </MixedAssignment>
    <MixedMethodCall occurrences="10">
      <code>getAuthor</code>
      <code>getAuthors</code>
      <code>getContent</code>
      <code>getDescription</code>
      <code>getEncoding</code>
      <code>getId</code>
      <code>getLink</code>
      <code>getLinks</code>
      <code>getPermaLink</code>
      <code>getTitle</code>
    </MixedMethodCall>
    <ReservedWord occurrences="19">
      <code>$this-&gt;assertEquals('McAfee update brings systems down again', $entry-&gt;getTitle())</code>
      <code>$this-&gt;assertEquals('Technology news', $feed-&gt;getDescription())</code>
      <code>$this-&gt;assertEquals('The H - news feed', $feed-&gt;getTitle())</code>
      <code>$this-&gt;assertEquals('UTF-8', $entry-&gt;getEncoding())</code>
      <code>$this-&gt;assertEquals('UTF-8', $feed-&gt;getEncoding())</code>
      <code>$this-&gt;assertEquals('http://www.h-online.com', $feed-&gt;getLink())</code>
      <code>$this-&gt;assertEquals(60, $feed-&gt;count())</code>
      <code>$this-&gt;assertEquals(['name' =&gt; 'The H'], $entry-&gt;getAuthor())</code>
      <code>$this-&gt;assertEquals(['name' =&gt; 'The H'], $feed-&gt;getAuthor())</code>
      <code>$this-&gt;assertEquals([['name' =&gt; 'The H']], (array) $entry-&gt;getAuthors())</code>
      <code>$this-&gt;assertEquals([['name' =&gt; 'The H']], (array) $feed-&gt;getAuthors())</code>
      <code>$this-&gt;assertEquals(null, $feed-&gt;getCopyright())</code>
      <code>$this-&gt;assertEquals(null, $feed-&gt;getLanguage())</code>
    </ReservedWord>
    <UndefinedInterfaceMethod occurrences="1">
      <code>getEncoding</code>
    </UndefinedInterfaceMethod>
  </file>
  <file src="test/Reader/Integration/LautDeRdfTest.php">
    <MissingPropertyType occurrences="1">
      <code>$feedSamplePath</code>
    </MissingPropertyType>
    <MissingReturnType occurrences="19">
      <code>setUp</code>
      <code>testGetsAuthors</code>
      <code>testGetsCopyright</code>
      <code>testGetsDescription</code>
      <code>testGetsEncoding</code>
      <code>testGetsEntryAuthors</code>
      <code>testGetsEntryContent</code>
      <code>testGetsEntryDescription</code>
      <code>testGetsEntryEncoding</code>
      <code>testGetsEntryId</code>
      <code>testGetsEntryLink</code>
      <code>testGetsEntryLinks</code>
      <code>testGetsEntryPermaLink</code>
      <code>testGetsEntrySingleAuthor</code>
      <code>testGetsEntryTitle</code>
      <code>testGetsLanguage</code>
      <code>testGetsLink</code>
      <code>testGetsSingleAuthor</code>
      <code>testGetsTitle</code>
    </MissingReturnType>
    <MixedArgument occurrences="18">
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
    </MixedArgument>
    <MixedAssignment occurrences="10">
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
    </MixedAssignment>
    <MixedMethodCall occurrences="10">
      <code>getAuthor</code>
      <code>getAuthors</code>
      <code>getContent</code>
      <code>getDescription</code>
      <code>getEncoding</code>
      <code>getId</code>
      <code>getLink</code>
      <code>getLinks</code>
      <code>getPermaLink</code>
      <code>getTitle</code>
    </MixedMethodCall>
    <ReservedWord occurrences="18">
      <code>$this-&gt;assertEquals('Angelika Express: MySpace-Aus wegen Sido-Werbung', $entry-&gt;getTitle())</code>
      <code>$this-&gt;assertEquals('Copyright © 2004 laut.de', $feed-&gt;getCopyright())</code>
      <code>$this-&gt;assertEquals('ISO-8859-1', $entry-&gt;getEncoding())</code>
      <code>$this-&gt;assertEquals('ISO-8859-1', $feed-&gt;getEncoding())</code>
      <code>$this-&gt;assertEquals('http://www.laut.de', $feed-&gt;getLink())</code>
      <code>$this-&gt;assertEquals('http://www.laut.de/vorlaut/news/2009/07/04/22426/index.htm', $entry-&gt;getId())</code>
      <code>$this-&gt;assertEquals('http://www.laut.de/vorlaut/news/2009/07/04/22426/index.htm', $entry-&gt;getLink())</code>
      <code>$this-&gt;assertEquals('laut.de - news', $feed-&gt;getTitle())</code>
      <code>$this-&gt;assertEquals('laut.de: aktuelle News', $feed-&gt;getDescription())</code>
      <code>$this-&gt;assertEquals(['http://www.laut.de/vorlaut/news/2009/07/04/22426/index.htm'], $entry-&gt;getLinks())</code>
      <code>$this-&gt;assertEquals(['name' =&gt; 'laut.de'], $entry-&gt;getAuthor())</code>
      <code>$this-&gt;assertEquals(['name' =&gt; 'laut.de'], $feed-&gt;getAuthor())</code>
      <code>$this-&gt;assertEquals([['name' =&gt; 'laut.de']], (array) $entry-&gt;getAuthors())</code>
      <code>$this-&gt;assertEquals([['name' =&gt; 'laut.de']], (array) $feed-&gt;getAuthors())</code>
      <code>$this-&gt;assertEquals(null, $feed-&gt;getLanguage())</code>
    </ReservedWord>
    <UndefinedInterfaceMethod occurrences="1">
      <code>getEncoding</code>
    </UndefinedInterfaceMethod>
  </file>
  <file src="test/Reader/Integration/PodcastRss2Test.php">
    <MissingClosureParamType occurrences="2">
      <code>$errno</code>
      <code>$errstr</code>
    </MissingClosureParamType>
    <MissingPropertyType occurrences="1">
      <code>$feedSamplePath</code>
    </MissingPropertyType>
    <MissingReturnType occurrences="41">
      <code>setUp</code>
      <code>testCanRetrieveEntryImage</code>
      <code>testCanRetrievePodcastType</code>
      <code>testGetEpisodeReturnsNullIfNoTagPresent</code>
      <code>testGetEpisodeReturnsValueWhenTagPresent</code>
      <code>testGetEpisodeTypeReturnsFullIfNoTagPresent</code>
      <code>testGetEpisodeTypeReturnsValueWhenTagPresent</code>
      <code>testGetSeasonReturnsNullIfNoTagPresent</code>
      <code>testGetSeasonReturnsValueWhenTagPresent</code>
      <code>testGetsCastAuthor</code>
      <code>testGetsCategories</code>
      <code>testGetsCopyright</code>
      <code>testGetsDescription</code>
      <code>testGetsDuration</code>
      <code>testGetsEnclosure</code>
      <code>testGetsEncoding</code>
      <code>testGetsEntryBlock</code>
      <code>testGetsEntryCastAuthor</code>
      <code>testGetsEntryCount</code>
      <code>testGetsEntryEncoding</code>
      <code>testGetsEntryExplicit</code>
      <code>testGetsEntryId</code>
      <code>testGetsEntryTitle</code>
      <code>testGetsFeedBlock</code>
      <code>testGetsFeedExplicit</code>
      <code>testGetsImage</code>
      <code>testGetsKeywords</code>
      <code>testGetsLanguage</code>
      <code>testGetsLink</code>
      <code>testGetsNewFeedUrl</code>
      <code>testGetsOwner</code>
      <code>testGetsSubtitle</code>
      <code>testGetsSummary</code>
      <code>testGetsTitle</code>
      <code>testIsClosedCaptionedReturnsFalseWhenEpisodeDefinesItWithValueOtherThanYes</code>
      <code>testIsClosedCaptionedReturnsFalseWhenEpisodeDoesNotDefineIt</code>
      <code>testIsClosedCaptionedReturnsTrueWhenEpisodeDefinesItWithValueYes</code>
      <code>testIsCompleteReturnsFalseWhenTagValueIsSomethingOtherThanYes</code>
      <code>testIsCompleteReturnsTrueWhenTagValueIsYes</code>
      <code>testIsNotCompleteByDefault</code>
      <code>testPodcastTypeIsEpisodicWhenNoTagPresent</code>
    </MissingReturnType>
    <MixedArgument occurrences="36">
      <code>$errstr</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
    </MixedArgument>
    <MixedAssignment occurrences="22">
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$keywords</code>
    </MixedAssignment>
    <MixedMethodCall occurrences="21">
      <code>getBlock</code>
      <code>getCastAuthor</code>
      <code>getDuration</code>
      <code>getEnclosure</code>
      <code>getEncoding</code>
      <code>getEpisode</code>
      <code>getEpisode</code>
      <code>getEpisodeType</code>
      <code>getEpisodeType</code>
      <code>getExplicit</code>
      <code>getId</code>
      <code>getItunesImage</code>
      <code>getKeywords</code>
      <code>getSeason</code>
      <code>getSeason</code>
      <code>getSubtitle</code>
      <code>getSummary</code>
      <code>getTitle</code>
      <code>isClosedCaptioned</code>
      <code>isClosedCaptioned</code>
      <code>isClosedCaptioned</code>
    </MixedMethodCall>
    <ReservedWord occurrences="40">
      <code>$this-&gt;assertEquals($expected, $entry-&gt;getEnclosure())</code>
      <code>$this-&gt;assertEquals($expected, $entry-&gt;getSubtitle())</code>
      <code>$this-&gt;assertEquals($expected, $entry-&gt;getSummary())</code>
      <code>$this-&gt;assertEquals($expected, $feed-&gt;getDescription())</code>
      <code>$this-&gt;assertEquals($expected, $keywords)</code>
      <code>$this-&gt;assertEquals('7:04', $entry-&gt;getDuration())</code>
      <code>$this-&gt;assertEquals('All About Everything', $feed-&gt;getTitle())</code>
      <code>$this-&gt;assertEquals('John Doe', $entry-&gt;getCastAuthor())</code>
      <code>$this-&gt;assertEquals('John Doe', $feed-&gt;getCastAuthor())</code>
      <code>$this-&gt;assertEquals('Shake Shake Shake Your Spices', $entry-&gt;getTitle())</code>
      <code>$this-&gt;assertEquals('UTF-8', $entry-&gt;getEncoding())</code>
      <code>$this-&gt;assertEquals('UTF-8', $feed-&gt;getEncoding())</code>
      <code>$this-&gt;assertEquals('bonus', $entry-&gt;getEpisodeType())</code>
      <code>$this-&gt;assertEquals('en-us', $feed-&gt;getLanguage())</code>
      <code>$this-&gt;assertEquals('episodic', $feed-&gt;getPodcastType())</code>
      <code>$this-&gt;assertEquals('full', $entry-&gt;getEpisodeType())</code>
      <code>$this-&gt;assertEquals('http://example.com/podcasts/archive/aae20050615.m4a', $entry-&gt;getId())</code>
      <code>$this-&gt;assertEquals('http://example.com/podcasts/everything/AllAboutEverything.jpg', $feed-&gt;getItunesImage())</code>
      <code>$this-&gt;assertEquals('http://newlocation.com/example.rss', $feed-&gt;getNewFeedUrl())</code>
      <code>$this-&gt;assertEquals('http://www.example.com/podcasts/everything/index.html', $feed-&gt;getLink())</code>
      <code>$this-&gt;assertEquals('john.doe@example.com (John Doe)', $feed-&gt;getOwner())</code>
      <code>$this-&gt;assertEquals('no', $entry-&gt;getExplicit())</code>
      <code>$this-&gt;assertEquals('no', $feed-&gt;getBlock())</code>
      <code>$this-&gt;assertEquals('serial', $feed-&gt;getPodcastType())</code>
      <code>$this-&gt;assertEquals('yes', $entry-&gt;getBlock())</code>
      <code>$this-&gt;assertEquals('yes', $feed-&gt;getExplicit())</code>
      <code>$this-&gt;assertEquals('℗ &amp; © 2005 John Doe &amp; Family', $feed-&gt;getCopyright())</code>
      <code>$this-&gt;assertEquals(10, $entry-&gt;getEpisode())</code>
      <code>$this-&gt;assertEquals(3, $entry-&gt;getSeason())</code>
      <code>$this-&gt;assertEquals(3, $feed-&gt;count())</code>
      <code>$this-&gt;assertFalse($entry-&gt;isClosedCaptioned())</code>
      <code>$this-&gt;assertFalse($entry-&gt;isClosedCaptioned())</code>
      <code>$this-&gt;assertFalse($feed-&gt;isComplete())</code>
      <code>$this-&gt;assertFalse($feed-&gt;isComplete())</code>
      <code>$this-&gt;assertNull($entry-&gt;getEpisode())</code>
      <code>$this-&gt;assertNull($entry-&gt;getSeason())</code>
      <code>$this-&gt;assertTrue($entry-&gt;isClosedCaptioned())</code>
      <code>$this-&gt;assertTrue($feed-&gt;isComplete())</code>
    </ReservedWord>
    <UndefinedInterfaceMethod occurrences="13">
      <code>getBlock</code>
      <code>getCastAuthor</code>
      <code>getEncoding</code>
      <code>getExplicit</code>
      <code>getItunesCategories</code>
      <code>getItunesImage</code>
      <code>getNewFeedUrl</code>
      <code>getOwner</code>
      <code>getPodcastType</code>
      <code>getPodcastType</code>
      <code>isComplete</code>
      <code>isComplete</code>
      <code>isComplete</code>
    </UndefinedInterfaceMethod>
  </file>
  <file src="test/Reader/Integration/WordpressAtom10Test.php">
    <MissingPropertyType occurrences="1">
      <code>$feedSamplePath</code>
    </MissingPropertyType>
    <MissingReturnType occurrences="20">
      <code>setUp</code>
      <code>testGetsAuthors</code>
      <code>testGetsCopyright</code>
      <code>testGetsDescription</code>
      <code>testGetsEncoding</code>
      <code>testGetsEntryAuthors</code>
      <code>testGetsEntryContent</code>
      <code>testGetsEntryCount</code>
      <code>testGetsEntryDescription</code>
      <code>testGetsEntryEncoding</code>
      <code>testGetsEntryId</code>
      <code>testGetsEntryLink</code>
      <code>testGetsEntryLinks</code>
      <code>testGetsEntryPermaLink</code>
      <code>testGetsEntrySingleAuthor</code>
      <code>testGetsEntryTitle</code>
      <code>testGetsLanguage</code>
      <code>testGetsLink</code>
      <code>testGetsSingleAuthor</code>
      <code>testGetsTitle</code>
    </MissingReturnType>
    <MixedArgument occurrences="20">
      <code>$entry-&gt;getContent()</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
    </MixedArgument>
    <MixedAssignment occurrences="10">
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
    </MixedAssignment>
    <MixedMethodCall occurrences="10">
      <code>getAuthor</code>
      <code>getAuthors</code>
      <code>getContent</code>
      <code>getDescription</code>
      <code>getEncoding</code>
      <code>getId</code>
      <code>getLink</code>
      <code>getLinks</code>
      <code>getPermaLink</code>
      <code>getTitle</code>
    </MixedMethodCall>
    <ReservedWord occurrences="19">
      <code>$this-&gt;assertEquals('&lt;p&gt;Being in New Zealand does strange things to a person. Everybody who knows me, knows I don&amp;#8217;t much like that crazy invention called a Book. However, being here I&amp;#8217;ve already finished 4 books, all of which I can highly recommend.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href="http://www.amazon.com/Agile-Software-Development-Scrum/dp/0130676349/"&gt;Agile Software Development with Scrum, by Ken Schwaber and Mike Beedle&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://www.amazon.com/Domain-Driven-Design-Tackling-Complexity-Software/dp/0321125215/"&gt;Domain-Driven Design: Tackling Complexity in the Heart of Software, by Eric Evans&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://www.amazon.com/Enterprise-Application-Architecture-Addison-Wesley-Signature/dp/0321127420/"&gt;Patterns of Enterprise Application Architecture, by Martin Fowler&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://www.amazon.com/Refactoring-Improving-Existing-Addison-Wesley-Technology/dp/0201485672/"&gt;Refactoring: Improving the Design of Existing Code by Martin Fowler&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Next up: &lt;a href="http://www.amazon.com/Design-Patterns-Object-Oriented-Addison-Wesley-Professional/dp/0201633612/"&gt;Design Patterns: Elements of Reusable Object-Oriented Software, by the Gang of Four&lt;/a&gt;. Yes, talk about classics and shame on me for not having ordered it sooner! Also reading &lt;a href="http://www.amazon.com/Implementation-Patterns-Addison-Wesley-Signature-Kent/dp/0321413091/"&gt;Implementation Patterns, by Kent Beck&lt;/a&gt; at the moment.&lt;/p&gt;', str_replace("\n", '', $entry-&gt;getContent()))</code>
      <code>$this-&gt;assertEquals('Being in New Zealand does strange things to a person. Everybody who knows me, knows I don&amp;#8217;t much like that crazy invention called a Book. However, being here I&amp;#8217;ve already finished 4 books, all of which I can highly recommend.'."\n\n".'Agile Software Development with Scrum, by Ken Schwaber and Mike Beedle'."\n".'Domain-Driven Design: Tackling Complexity in the [...]', $entry-&gt;getDescription())</code>
      <code>$this-&gt;assertEquals('Norm 2782', $feed-&gt;getTitle())</code>
      <code>$this-&gt;assertEquals('UTF-8', $entry-&gt;getEncoding())</code>
      <code>$this-&gt;assertEquals('UTF-8', $feed-&gt;getEncoding())</code>
      <code>$this-&gt;assertEquals('Why are you here?', $feed-&gt;getDescription())</code>
      <code>$this-&gt;assertEquals('Wth&amp;#8230; reading books?', $entry-&gt;getTitle())</code>
      <code>$this-&gt;assertEquals('en', $feed-&gt;getLanguage())</code>
      <code>$this-&gt;assertEquals('http://www.norm2782.com', $feed-&gt;getLink())</code>
      <code>$this-&gt;assertEquals('http://www.norm2782.com/2009/03/wth-reading-books/', $entry-&gt;getLink())</code>
      <code>$this-&gt;assertEquals('http://www.norm2782.com/?p=114', $entry-&gt;getId())</code>
      <code>$this-&gt;assertEquals(10, $feed-&gt;count())</code>
      <code>$this-&gt;assertEquals(['http://www.norm2782.com/2009/03/wth-reading-books/'], $entry-&gt;getLinks())</code>
      <code>$this-&gt;assertEquals(['name' =&gt; 'norm2782', 'uri' =&gt; 'http://www.norm2782.com'], $entry-&gt;getAuthor())</code>
      <code>$this-&gt;assertEquals(['name' =&gt; 'norm2782', 'uri' =&gt; 'http://www.norm2782.com'], $feed-&gt;getAuthor())</code>
      <code>$this-&gt;assertEquals([['name' =&gt; 'norm2782', 'uri' =&gt; 'http://www.norm2782.com']], (array) $entry-&gt;getAuthors())</code>
      <code>$this-&gt;assertEquals(null, $feed-&gt;getCopyright())</code>
    </ReservedWord>
    <UndefinedInterfaceMethod occurrences="1">
      <code>getEncoding</code>
    </UndefinedInterfaceMethod>
  </file>
  <file src="test/Reader/Integration/WordpressRss2DcAtomTest.php">
    <MissingPropertyType occurrences="1">
      <code>$feedSamplePath</code>
    </MissingPropertyType>
    <MissingReturnType occurrences="20">
      <code>setUp</code>
      <code>testGetsAuthors</code>
      <code>testGetsCopyright</code>
      <code>testGetsDescription</code>
      <code>testGetsEncoding</code>
      <code>testGetsEntryAuthors</code>
      <code>testGetsEntryContent</code>
      <code>testGetsEntryCount</code>
      <code>testGetsEntryDescription</code>
      <code>testGetsEntryEncoding</code>
      <code>testGetsEntryId</code>
      <code>testGetsEntryLink</code>
      <code>testGetsEntryLinks</code>
      <code>testGetsEntryPermaLink</code>
      <code>testGetsEntrySingleAuthor</code>
      <code>testGetsEntryTitle</code>
      <code>testGetsLanguage</code>
      <code>testGetsLink</code>
      <code>testGetsSingleAuthor</code>
      <code>testGetsTitle</code>
    </MissingReturnType>
    <MixedArgument occurrences="19">
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
    </MixedArgument>
    <MixedAssignment occurrences="10">
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
    </MixedAssignment>
    <MixedMethodCall occurrences="10">
      <code>getAuthor</code>
      <code>getAuthors</code>
      <code>getContent</code>
      <code>getDescription</code>
      <code>getEncoding</code>
      <code>getId</code>
      <code>getLink</code>
      <code>getLinks</code>
      <code>getPermaLink</code>
      <code>getTitle</code>
    </MixedMethodCall>
    <ReservedWord occurrences="19">
      <code>$this-&gt;assertEquals('&lt;p&gt;Being in New Zealand does strange things to a person. Everybody who knows me, knows I don&amp;#8217;t much like that crazy invention called a Book. However, being here I&amp;#8217;ve already finished 4 books, all of which I can highly recommend.&lt;/p&gt;'."\n".'&lt;ul&gt;'."\n".'&lt;li&gt;&lt;a href="http://www.amazon.com/Agile-Software-Development-Scrum/dp/0130676349/"&gt;Agile Software Development with Scrum, by Ken Schwaber and Mike Beedle&lt;/a&gt;&lt;/li&gt;'."\n".'&lt;li&gt;&lt;a href="http://www.amazon.com/Domain-Driven-Design-Tackling-Complexity-Software/dp/0321125215/"&gt;Domain-Driven Design: Tackling Complexity in the Heart of Software, by Eric Evans&lt;/a&gt;&lt;/li&gt;'."\n".'&lt;li&gt;&lt;a href="http://www.amazon.com/Enterprise-Application-Architecture-Addison-Wesley-Signature/dp/0321127420/"&gt;Patterns of Enterprise Application Architecture, by Martin Fowler&lt;/a&gt;&lt;/li&gt;'."\n".'&lt;li&gt;&lt;a href="http://www.amazon.com/Refactoring-Improving-Existing-Addison-Wesley-Technology/dp/0201485672/"&gt;Refactoring: Improving the Design of Existing Code by Martin Fowler&lt;/a&gt;&lt;/li&gt;'."\n".'&lt;/ul&gt;'."\n".'&lt;p&gt;Next up: &lt;a href="http://www.amazon.com/Design-Patterns-Object-Oriented-Addison-Wesley-Professional/dp/0201633612/"&gt;Design Patterns: Elements of Reusable Object-Oriented Software, by the Gang of Four&lt;/a&gt;. Yes, talk about classics and shame on me for not having ordered it sooner! Also reading &lt;a href="http://www.amazon.com/Implementation-Patterns-Addison-Wesley-Signature-Kent/dp/0321413091/"&gt;Implementation Patterns, by Kent Beck&lt;/a&gt; at the moment.&lt;/p&gt;'."\n", $entry-&gt;getContent())</code>
      <code>$this-&gt;assertEquals('Being in New Zealand does strange things to a person. Everybody who knows me, knows I don&amp;#8217;t much like that crazy invention called a Book. However, being here I&amp;#8217;ve already finished 4 books, all of which I can highly recommend.'."\n\n".'Agile Software Development with Scrum, by Ken Schwaber and Mike Beedle'."\n".'Domain-Driven Design: Tackling Complexity in the [...]', $entry-&gt;getDescription())</code>
      <code>$this-&gt;assertEquals('Norm 2782', $feed-&gt;getTitle())</code>
      <code>$this-&gt;assertEquals('UTF-8', $entry-&gt;getEncoding())</code>
      <code>$this-&gt;assertEquals('UTF-8', $feed-&gt;getEncoding())</code>
      <code>$this-&gt;assertEquals('Why are you here?', $feed-&gt;getDescription())</code>
      <code>$this-&gt;assertEquals('Wth… reading books?', $entry-&gt;getTitle())</code>
      <code>$this-&gt;assertEquals('en', $feed-&gt;getLanguage())</code>
      <code>$this-&gt;assertEquals('http://www.norm2782.com', $feed-&gt;getLink())</code>
      <code>$this-&gt;assertEquals('http://www.norm2782.com/2009/03/wth-reading-books/', $entry-&gt;getLink())</code>
      <code>$this-&gt;assertEquals('http://www.norm2782.com/?p=114', $entry-&gt;getId())</code>
      <code>$this-&gt;assertEquals(10, $feed-&gt;count())</code>
      <code>$this-&gt;assertEquals(['http://www.norm2782.com/2009/03/wth-reading-books/'], $entry-&gt;getLinks())</code>
      <code>$this-&gt;assertEquals(['name' =&gt; 'norm2782'], $entry-&gt;getAuthor())</code>
      <code>$this-&gt;assertEquals(['name' =&gt; 'norm2782'], $feed-&gt;getAuthor())</code>
      <code>$this-&gt;assertEquals([['name' =&gt; 'norm2782']], (array) $entry-&gt;getAuthors())</code>
      <code>$this-&gt;assertEquals(null, $feed-&gt;getCopyright())</code>
    </ReservedWord>
    <UndefinedInterfaceMethod occurrences="1">
      <code>getEncoding</code>
    </UndefinedInterfaceMethod>
  </file>
  <file src="test/Reader/ReaderTest.php">
    <ArgumentTypeCoercion occurrences="10">
      <code>$feed</code>
      <code>$feed</code>
      <code>$feed</code>
      <code>$feed</code>
      <code>$feed</code>
      <code>$feed</code>
      <code>$feed</code>
      <code>$feed</code>
      <code>$feed</code>
      <code>$feed</code>
    </ArgumentTypeCoercion>
    <DeprecatedMethod occurrences="1">
      <code>assertAttributeSame</code>
    </DeprecatedMethod>
    <InvalidArgument occurrences="1">
      <code>new stdClass()</code>
    </InvalidArgument>
    <MissingClosureParamType occurrences="4">
      <code>$errno</code>
      <code>$errstr</code>
      <code>$message</code>
      <code>$toReturn</code>
    </MissingClosureParamType>
    <MissingPropertyType occurrences="5">
      <code>$feedSamplePath</code>
      <code>$links-&gt;atom</code>
      <code>$links-&gt;atom</code>
      <code>$links-&gt;atom</code>
      <code>$links-&gt;rss</code>
    </MissingPropertyType>
    <MissingReturnType occurrences="31">
      <code>setUp</code>
      <code>tearDown</code>
      <code>testCompilesLinksAsArrayObject</code>
      <code>testDetectsFeedIsAtom03</code>
      <code>testDetectsFeedIsAtom10</code>
      <code>testDetectsFeedIsRss090</code>
      <code>testDetectsFeedIsRss091</code>
      <code>testDetectsFeedIsRss092</code>
      <code>testDetectsFeedIsRss093</code>
      <code>testDetectsFeedIsRss094</code>
      <code>testDetectsFeedIsRss10</code>
      <code>testDetectsFeedIsRss20</code>
      <code>testDetectsTypeFromStringOrToRemindPaddyAboutForgettingATestWhichLetsAStupidTypoSurviveUnnoticedForMonths</code>
      <code>testFeedSetLoadsFeedObjectWhenFeedArrayKeyAccessed</code>
      <code>testGetEncoding</code>
      <code>testGetsFeedLinksAndNormalisesRelativeUrlsOnUriWithPath</code>
      <code>testGetsFeedLinksAndTrimsNewlines</code>
      <code>testGetsFeedLinksAsValueObject</code>
      <code>testImportRemoteFeedMethodPerformsAsExpected</code>
      <code>testImportStringMethodThrowProperExceptionOnEmptyString</code>
      <code>testImportsFile</code>
      <code>testImportsUri</code>
      <code>testImportsUriAndThrowsExceptionIfNotAFeed</code>
      <code>testReaderEmitsNoticeDuringFeedImportWhenGooglePlayPodcastExtensionUnavailable</code>
      <code>testRegistersUserExtension</code>
      <code>testSetHttpClientThrowsException</code>
      <code>testSetHttpClientWillDecorateALaminasHttpClientInstance</code>
      <code>testSetHttpFeedClient</code>
      <code>testStringImportTrimsContentToAllowSlightlyInvalidXml</code>
      <code>testXxePreventionOnFeedParsing</code>
      <code>testZeroCountFeedSetReturnedFromEmptyList</code>
    </MissingReturnType>
    <MixedArgument occurrences="2">
      <code>$message</code>
      <code>$notices-&gt;messages</code>
    </MixedArgument>
    <MixedArgumentTypeCoercion occurrences="1"/>
    <MixedArrayAccess occurrences="1">
      <code>$link['feed']</code>
    </MixedArrayAccess>
    <MixedArrayAssignment occurrences="1">
      <code>$notices-&gt;messages[]</code>
    </MixedArrayAssignment>
    <MixedAssignment occurrences="2">
      <code>$link</code>
      <code>$message</code>
    </MixedAssignment>
    <MixedMethodCall occurrences="1">
      <code>getEncoding</code>
    </MixedMethodCall>
    <MixedOperand occurrences="13">
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
      <code>$this-&gt;feedSamplePath</code>
    </MixedOperand>
    <RedundantConditionGivenDocblockType occurrences="5">
      <code>assertInstanceOf</code>
      <code>assertInstanceOf</code>
      <code>assertInstanceOf</code>
      <code>assertInstanceOf</code>
      <code>assertInstanceOf</code>
    </RedundantConditionGivenDocblockType>
    <ReservedWord occurrences="37">
      <code>$this-&gt;assertAttributeSame($client, 'client', $cached)</code>
      <code>$this-&gt;assertCount(0, $links)</code>
      <code>$this-&gt;assertEquals($client, Reader\Reader::getHttpClient())</code>
      <code>$this-&gt;assertEquals('http://foo/test.atom', $links-&gt;atom)</code>
      <code>$this-&gt;assertEquals('http://foo/test.rss', $links-&gt;rss)</code>
      <code>$this-&gt;assertEquals('https://github.com/laminas/laminas-feed/releases.atom', $links-&gt;atom)</code>
      <code>$this-&gt;assertEquals('https://github.com/laminas/laminas-feed/releases.atom', $links-&gt;atom)</code>
      <code>$this-&gt;assertEquals('utf-8', $feed-&gt;current()-&gt;getEncoding())</code>
      <code>$this-&gt;assertEquals('utf-8', $feed-&gt;getEncoding())</code>
      <code>$this-&gt;assertEquals(Reader\Reader::TYPE_ATOM_03, $type)</code>
      <code>$this-&gt;assertEquals(Reader\Reader::TYPE_ATOM_10, $type)</code>
      <code>$this-&gt;assertEquals(Reader\Reader::TYPE_RSS_090, $type)</code>
      <code>$this-&gt;assertEquals(Reader\Reader::TYPE_RSS_091, $type)</code>
      <code>$this-&gt;assertEquals(Reader\Reader::TYPE_RSS_092, $type)</code>
      <code>$this-&gt;assertEquals(Reader\Reader::TYPE_RSS_093, $type)</code>
      <code>$this-&gt;assertEquals(Reader\Reader::TYPE_RSS_094, $type)</code>
      <code>$this-&gt;assertEquals(Reader\Reader::TYPE_RSS_10, $type)</code>
      <code>$this-&gt;assertEquals(Reader\Reader::TYPE_RSS_10, $type)</code>
      <code>$this-&gt;assertEquals(Reader\Reader::TYPE_RSS_20, $type)</code>
      <code>$this-&gt;assertEquals(Reader\Reader::TYPE_RSS_20, $type)</code>
      <code>$this-&gt;assertInstanceOf(ClientInterface::class, $cached)</code>
      <code>$this-&gt;assertInstanceOf(FeedInterface::class, $feed)</code>
      <code>$this-&gt;assertInstanceOf(FeedInterface::class, $feed)</code>
      <code>$this-&gt;assertInstanceOf(FeedInterface::class, $feed)</code>
      <code>$this-&gt;assertInstanceOf(FeedSet::class, $links)</code>
      <code>$this-&gt;assertInstanceOf(Reader\Feed\Atom::class, $feed)</code>
      <code>$this-&gt;assertInstanceOf(Reader\Feed\Atom::class, $link['feed'])</code>
      <code>$this-&gt;assertTrue(Reader\Reader::isRegistered('JungleBooks'))</code>
      <code>$this-&gt;markTestSkipped('testGetsFeedLinksAsValueObject() requires a network connection')</code>
      <code>$this-&gt;markTestSkipped('testGetsFeedLinksAsValueObject() requires a network connection')</code>
      <code>$this-&gt;markTestSkipped('testGetsFeedLinksAsValueObject() requires a network connection')</code>
      <code>$this-&gt;markTestSkipped('testGetsFeedLinksAsValueObject() requires a network connection')</code>
      <code>$this-&gt;markTestSkipped('testGetsFeedLinksAsValueObject() requires a network connection')</code>
      <code>$this-&gt;markTestSkipped('testImportsUri() requires a network connection')</code>
      <code>$this-&gt;markTestSkipped('testImportsUri() requires a network connection')</code>
    </ReservedWord>
    <UndefinedInterfaceMethod occurrences="1">
      <code>getEncoding</code>
    </UndefinedInterfaceMethod>
  </file>
  <file src="test/Reader/StandaloneExtensionManagerTest.php">
    <MissingParamType occurrences="6">
      <code>$pluginClass</code>
      <code>$pluginClass</code>
      <code>$pluginClass</code>
      <code>$pluginName</code>
      <code>$pluginName</code>
      <code>$pluginName</code>
    </MissingParamType>
    <MissingReturnType occurrences="9">
      <code>defaultPlugins</code>
      <code>setUp</code>
      <code>testAddAcceptsValidExtensionClasses</code>
      <code>testAddRejectsInvalidExtensions</code>
      <code>testCanRetrieveDefaultPluginInstances</code>
      <code>testEachPluginRetrievalReturnsNewInstance</code>
      <code>testExtensionRemoval</code>
      <code>testHasAllDefaultPlugins</code>
      <code>testIsAnExtensionManagerImplementation</code>
    </MissingReturnType>
    <MixedArgument occurrences="7">
      <code>$pluginClass</code>
      <code>$pluginClass</code>
      <code>$pluginClass</code>
      <code>$pluginName</code>
      <code>$pluginName</code>
      <code>$pluginName</code>
      <code>$pluginName</code>
    </MixedArgument>
    <ReservedWord occurrences="9">
      <code>$this-&gt;assertFalse($this-&gt;extensions-&gt;has('Test/Entry'))</code>
      <code>$this-&gt;assertInstanceOf($pluginClass, $extension)</code>
      <code>$this-&gt;assertInstanceOf($pluginClass, $extension)</code>
      <code>$this-&gt;assertInstanceOf($pluginClass, $test)</code>
      <code>$this-&gt;assertInstanceOf(ExtensionManagerInterface::class, $this-&gt;extensions)</code>
      <code>$this-&gt;assertTrue($this-&gt;extensions-&gt;has($pluginName))</code>
      <code>$this-&gt;assertTrue($this-&gt;extensions-&gt;has('Test/Entry'))</code>
      <code>$this-&gt;assertTrue($this-&gt;extensions-&gt;has('Test/Entry'))</code>
      <code>$this-&gt;assertTrue($this-&gt;extensions-&gt;has('Test/Feed'))</code>
    </ReservedWord>
  </file>
  <file src="test/Reader/TestAsset/CustomExtensionManager.php">
    <LessSpecificReturnStatement occurrences="1">
      <code>new $class()</code>
    </LessSpecificReturnStatement>
    <MissingPropertyType occurrences="1">
      <code>$extensions</code>
    </MissingPropertyType>
    <MixedArgument occurrences="1">
      <code>$this-&gt;extensions</code>
    </MixedArgument>
    <MixedArrayAccess occurrences="1">
      <code>$this-&gt;extensions[$extension]</code>
    </MixedArrayAccess>
    <MixedAssignment occurrences="1">
      <code>$class</code>
    </MixedAssignment>
    <MixedMethodCall occurrences="1">
      <code>new $class()</code>
    </MixedMethodCall>
    <MoreSpecificReturnType occurrences="1">
      <code>Extension\AbstractEntry|Extension\AbstractFeed</code>
    </MoreSpecificReturnType>
  </file>
  <file src="test/Reader/TestAsset/Psr7Stream.php">
    <MissingParamType occurrences="1">
      <code>$streamValue</code>
    </MissingParamType>
    <MissingPropertyType occurrences="1">
      <code>$streamValue</code>
    </MissingPropertyType>
  </file>
  <file src="test/Reader/_files/My/Extension/JungleBooks/Entry.php">
    <MissingReturnType occurrences="1">
      <code>getIsbn</code>
    </MissingReturnType>
    <MixedAssignment occurrences="1">
      <code>$isbn</code>
    </MixedAssignment>
    <UndefinedVariable occurrences="1">
      <code>$title</code>
    </UndefinedVariable>
  </file>
  <file src="test/Reader/_files/My/Extension/JungleBooks/Feed.php">
    <MissingReturnType occurrences="2">
      <code>getDaysPopularBookLink</code>
      <code>registerNamespaces</code>
    </MissingReturnType>
    <MixedAssignment occurrences="1">
      <code>$dayPopular</code>
    </MixedAssignment>
  </file>
  <file src="test/Writer/DeletedTest.php">
    <DocblockTypeContradiction occurrences="1">
      <code>assertNull</code>
    </DocblockTypeContradiction>
    <InvalidArgument occurrences="6">
      <code>Writer\Exception\ExceptionInterface::class</code>
      <code>Writer\Exception\ExceptionInterface::class</code>
      <code>Writer\Exception\ExceptionInterface::class</code>
      <code>Writer\Exception\ExceptionInterface::class</code>
      <code>Writer\Exception\ExceptionInterface::class</code>
      <code>Writer\Exception\ExceptionInterface::class</code>
    </InvalidArgument>
    <InvalidScalarArgument occurrences="1">
      <code>'abc'</code>
    </InvalidScalarArgument>
    <MissingReturnType occurrences="24">
      <code>testAddByThrowsExceptionIfNameOmittedFromArray</code>
      <code>testAddByThrowsExceptionOnInvalidEmailFromArray</code>
      <code>testAddByThrowsExceptionOnInvalidNameFromArray</code>
      <code>testAddByThrowsExceptionOnInvalidUriFromArray</code>
      <code>testAddsByEmailFromArray</code>
      <code>testAddsByNameFromArray</code>
      <code>testAddsByUriFromArray</code>
      <code>testCommentAndRemove</code>
      <code>testEncoding</code>
      <code>testFluentInterface</code>
      <code>testGetBy</code>
      <code>testGetReferenceReturnsNullIfNotSet</code>
      <code>testGetWhenReturnsNullIfDateNotSet</code>
      <code>testSetByException</code>
      <code>testSetReferenceThrowsExceptionOnInvalidParameter</code>
      <code>testSetWhenDefaultsToCurrentTime</code>
      <code>testSetWhenThrowsExceptionOnInvalidParameter</code>
      <code>testSetWhenUsesDateTimeImmutableObject</code>
      <code>testSetWhenUsesDateTimeObject</code>
      <code>testSetWhenUsesGivenUnixTimestamp</code>
      <code>testSetWhenUsesGivenUnixTimestampWhenItIsAVerySmallInteger</code>
      <code>testSetWhenUsesGivenUnixTimestampWhenItIsLessThanTenDigits</code>
      <code>testSetsReference</code>
      <code>testType</code>
    </MissingReturnType>
    <MixedAssignment occurrences="1">
      <code>$result</code>
    </MixedAssignment>
    <MixedMethodCall occurrences="2">
      <code>setReference</code>
      <code>setWhen</code>
    </MixedMethodCall>
    <ReservedWord occurrences="24">
      <code>$this-&gt;assertEquals($myDate, $entry-&gt;getWhen())</code>
      <code>$this-&gt;assertEquals($myDate, $entry-&gt;getWhen())</code>
      <code>$this-&gt;assertEquals($myDate, $entry-&gt;getWhen())</code>
      <code>$this-&gt;assertEquals($myDate, $entry-&gt;getWhen())</code>
      <code>$this-&gt;assertEquals($myDate, $entry-&gt;getWhen())</code>
      <code>$this-&gt;assertEquals('ISO-8859-1', $entry-&gt;getEncoding())</code>
      <code>$this-&gt;assertEquals('UTF-8', $encoding)</code>
      <code>$this-&gt;assertEquals('atom', $entry-&gt;getType())</code>
      <code>$this-&gt;assertEquals('foo', $entry-&gt;getComment())</code>
      <code>$this-&gt;assertEquals('http://www.example.com/id', $entry-&gt;getReference())</code>
      <code>$this-&gt;assertEquals(['name' =&gt; 'Joe', 'email' =&gt; 'joe@example.com'], $entry-&gt;getBy())</code>
      <code>$this-&gt;assertEquals(['name' =&gt; 'Joe', 'email' =&gt; 'joe@example.com'], $entry-&gt;getBy())</code>
      <code>$this-&gt;assertEquals(['name' =&gt; 'Joe', 'uri' =&gt; 'http://www.example.com'], $entry-&gt;getBy())</code>
      <code>$this-&gt;assertEquals(['name' =&gt; 'Joe'], $entry-&gt;getBy())</code>
      <code>$this-&gt;assertLessThanOrEqual($dateNow, $entry-&gt;getWhen())</code>
      <code>$this-&gt;assertNull($by)</code>
      <code>$this-&gt;assertNull($comment)</code>
      <code>$this-&gt;assertNull($entry-&gt;getComment())</code>
      <code>$this-&gt;assertNull($entry-&gt;getReference())</code>
      <code>$this-&gt;assertNull($entry-&gt;getWhen())</code>
      <code>$this-&gt;assertNull($type)</code>
      <code>$this-&gt;expectExceptionMessage('Invalid parameter: parameter must be a non-empty string')</code>
      <code>$this-&gt;markTestIncomplete('Pending Laminas\URI fix for validation')</code>
    </ReservedWord>
  </file>
  <file src="test/Writer/EntryTest.php">
    <DocblockTypeContradiction occurrences="2">
      <code>assertNull</code>
      <code>assertNull</code>
    </DocblockTypeContradiction>
    <InvalidArgument occurrences="19">
      <code>ExceptionInterface::class</code>
      <code>ExceptionInterface::class</code>
      <code>ExceptionInterface::class</code>
      <code>ExceptionInterface::class</code>
      <code>Writer\Exception\ExceptionInterface::class</code>
      <code>Writer\Exception\ExceptionInterface::class</code>
      <code>Writer\Exception\ExceptionInterface::class</code>
      <code>Writer\Exception\ExceptionInterface::class</code>
      <code>Writer\Exception\ExceptionInterface::class</code>
      <code>Writer\Exception\ExceptionInterface::class</code>
      <code>Writer\Exception\ExceptionInterface::class</code>
      <code>Writer\Exception\ExceptionInterface::class</code>
      <code>Writer\Exception\ExceptionInterface::class</code>
      <code>Writer\Exception\ExceptionInterface::class</code>
      <code>Writer\Exception\ExceptionInterface::class</code>
      <code>Writer\Exception\ExceptionInterface::class</code>
      <code>Writer\Exception\ExceptionInterface::class</code>
      <code>Writer\Exception\ExceptionInterface::class</code>
      <code>Writer\Exception\ExceptionInterface::class</code>
    </InvalidArgument>
    <InvalidScalarArgument occurrences="5">
      <code>''</code>
      <code>'10'</code>
      <code>'a'</code>
      <code>'abc'</code>
      <code>'abc'</code>
    </InvalidScalarArgument>
    <MissingClosureParamType occurrences="4">
      <code>$errno</code>
      <code>$errstr</code>
      <code>$message</code>
      <code>$toReturn</code>
    </MissingClosureParamType>
    <MissingParamType occurrences="3">
      <code>$count</code>
      <code>$count</code>
      <code>$expected</code>
    </MissingParamType>
    <MissingPropertyType occurrences="1">
      <code>$feedSamplePath</code>
    </MissingPropertyType>
    <MissingReturnType occurrences="78">
      <code>allowedCommentCounts</code>
      <code>disallowedCommentCounts</code>
      <code>setUp</code>
      <code>tearDown</code>
      <code>testAddAuthorThrowsExceptionIfNameOmittedFromArray</code>
      <code>testAddAuthorThrowsExceptionOnInvalidEmailFromArray</code>
      <code>testAddAuthorThrowsExceptionOnInvalidNameFromArray</code>
      <code>testAddAuthorThrowsExceptionOnInvalidUriFromArray</code>
      <code>testAddCategoryThrowsExceptionIfNotSetTerm</code>
      <code>testAddCategoryThrowsExceptionIfSchemeNull</code>
      <code>testAddsAuthorEmailFromArray</code>
      <code>testAddsAuthorNameFromArray</code>
      <code>testAddsAuthorUriFromArray</code>
      <code>testAddsAuthorsFromArrayOfAuthors</code>
      <code>testAddsEnclosure</code>
      <code>testAddsEnclosureThrowsExceptionOnMissingUri</code>
      <code>testAddsEnclosureThrowsExceptionWhenUriIsInvalid</code>
      <code>testEntryWriterEmitsNoticeDuringFeedImportWhenGooglePlayPodcastExtensionUnavailable</code>
      <code>testFluentInterface</code>
      <code>testGetCommentCountReturnsNullIfDateNotSet</code>
      <code>testGetCommentFeedLinkReturnsNullIfNoneSet</code>
      <code>testGetCommentLinkReturnsNullIfDateNotSet</code>
      <code>testGetContentReturnsNullIfDateNotSet</code>
      <code>testGetCopyrightReturnsNullIfDateNotSet</code>
      <code>testGetDateCreatedReturnsNullIfDateNotSet</code>
      <code>testGetDateModifiedReturnsNullIfDateNotSet</code>
      <code>testGetDescriptionReturnsNullIfDateNotSet</code>
      <code>testGetExtension</code>
      <code>testGetExtensions</code>
      <code>testGetIdReturnsNullIfNotSet</code>
      <code>testGetLinkReturnsNullIfNotSet</code>
      <code>testGetLinksReturnsNullIfNotSet</code>
      <code>testGetSource</code>
      <code>testGetTitleReturnsNullIfDateNotSet</code>
      <code>testSetCommentCountThrowsExceptionOnInvalidEmptyParameter</code>
      <code>testSetCommentCountThrowsExceptionOnInvalidNonIntegerParameter</code>
      <code>testSetCommentFeedLinkThrowsExceptionOnEmptyString</code>
      <code>testSetCommentFeedLinkThrowsExceptionOnInvalidType</code>
      <code>testSetCommentFeedLinkThrowsExceptionOnInvalidUri</code>
      <code>testSetCommentLinkThrowsExceptionOnEmptyString</code>
      <code>testSetCommentLinkThrowsExceptionOnInvalidUri</code>
      <code>testSetContentThrowsExceptionOnInvalidParam</code>
      <code>testSetCopyrightThrowsExceptionOnInvalidParam</code>
      <code>testSetDateCreatedDefaultsToCurrentTime</code>
      <code>testSetDateCreatedThrowsExceptionOnInvalidParameter</code>
      <code>testSetDateCreatedUsesDateTimeImmutableObject</code>
      <code>testSetDateCreatedUsesDateTimeObject</code>
      <code>testSetDateCreatedUsesGivenUnixTimestamp</code>
      <code>testSetDateCreatedUsesGivenUnixTimestampWhenItIsAVerySmallInteger</code>
      <code>testSetDateCreatedUsesGivenUnixTimestampWhenItIsLessThanTenDigits</code>
      <code>testSetDateModifiedDefaultsToCurrentTime</code>
      <code>testSetDateModifiedThrowsExceptionOnInvalidParameter</code>
      <code>testSetDateModifiedUsesDateTimeImmutableObject</code>
      <code>testSetDateModifiedUsesDateTimeObject</code>
      <code>testSetDateModifiedUsesGivenUnixTimestamp</code>
      <code>testSetDateModifiedUsesGivenUnixTimestampWhenItIsAVerySmallInteger</code>
      <code>testSetDateModifiedUsesGivenUnixTimestampWhenItIsLessThanTenDigits</code>
      <code>testSetDescriptionThrowsExceptionOnInvalidParameter</code>
      <code>testSetEnclosureThrowsExceptionIfNotSetUri</code>
      <code>testSetEnclosureThrowsExceptionIfNotValidUri</code>
      <code>testSetEncodingThrowsExceptionIfNull</code>
      <code>testSetIdThrowsExceptionOnInvalidParameter</code>
      <code>testSetLinkThrowsExceptionOnEmptyString</code>
      <code>testSetLinkThrowsExceptionOnInvalidUri</code>
      <code>testSetTitleShouldAllowAStringWithTheContentsZero</code>
      <code>testSetTitleThrowsExceptionOnInvalidParameter</code>
      <code>testSetsCommentCount</code>
      <code>testSetsCommentCount0</code>
      <code>testSetsCommentCountAllowed</code>
      <code>testSetsCommentCountDisallowed</code>
      <code>testSetsCommentFeedLink</code>
      <code>testSetsCommentLink</code>
      <code>testSetsContent</code>
      <code>testSetsCopyright</code>
      <code>testSetsDescription</code>
      <code>testSetsId</code>
      <code>testSetsLink</code>
      <code>testSetsTitle</code>
    </MissingReturnType>
    <MixedArgument occurrences="4">
      <code>$count</code>
      <code>$count</code>
      <code>$message</code>
      <code>$notices-&gt;messages</code>
    </MixedArgument>
    <MixedArgumentTypeCoercion occurrences="1"/>
    <MixedArrayAssignment occurrences="1">
      <code>$notices-&gt;messages[]</code>
    </MixedArrayAssignment>
    <MixedAssignment occurrences="1">
      <code>$message</code>
    </MixedAssignment>
    <NullArgument occurrences="1">
      <code>null</code>
    </NullArgument>
    <ReservedWord occurrences="49">
      <code>$this-&gt;assertEquals("I'm content.", $entry-&gt;getContent())</code>
      <code>$this-&gt;assertEquals($expected, $entry-&gt;getAuthors())</code>
      <code>$this-&gt;assertEquals($expected, $entry-&gt;getEnclosure())</code>
      <code>$this-&gt;assertEquals($myDate, $entry-&gt;getDateCreated())</code>
      <code>$this-&gt;assertEquals($myDate, $entry-&gt;getDateCreated())</code>
      <code>$this-&gt;assertEquals($myDate, $entry-&gt;getDateCreated())</code>
      <code>$this-&gt;assertEquals($myDate, $entry-&gt;getDateCreated())</code>
      <code>$this-&gt;assertEquals($myDate, $entry-&gt;getDateCreated())</code>
      <code>$this-&gt;assertEquals($myDate, $entry-&gt;getDateModified())</code>
      <code>$this-&gt;assertEquals($myDate, $entry-&gt;getDateModified())</code>
      <code>$this-&gt;assertEquals($myDate, $entry-&gt;getDateModified())</code>
      <code>$this-&gt;assertEquals($myDate, $entry-&gt;getDateModified())</code>
      <code>$this-&gt;assertEquals($myDate, $entry-&gt;getDateModified())</code>
      <code>$this-&gt;assertEquals('0', $entry-&gt;getTitle())</code>
      <code>$this-&gt;assertEquals('Copyright (c) 2009 Paddy Brady', $entry-&gt;getCopyright())</code>
      <code>$this-&gt;assertEquals('abc', $entry-&gt;getDescription())</code>
      <code>$this-&gt;assertEquals('abc', $entry-&gt;getTitle())</code>
      <code>$this-&gt;assertEquals('http://www.example.com/id', $entry-&gt;getId())</code>
      <code>$this-&gt;assertEquals('http://www.example.com/id', $entry-&gt;getLink())</code>
      <code>$this-&gt;assertEquals('http://www.example.com/id/comments', $entry-&gt;getCommentLink())</code>
      <code>$this-&gt;assertEquals(0, $entry-&gt;getCommentCount())</code>
      <code>$this-&gt;assertEquals(10, $entry-&gt;getCommentCount())</code>
      <code>$this-&gt;assertEquals([['name' =&gt; 'Joe']], $entry-&gt;getAuthors())</code>
      <code>$this-&gt;assertInstanceOf(Entry::class, $entry-&gt;getExtension('ITunes'))</code>
      <code>$this-&gt;assertInstanceOf(Entry::class, $extensions['ITunes\Entry'])</code>
      <code>$this-&gt;assertInstanceOf(Source::class, $entry-&gt;getSource())</code>
      <code>$this-&gt;assertLessThanOrEqual($dateNow, $entry-&gt;getDateCreated())</code>
      <code>$this-&gt;assertLessThanOrEqual($dateNow, $entry-&gt;getDateModified())</code>
      <code>$this-&gt;assertNull($entry-&gt;getCommentCount())</code>
      <code>$this-&gt;assertNull($entry-&gt;getCommentFeedLinks())</code>
      <code>$this-&gt;assertNull($entry-&gt;getCommentLink())</code>
      <code>$this-&gt;assertNull($entry-&gt;getContent())</code>
      <code>$this-&gt;assertNull($entry-&gt;getCopyright())</code>
      <code>$this-&gt;assertNull($entry-&gt;getDateCreated())</code>
      <code>$this-&gt;assertNull($entry-&gt;getDateModified())</code>
      <code>$this-&gt;assertNull($entry-&gt;getDescription())</code>
      <code>$this-&gt;assertNull($entry-&gt;getId())</code>
      <code>$this-&gt;assertNull($entry-&gt;getLink())</code>
      <code>$this-&gt;assertNull($entry-&gt;getLinks())</code>
      <code>$this-&gt;assertNull($entry-&gt;getTitle())</code>
      <code>$this-&gt;assertNull($foo)</code>
      <code>$this-&gt;assertNull($source)</code>
      <code>$this-&gt;markTestIncomplete('Pending Laminas\URI fix for validation')</code>
      <code>$this-&gt;markTestIncomplete('Pending Laminas\URI fix for validation')</code>
      <code>$this-&gt;markTestIncomplete('Pending Laminas\URI fix for validation')</code>
    </ReservedWord>
  </file>
  <file src="test/Writer/Extension/GooglePlayPodcast/EntryTest.php">
    <InvalidArgument occurrences="4">
      <code>ExceptionInterface::class</code>
      <code>ExceptionInterface::class</code>
      <code>ExceptionInterface::class</code>
      <code>ExceptionInterface::class</code>
    </InvalidArgument>
    <MissingReturnType occurrences="9">
      <code>testSetBlock</code>
      <code>testSetBlockThrowsExceptionIfValueGreaterThan255CharsLength</code>
      <code>testSetBlockThrowsExceptionOnNonAlphaValue</code>
      <code>testSetDescription</code>
      <code>testSetDescriptionThrowsExceptionWhenValueExceeds255Chars</code>
      <code>testSetExplicitThrowsExceptionOnUnknownTerm</code>
      <code>testSetExplicitToClean</code>
      <code>testSetExplicitToNo</code>
      <code>testSetExplicitToYes</code>
    </MissingReturnType>
    <ReservedWord occurrences="5">
      <code>$this-&gt;assertEquals('abc', $entry-&gt;getPlayPodcastDescription())</code>
      <code>$this-&gt;assertEquals('clean', $entry-&gt;getPlayPodcastExplicit())</code>
      <code>$this-&gt;assertEquals('no', $entry-&gt;getPlayPodcastExplicit())</code>
      <code>$this-&gt;assertEquals('yes', $entry-&gt;getPlayPodcastBlock())</code>
      <code>$this-&gt;assertEquals('yes', $entry-&gt;getPlayPodcastExplicit())</code>
    </ReservedWord>
  </file>
  <file src="test/Writer/Extension/GooglePlayPodcast/FeedTest.php">
    <InvalidArgument occurrences="8">
      <code>ExceptionInterface::class</code>
      <code>ExceptionInterface::class</code>
      <code>ExceptionInterface::class</code>
      <code>ExceptionInterface::class</code>
      <code>ExceptionInterface::class</code>
      <code>ExceptionInterface::class</code>
      <code>ExceptionInterface::class</code>
      <code>ExceptionInterface::class</code>
    </InvalidArgument>
    <MissingReturnType occurrences="21">
      <code>invalidImageUrls</code>
      <code>testAddAuthor</code>
      <code>testAddAuthorThrowsExceptionIfValueGreaterThan255CharsLength</code>
      <code>testAddAuthors</code>
      <code>testSetBlock</code>
      <code>testSetBlockThrowsExceptionIfValueGreaterThan255CharsLength</code>
      <code>testSetBlockThrowsExceptionOnNonAlphaValue</code>
      <code>testSetCategories</code>
      <code>testSetCategoriesThrowsExceptionIfAnyCatNameGreaterThan255CharsLength</code>
      <code>testSetDescription</code>
      <code>testSetDescriptionThrowsExceptionWhenValueExceeds4000Chars</code>
      <code>testSetExplicitThrowsExceptionOnUnknownTerm</code>
      <code>testSetExplicitToClean</code>
      <code>testSetExplicitToNo</code>
      <code>testSetExplicitToYes</code>
      <code>testSetImageAsJpgFile</code>
      <code>testSetImageAsPngFile</code>
      <code>testSetImageThrowsExceptionOnInvalidUri</code>
      <code>testSetPlayPodcastImageRaisesExceptionForInvalidUrl</code>
      <code>testSetPlayPodcastImageSetsInternalDataWithValidUrl</code>
      <code>validImageUrls</code>
    </MissingReturnType>
    <ReservedWord occurrences="11">
      <code>$this-&gt;assertEquals($cats, $feed-&gt;getPlayPodcastCategories())</code>
      <code>$this-&gt;assertEquals($url, $feed-&gt;getPlayPodcastImage())</code>
      <code>$this-&gt;assertEquals('abc', $feed-&gt;getPlayPodcastDescription())</code>
      <code>$this-&gt;assertEquals('clean', $feed-&gt;getPlayPodcastExplicit())</code>
      <code>$this-&gt;assertEquals('http://www.example.com/image.jpg', $feed-&gt;getPlayPodcastImage())</code>
      <code>$this-&gt;assertEquals('http://www.example.com/image.png', $feed-&gt;getPlayPodcastImage())</code>
      <code>$this-&gt;assertEquals('no', $feed-&gt;getPlayPodcastExplicit())</code>
      <code>$this-&gt;assertEquals('yes', $feed-&gt;getPlayPodcastBlock())</code>
      <code>$this-&gt;assertEquals('yes', $feed-&gt;getPlayPodcastExplicit())</code>
      <code>$this-&gt;assertEquals(['joe', 'jane'], $feed-&gt;getPlayPodcastAuthors())</code>
      <code>$this-&gt;assertEquals(['joe'], $feed-&gt;getPlayPodcastAuthors())</code>
    </ReservedWord>
  </file>
  <file src="test/Writer/Extension/ITunes/EntryTest.php">
    <InvalidArgument occurrences="17">
      <code>ExceptionInterface::class</code>
      <code>ExceptionInterface::class</code>
      <code>ExceptionInterface::class</code>
      <code>ExceptionInterface::class</code>
      <code>ExceptionInterface::class</code>
      <code>ExceptionInterface::class</code>
      <code>ExceptionInterface::class</code>
      <code>ExceptionInterface::class</code>
      <code>ExceptionInterface::class</code>
      <code>ExceptionInterface::class</code>
      <code>ExceptionInterface::class</code>
      <code>ExceptionInterface::class</code>
      <code>ExceptionInterface::class</code>
      <code>ExceptionInterface::class</code>
      <code>ExceptionInterface::class</code>
      <code>ExceptionInterface::class</code>
      <code>ExceptionInterface::class</code>
    </InvalidArgument>
    <MissingClosureParamType occurrences="6">
      <code>$errno</code>
      <code>$errno</code>
      <code>$errno</code>
      <code>$errstr</code>
      <code>$errstr</code>
      <code>$errstr</code>
    </MissingClosureParamType>
    <MissingReturnType occurrences="41">
      <code>dataProviderForSetExplicit</code>
      <code>invalidClosedCaptioningFlags</code>
      <code>invalidEpisodeTypes</code>
      <code>invalidImageUrls</code>
      <code>nonNumericEpisodeNumbers</code>
      <code>testAddAuthor</code>
      <code>testAddAuthorThrowsExceptionIfValueGreaterThan255CharsLength</code>
      <code>testAddAuthors</code>
      <code>testEpisodeTypeMaybeMutatedWithAcceptedValues</code>
      <code>testSetBlock</code>
      <code>testSetBlockThrowsExceptionIfValueGreaterThan255CharsLength</code>
      <code>testSetBlockThrowsExceptionOnNonAlphaValue</code>
      <code>testSetDurationAsHoursMinutesAndSeconds</code>
      <code>testSetDurationAsMinutesAndSeconds</code>
      <code>testSetDurationAsSeconds</code>
      <code>testSetDurationThrowsExceptionOnInvalidMinutes</code>
      <code>testSetDurationThrowsExceptionOnInvalidSeconds</code>
      <code>testSetDurationThrowsExceptionOnUnknownFormat</code>
      <code>testSetEpisodeRaisesExceptionForNonNumericEpisodeNumbers</code>
      <code>testSetEpisodeSetsNumberInEntry</code>
      <code>testSetEpisodeTypeRaisesExceptionForInvalidTypes</code>
      <code>testSetExplicit</code>
      <code>testSetExplicitThrowsExceptionOnUnknownTerm</code>
      <code>testSetItunesImageRaisesExceptionForInvalidUrl</code>
      <code>testSetItunesImageSetsInternalDataWithValidUrl</code>
      <code>testSetKeywords</code>
      <code>testSetKeywordsThrowsExceptionIfFormattedKeywordsExceeds255CharLength</code>
      <code>testSetKeywordsThrowsExceptionIfMaxKeywordsExceeded</code>
      <code>testSetSeasonRaisesExceptionForNonNumericSeasonNumbers</code>
      <code>testSetSeasonSetsNumberInEntry</code>
      <code>testSetSubtitle</code>
      <code>testSetSubtitleThrowsExceptionWhenValueExceeds255Chars</code>
      <code>testSetSummary</code>
      <code>testSetSummaryThrowsExceptionWhenValueExceeds255Chars</code>
      <code>testSetTitle</code>
      <code>testSetTitleThrowsExceptionWhenValueExceeds255Chars</code>
      <code>testSettingClosedCaptioningToFalseDoesNothing</code>
      <code>testSettingClosedCaptioningToNonBooleanRaisesException</code>
      <code>testSettingClosedCaptioningToTrueUpdatesContainer</code>
      <code>validEpisodeTypes</code>
      <code>validImageUrls</code>
    </MissingReturnType>
    <MixedArgument occurrences="3">
      <code>$errstr</code>
      <code>$errstr</code>
      <code>$errstr</code>
    </MixedArgument>
    <ReservedWord occurrences="22">
      <code>$this-&gt;assertEquals($result, $entry-&gt;getItunesExplicit())</code>
      <code>$this-&gt;assertEquals($type, $entry-&gt;getItunesEpisodeType())</code>
      <code>$this-&gt;assertEquals($url, $entry-&gt;getItunesImage())</code>
      <code>$this-&gt;assertEquals($words, $entry-&gt;getItunesKeywords())</code>
      <code>$this-&gt;assertEquals('23:23', $entry-&gt;getItunesDuration())</code>
      <code>$this-&gt;assertEquals('23:23:23', $entry-&gt;getItunesDuration())</code>
      <code>$this-&gt;assertEquals('abc', $entry-&gt;getItunesSubtitle())</code>
      <code>$this-&gt;assertEquals('abc', $entry-&gt;getItunesSummary())</code>
      <code>$this-&gt;assertEquals('abc', $entry-&gt;getItunesTitle())</code>
      <code>$this-&gt;assertEquals('yes', $entry-&gt;getItunesBlock())</code>
      <code>$this-&gt;assertEquals(23, $entry-&gt;getItunesDuration())</code>
      <code>$this-&gt;assertEquals(42, $entry-&gt;getItunesEpisode())</code>
      <code>$this-&gt;assertEquals(42, $entry-&gt;getItunesSeason())</code>
      <code>$this-&gt;assertEquals(['joe', 'jane'], $entry-&gt;getItunesAuthors())</code>
      <code>$this-&gt;assertEquals(['joe'], $entry-&gt;getItunesAuthors())</code>
      <code>$this-&gt;assertNull($entry-&gt;getItunesIsClosedCaptioned())</code>
      <code>$this-&gt;assertTrue($entry-&gt;getItunesIsClosedCaptioned())</code>
      <code>$this-&gt;expectExceptionMessage($expectedMessage)</code>
      <code>$this-&gt;expectExceptionMessage('MUST be a boolean')</code>
      <code>$this-&gt;expectExceptionMessage('MUST be one of')</code>
      <code>$this-&gt;expectExceptionMessage('may only be an integer')</code>
      <code>$this-&gt;expectExceptionMessage('may only be an integer')</code>
    </ReservedWord>
  </file>
  <file src="test/Writer/Extension/ITunes/FeedTest.php">
    <InvalidArgument occurrences="18">
      <code>ExceptionInterface::class</code>
      <code>ExceptionInterface::class</code>
      <code>ExceptionInterface::class</code>
      <code>ExceptionInterface::class</code>
      <code>ExceptionInterface::class</code>
      <code>ExceptionInterface::class</code>
      <code>ExceptionInterface::class</code>
      <code>ExceptionInterface::class</code>
      <code>ExceptionInterface::class</code>
      <code>ExceptionInterface::class</code>
      <code>ExceptionInterface::class</code>
      <code>ExceptionInterface::class</code>
      <code>ExceptionInterface::class</code>
      <code>ExceptionInterface::class</code>
      <code>ExceptionInterface::class</code>
      <code>ExceptionInterface::class</code>
      <code>ExceptionInterface::class</code>
      <code>ExceptionInterface::class</code>
    </InvalidArgument>
    <MissingClosureParamType occurrences="6">
      <code>$errno</code>
      <code>$errno</code>
      <code>$errno</code>
      <code>$errstr</code>
      <code>$errstr</code>
      <code>$errstr</code>
    </MissingClosureParamType>
    <MissingReturnType occurrences="44">
      <code>dataProviderForSetExplicit</code>
      <code>invalidCompleteStatuses</code>
      <code>invalidImageUrls</code>
      <code>invalidPodcastTypes</code>
      <code>testAddAuthor</code>
      <code>testAddAuthorThrowsExceptionIfValueGreaterThan255CharsLength</code>
      <code>testAddAuthors</code>
      <code>testAddOwner</code>
      <code>testAddOwners</code>
      <code>testSetBlock</code>
      <code>testSetBlockThrowsExceptionIfValueGreaterThan255CharsLength</code>
      <code>testSetBlockThrowsExceptionOnNonAlphaValue</code>
      <code>testSetCategories</code>
      <code>testSetCategoriesThrowsExceptionIfAnyCatNameGreaterThan255CharsLength</code>
      <code>testSetDurationAsHoursMinutesAndSeconds</code>
      <code>testSetDurationAsMinutesAndSeconds</code>
      <code>testSetDurationAsSeconds</code>
      <code>testSetDurationThrowsExceptionOnInvalidMinutes</code>
      <code>testSetDurationThrowsExceptionOnInvalidSeconds</code>
      <code>testSetDurationThrowsExceptionOnUnknownFormat</code>
      <code>testSetExplicit</code>
      <code>testSetExplicitThrowsExceptionOnUnknownTerm</code>
      <code>testSetImageAsJpgFile</code>
      <code>testSetImageAsPngFile</code>
      <code>testSetImageThrowsExceptionOnInvalidImageExtension</code>
      <code>testSetImageThrowsExceptionOnInvalidUri</code>
      <code>testSetItunesCompleteRaisesExceptionForInvalidStatus</code>
      <code>testSetItunesCompleteWithFalseDoesNotSetDataInContainer</code>
      <code>testSetItunesCompleteWithTrueSetsDataInContainer</code>
      <code>testSetItunesImageRaisesExceptionForInvalidUrl</code>
      <code>testSetItunesImageSetsInternalDataWithValidUrl</code>
      <code>testSetItunesTypeMutatesTypeWithValidData</code>
      <code>testSetItunesTypeWithInvalidTypeRaisesException</code>
      <code>testSetKeywords</code>
      <code>testSetKeywordsThrowsExceptionIfFormattedKeywordsExceeds255CharLength</code>
      <code>testSetKeywordsThrowsExceptionIfMaxKeywordsExceeded</code>
      <code>testSetNewFeedUrl</code>
      <code>testSetNewFeedUrlThrowsExceptionOnInvalidUri</code>
      <code>testSetSubtitle</code>
      <code>testSetSubtitleThrowsExceptionWhenValueExceeds255Chars</code>
      <code>testSetSummary</code>
      <code>testSetSummaryThrowsExceptionWhenValueExceeds4000Chars</code>
      <code>validImageUrls</code>
      <code>validPodcastTypes</code>
    </MissingReturnType>
    <MixedArgument occurrences="3">
      <code>$errstr</code>
      <code>$errstr</code>
      <code>$errstr</code>
    </MixedArgument>
    <ReservedWord occurrences="23">
      <code>$this-&gt;assertEquals($cats, $feed-&gt;getItunesCategories())</code>
      <code>$this-&gt;assertEquals($result, $feed-&gt;getItunesExplicit())</code>
      <code>$this-&gt;assertEquals($type, $feed-&gt;getItunesType())</code>
      <code>$this-&gt;assertEquals($url, $feed-&gt;getItunesImage())</code>
      <code>$this-&gt;assertEquals($words, $feed-&gt;getItunesKeywords())</code>
      <code>$this-&gt;assertEquals('23:23', $feed-&gt;getItunesDuration())</code>
      <code>$this-&gt;assertEquals('23:23:23', $feed-&gt;getItunesDuration())</code>
      <code>$this-&gt;assertEquals('Yes', $feed-&gt;getItunesComplete())</code>
      <code>$this-&gt;assertEquals('abc', $feed-&gt;getItunesSubtitle())</code>
      <code>$this-&gt;assertEquals('abc', $feed-&gt;getItunesSummary())</code>
      <code>$this-&gt;assertEquals('http://example.com/feed', $feed-&gt;getItunesNewFeedUrl())</code>
      <code>$this-&gt;assertEquals('http://www.example.com/image.jpg', $feed-&gt;getItunesImage())</code>
      <code>$this-&gt;assertEquals('http://www.example.com/image.png', $feed-&gt;getItunesImage())</code>
      <code>$this-&gt;assertEquals('yes', $feed-&gt;getItunesBlock())</code>
      <code>$this-&gt;assertEquals(23, $feed-&gt;getItunesDuration())</code>
      <code>$this-&gt;assertEquals(['joe', 'jane'], $feed-&gt;getItunesAuthors())</code>
      <code>$this-&gt;assertEquals(['joe'], $feed-&gt;getItunesAuthors())</code>
      <code>$this-&gt;assertEquals([['name' =&gt; 'joe', 'email' =&gt; 'joe@example.com']], $feed-&gt;getItunesOwners())</code>
      <code>$this-&gt;assertEquals([['name' =&gt; 'joe', 'email' =&gt; 'joe@example.com']], $feed-&gt;getItunesOwners())</code>
      <code>$this-&gt;assertNull($feed-&gt;getItunesComplete())</code>
      <code>$this-&gt;expectExceptionMessage($expectedMessage)</code>
      <code>$this-&gt;expectExceptionMessage('MUST be boolean')</code>
      <code>$this-&gt;expectExceptionMessage('MUST be one of')</code>
    </ReservedWord>
  </file>
  <file src="test/Writer/ExtensionPluginManagerCompatibilityTest.php">
    <InvalidReturnType occurrences="1">
      <code>getInstanceOf</code>
    </InvalidReturnType>
    <MissingReturnType occurrences="1">
      <code>testInstanceOfMatches</code>
    </MissingReturnType>
    <ReservedWord occurrences="1"/>
  </file>
  <file src="test/Writer/FeedFactoryTest.php">
    <InvalidArgument occurrences="1">
      <code>'string'</code>
    </InvalidArgument>
    <InvalidMethodCall occurrences="1">
      <code>format</code>
    </InvalidMethodCall>
    <MissingReturnType occurrences="7">
      <code>testFactoryShouldCreateFeedWithBasicData</code>
      <code>testFactoryShouldCreateFeedWithEntryArrays</code>
      <code>testFactoryShouldCreateFeedWithEntryObjects</code>
      <code>testFactoryShouldCreateFeedWithoutData</code>
      <code>testFactoryShouldThrowExceptionOnNonTraversableData</code>
      <code>testFactoryShouldThrowExceptionOnNonTraversableEntriesData</code>
      <code>testFactoryShouldThrowExceptionOnNonTraversableEntryData</code>
    </MissingReturnType>
    <PossiblyNullReference occurrences="1">
      <code>format</code>
    </PossiblyNullReference>
    <RedundantConditionGivenDocblockType occurrences="3">
      <code>assertInstanceOf</code>
      <code>assertInstanceOf</code>
      <code>assertInstanceOf</code>
    </RedundantConditionGivenDocblockType>
    <ReservedWord occurrences="7">
      <code>$this-&gt;assertCount(2, $feed)</code>
      <code>$this-&gt;assertCount(2, $feed)</code>
      <code>$this-&gt;assertInstanceOf(DateTime::class, $feed-&gt;getDateCreated())</code>
      <code>$this-&gt;assertInstanceOf(Feed::class, $feed)</code>
      <code>$this-&gt;assertInstanceOf(Feed::class, $feed)</code>
      <code>$this-&gt;assertInstanceOf(Feed::class, $feed)</code>
      <code>$this-&gt;assertInstanceOf(Feed::class, FeedFactory::factory([]))</code>
    </ReservedWord>
  </file>
  <file src="test/Writer/FeedTest.php">
    <InvalidArgument occurrences="27">
      <code>ExceptionInterface::class</code>
      <code>ExceptionInterface::class</code>
      <code>ExceptionInterface::class</code>
      <code>ExceptionInterface::class</code>
      <code>ExceptionInterface::class</code>
      <code>Writer\Exception\ExceptionInterface::class</code>
      <code>Writer\Exception\ExceptionInterface::class</code>
      <code>Writer\Exception\ExceptionInterface::class</code>
      <code>Writer\Exception\ExceptionInterface::class</code>
      <code>Writer\Exception\ExceptionInterface::class</code>
      <code>Writer\Exception\ExceptionInterface::class</code>
      <code>Writer\Exception\ExceptionInterface::class</code>
      <code>Writer\Exception\ExceptionInterface::class</code>
      <code>Writer\Exception\ExceptionInterface::class</code>
      <code>Writer\Exception\ExceptionInterface::class</code>
      <code>Writer\Exception\ExceptionInterface::class</code>
      <code>Writer\Exception\ExceptionInterface::class</code>
      <code>Writer\Exception\ExceptionInterface::class</code>
      <code>Writer\Exception\ExceptionInterface::class</code>
      <code>Writer\Exception\ExceptionInterface::class</code>
      <code>Writer\Exception\ExceptionInterface::class</code>
      <code>Writer\Exception\ExceptionInterface::class</code>
      <code>Writer\Exception\ExceptionInterface::class</code>
      <code>Writer\Exception\ExceptionInterface::class</code>
      <code>Writer\Exception\ExceptionInterface::class</code>
      <code>Writer\Exception\ExceptionInterface::class</code>
      <code>Writer\Exception\ExceptionInterface::class</code>
    </InvalidArgument>
    <InvalidMethodCall occurrences="4">
      <code>getTimestamp</code>
      <code>getTimestamp</code>
      <code>getTimestamp</code>
      <code>getTimestamp</code>
    </InvalidMethodCall>
    <MissingClosureParamType occurrences="4">
      <code>$errno</code>
      <code>$errstr</code>
      <code>$message</code>
      <code>$toReturn</code>
    </MissingClosureParamType>
    <MissingPropertyType occurrences="1">
      <code>$feedSamplePath</code>
    </MissingPropertyType>
    <MissingReturnType occurrences="113">
      <code>setUp</code>
      <code>tearDown</code>
      <code>testAddAuthorThrowsExceptionIfNameOmittedFromArray</code>
      <code>testAddAuthorThrowsExceptionOnInvalidEmailFromArray</code>
      <code>testAddAuthorThrowsExceptionOnInvalidNameFromArray</code>
      <code>testAddAuthorThrowsExceptionOnInvalidUriFromArray</code>
      <code>testAddTombstone</code>
      <code>testAddingCategoryWithInvalidUriAsSchemeThrowsException</code>
      <code>testAddingCategoryWithoutTermThrowsException</code>
      <code>testAddingHubUrlReturnsNullIfNotSet</code>
      <code>testAddingHubUrlThrowsExceptionOnInvalidUri</code>
      <code>testAddsAndOrdersEntriesByDateIfRequested</code>
      <code>testAddsAndOrdersEntriesByModifiedDate</code>
      <code>testAddsAuthorEmailFromArray</code>
      <code>testAddsAuthorNameFromArray</code>
      <code>testAddsAuthorUriFromArray</code>
      <code>testAddsAuthorsFromArrayOfAuthors</code>
      <code>testAddsCategory</code>
      <code>testAddsHubUrl</code>
      <code>testAddsManyCategories</code>
      <code>testAddsManyHubUrls</code>
      <code>testCreateTombstone</code>
      <code>testCreatesNewEntryDataContainer</code>
      <code>testExportRss</code>
      <code>testExportRssIgnoreExceptions</code>
      <code>testExportWrongTypeException</code>
      <code>testFeedWriterEmitsNoticeDuringFeedImportWhenGooglePlayPodcastExtensionUnavailable</code>
      <code>testFluentInterface</code>
      <code>testGetBaseUrlReturnsNullIfNotSet</code>
      <code>testGetCategoriesReturnsNullIfNotSet</code>
      <code>testGetCopyrightReturnsNullIfDateNotSet</code>
      <code>testGetDateCreatedReturnsNullIfDateNotSet</code>
      <code>testGetDateModifiedReturnsNullIfDateNotSet</code>
      <code>testGetDescriptionReturnsNullIfDateNotSet</code>
      <code>testGetEncodingReturnsUtf8IfNotSet</code>
      <code>testGetEntry</code>
      <code>testGetEntryException</code>
      <code>testGetFeedLinksReturnsNullIfNotSet</code>
      <code>testGetGeneratorReturnsNullIfDateNotSet</code>
      <code>testGetIdReturnsNullIfDateNotSet</code>
      <code>testGetLanguageReturnsNullIfDateNotSet</code>
      <code>testGetLastBuildDateReturnsNullIfDateNotSet</code>
      <code>testGetLinkReturnsNullIfDateNotSet</code>
      <code>testGetTitleReturnsNullIfDateNotSet</code>
      <code>testRemoveEntry</code>
      <code>testRemoveEntryException</code>
      <code>testSetCopyrightThrowsExceptionOnInvalidParam</code>
      <code>testSetDateCreatedDefaultsToCurrentTime</code>
      <code>testSetDateCreatedThrowsExceptionOnInvalidParameter</code>
      <code>testSetDateCreatedUsesDateTimeImmutableObject</code>
      <code>testSetDateCreatedUsesDateTimeObject</code>
      <code>testSetDateCreatedUsesGivenUnixTimestamp</code>
      <code>testSetDateCreatedUsesGivenUnixTimestampThatIsAVerySmallInteger</code>
      <code>testSetDateCreatedUsesGivenUnixTimestampThatIsLessThanTenDigits</code>
      <code>testSetDateModifiedDefaultsToCurrentTime</code>
      <code>testSetDateModifiedThrowsExceptionOnInvalidParameter</code>
      <code>testSetDateModifiedUsesDateTimeImmutableObject</code>
      <code>testSetDateModifiedUsesDateTimeObject</code>
      <code>testSetDateModifiedUsesGivenUnixTimestamp</code>
      <code>testSetDateModifiedUsesGivenUnixTimestampThatIsAVerySmallInteger</code>
      <code>testSetDateModifiedUsesGivenUnixTimestampThatIsLessThanTenDigits</code>
      <code>testSetDescriptionThrowsExceptionOnInvalidParameter</code>
      <code>testSetEncodingThrowsExceptionOnInvalidParameter</code>
      <code>testSetIdThrowsExceptionOnInvalidParameter</code>
      <code>testSetIdThrowsExceptionOnInvalidUri</code>
      <code>testSetLanguageThrowsExceptionOnInvalidParameter</code>
      <code>testSetLastBuildDateDefaultsToCurrentTime</code>
      <code>testSetLastBuildDateThrowsExceptionOnInvalidParameter</code>
      <code>testSetLastBuildDateUsesDateTimeImmutableObject</code>
      <code>testSetLastBuildDateUsesDateTimeObject</code>
      <code>testSetLastBuildDateUsesGivenUnixTimestamp</code>
      <code>testSetLastBuildDateUsesGivenUnixTimestampThatIsAVerySmallInteger</code>
      <code>testSetLastBuildDateUsesGivenUnixTimestampThatIsLessThanTenDigits</code>
      <code>testSetLinkThrowsExceptionOnEmptyString</code>
      <code>testSetLinkThrowsExceptionOnInvalidUri</code>
      <code>testSetTitleShouldAllowAStringWithTheContentsZero</code>
      <code>testSetTitleThrowsExceptionOnInvalidParameter</code>
      <code>testSetsBaseUrl</code>
      <code>testSetsBaseUrlThrowsExceptionOnInvalidUri</code>
      <code>testSetsCopyright</code>
      <code>testSetsDescription</code>
      <code>testSetsEncoding</code>
      <code>testSetsFeedLink</code>
      <code>testSetsFeedLinkThrowsExceptionOnInvalidType</code>
      <code>testSetsFeedLinkThrowsExceptionOnInvalidUri</code>
      <code>testSetsGeneratorName</code>
      <code>testSetsGeneratorNameDeprecated</code>
      <code>testSetsGeneratorThrowsExceptionOnInvalidName</code>
      <code>testSetsGeneratorThrowsExceptionOnInvalidNameDeprecated</code>
      <code>testSetsGeneratorThrowsExceptionOnInvalidUri</code>
      <code>testSetsGeneratorThrowsExceptionOnInvalidUriDeprecated</code>
      <code>testSetsGeneratorThrowsExceptionOnInvalidVersion</code>
      <code>testSetsGeneratorThrowsExceptionOnInvalidVersionDeprecated</code>
      <code>testSetsGeneratorUri</code>
      <code>testSetsGeneratorUriDeprecated</code>
      <code>testSetsGeneratorVersion</code>
      <code>testSetsGeneratorVersionDeprecated</code>
      <code>testSetsId</code>
      <code>testSetsIdAcceptsComplexTagUri</code>
      <code>testSetsIdAcceptsSimpleTagUri</code>
      <code>testSetsIdAcceptsUrns</code>
      <code>testSetsImageDescription</code>
      <code>testSetsImageHeight</code>
      <code>testSetsImageLink</code>
      <code>testSetsImageTitle</code>
      <code>testSetsImageUri</code>
      <code>testSetsImageUriThrowsExceptionOnEmptyUri</code>
      <code>testSetsImageUriThrowsExceptionOnInvalidUri</code>
      <code>testSetsImageUriThrowsExceptionOnMissingUri</code>
      <code>testSetsImageWidth</code>
      <code>testSetsLanguage</code>
      <code>testSetsLink</code>
      <code>testSetsTitle</code>
    </MissingReturnType>
    <MixedArgument occurrences="2">
      <code>$message</code>
      <code>$notices-&gt;messages</code>
    </MixedArgument>
    <MixedArgumentTypeCoercion occurrences="1"/>
    <MixedArrayAssignment occurrences="1">
      <code>$notices-&gt;messages[]</code>
    </MixedArrayAssignment>
    <MixedAssignment occurrences="2">
      <code>$message</code>
      <code>$return</code>
    </MixedAssignment>
    <MixedMethodCall occurrences="10">
      <code>setDateModified</code>
      <code>setDescription</code>
      <code>setEncoding</code>
      <code>setId</code>
      <code>setImage</code>
      <code>setLanguage</code>
      <code>setLastBuildDate</code>
      <code>setLink</code>
      <code>setTitle</code>
      <code>setType</code>
    </MixedMethodCall>
    <RedundantConditionGivenDocblockType occurrences="2">
      <code>assertInstanceOf</code>
      <code>assertInstanceOf</code>
    </RedundantConditionGivenDocblockType>
    <ReservedWord occurrences="80">
      <code>$this-&gt;assertEquals($feed, $export)</code>
      <code>$this-&gt;assertEquals($feed, $export)</code>
      <code>$this-&gt;assertEquals($myDate, $writer-&gt;getDateCreated())</code>
      <code>$this-&gt;assertEquals($myDate, $writer-&gt;getDateCreated())</code>
      <code>$this-&gt;assertEquals($myDate, $writer-&gt;getDateCreated())</code>
      <code>$this-&gt;assertEquals($myDate, $writer-&gt;getDateCreated())</code>
      <code>$this-&gt;assertEquals($myDate, $writer-&gt;getDateCreated())</code>
      <code>$this-&gt;assertEquals($myDate, $writer-&gt;getDateModified())</code>
      <code>$this-&gt;assertEquals($myDate, $writer-&gt;getDateModified())</code>
      <code>$this-&gt;assertEquals($myDate, $writer-&gt;getDateModified())</code>
      <code>$this-&gt;assertEquals($myDate, $writer-&gt;getDateModified())</code>
      <code>$this-&gt;assertEquals($myDate, $writer-&gt;getDateModified())</code>
      <code>$this-&gt;assertEquals($myDate, $writer-&gt;getLastBuildDate())</code>
      <code>$this-&gt;assertEquals($myDate, $writer-&gt;getLastBuildDate())</code>
      <code>$this-&gt;assertEquals($myDate, $writer-&gt;getLastBuildDate())</code>
      <code>$this-&gt;assertEquals($myDate, $writer-&gt;getLastBuildDate())</code>
      <code>$this-&gt;assertEquals($myDate, $writer-&gt;getLastBuildDate())</code>
      <code>$this-&gt;assertEquals('0', $feed-&gt;getTitle())</code>
      <code>$this-&gt;assertEquals('1230000000', $writer-&gt;getEntry(1)-&gt;getDateCreated()-&gt;getTimestamp())</code>
      <code>$this-&gt;assertEquals('1234567890', $writer-&gt;getEntry(1)-&gt;getDateCreated()-&gt;getTimestamp())</code>
      <code>$this-&gt;assertEquals('Copyright (c) 2009 Paddy Brady', $writer-&gt;getCopyright())</code>
      <code>$this-&gt;assertEquals('UTF-8', $writer-&gt;getEncoding())</code>
      <code>$this-&gt;assertEquals('abc', $writer-&gt;getDescription())</code>
      <code>$this-&gt;assertEquals('abc', $writer-&gt;getLanguage())</code>
      <code>$this-&gt;assertEquals('abc', $writer-&gt;getTitle())</code>
      <code>$this-&gt;assertEquals('foo', $writer-&gt;getEntry()-&gt;getTitle())</code>
      <code>$this-&gt;assertEquals('http://www.example.com', $writer-&gt;getBaseUrl())</code>
      <code>$this-&gt;assertEquals('http://www.example.com/id', $writer-&gt;getId())</code>
      <code>$this-&gt;assertEquals('http://www.example.com/id', $writer-&gt;getLink())</code>
      <code>$this-&gt;assertEquals('tag:example.org,2010:/foo/bar/', $writer-&gt;getId())</code>
      <code>$this-&gt;assertEquals('urn:uuid:60a76c80-d399-11d9-b93C-0003939e0af6', $writer-&gt;getId())</code>
      <code>$this-&gt;assertEquals('utf-16', $writer-&gt;getEncoding())</code>
      <code>$this-&gt;assertEquals(1230000000, $writer-&gt;getEntry(1)-&gt;getDateCreated()-&gt;getTimestamp())</code>
      <code>$this-&gt;assertEquals(1230000000, $writer-&gt;getEntry(1)-&gt;getDateModified()-&gt;getTimestamp())</code>
      <code>$this-&gt;assertEquals(['http://www.example.com/hub', 'http://www.example.com/hub2'], $writer-&gt;getHubs())</code>
      <code>$this-&gt;assertEquals(['http://www.example.com/hub'], $writer-&gt;getHubs())</code>
      <code>$this-&gt;assertEquals(['name' =&gt; 'Joe'], $writer-&gt;getAuthor())</code>
      <code>$this-&gt;assertEquals(['name' =&gt; 'LaminasW'], $writer-&gt;getGenerator())</code>
      <code>$this-&gt;assertEquals(['name' =&gt; 'LaminasW'], $writer-&gt;getGenerator())</code>
      <code>$this-&gt;assertEquals(['rss' =&gt; 'http://www.example.com/rss'], $writer-&gt;getFeedLinks())</code>
      <code>$this-&gt;assertEquals([['term' =&gt; 'cat_dog'], ['term' =&gt; 'cat_mouse']], $writer-&gt;getCategories())</code>
      <code>$this-&gt;assertEquals([['term' =&gt; 'cat_dog']], $writer-&gt;getCategories())</code>
      <code>$this-&gt;assertInstanceOf(Deleted::class, $tombstone)</code>
      <code>$this-&gt;assertInstanceOf(Deleted::class, $writer-&gt;getEntry(0))</code>
      <code>$this-&gt;assertInstanceOf(Entry::class, $entry)</code>
      <code>$this-&gt;assertLessThanOrEqual($dateNow, $writer-&gt;getDateCreated())</code>
      <code>$this-&gt;assertLessThanOrEqual($dateNow, $writer-&gt;getDateModified())</code>
      <code>$this-&gt;assertLessThanOrEqual($dateNow, $writer-&gt;getLastBuildDate())</code>
      <code>$this-&gt;assertNull($writer-&gt;getBaseUrl())</code>
      <code>$this-&gt;assertNull($writer-&gt;getCategories())</code>
      <code>$this-&gt;assertNull($writer-&gt;getCopyright())</code>
      <code>$this-&gt;assertNull($writer-&gt;getDateCreated())</code>
      <code>$this-&gt;assertNull($writer-&gt;getDateModified())</code>
      <code>$this-&gt;assertNull($writer-&gt;getDescription())</code>
      <code>$this-&gt;assertNull($writer-&gt;getFeedLinks())</code>
      <code>$this-&gt;assertNull($writer-&gt;getGenerator())</code>
      <code>$this-&gt;assertNull($writer-&gt;getHubs())</code>
      <code>$this-&gt;assertNull($writer-&gt;getId())</code>
      <code>$this-&gt;assertNull($writer-&gt;getLanguage())</code>
      <code>$this-&gt;assertNull($writer-&gt;getLastBuildDate())</code>
      <code>$this-&gt;assertNull($writer-&gt;getLink())</code>
      <code>$this-&gt;assertNull($writer-&gt;getTitle())</code>
      <code>$this-&gt;markTestIncomplete('Pending Laminas\URI fix for validation')</code>
      <code>$this-&gt;markTestIncomplete('Pending Laminas\URI fix for validation')</code>
      <code>$this-&gt;markTestIncomplete('Pending Laminas\URI fix for validation')</code>
    </ReservedWord>
  </file>
  <file src="test/Writer/Renderer/Entry/AtomTest.php">
    <InvalidArgument occurrences="5">
      <code>ExceptionInterface::class</code>
      <code>ExceptionInterface::class</code>
      <code>ExceptionInterface::class</code>
      <code>ExceptionInterface::class</code>
      <code>ExceptionInterface::class</code>
    </InvalidArgument>
    <MissingClosureParamType occurrences="4">
      <code>$errno</code>
      <code>$errstr</code>
      <code>$message</code>
      <code>$toReturn</code>
    </MissingClosureParamType>
    <MissingPropertyType occurrences="2">
      <code>$validEntry</code>
      <code>$validWriter</code>
    </MissingPropertyType>
    <MissingReturnType occurrences="27">
      <code>setUp</code>
      <code>tearDown</code>
      <code>testCategoriesCanBeSet</code>
      <code>testCommentCountRendered</code>
      <code>testCommentFeedLinksRendered</code>
      <code>testCommentLinkRendered</code>
      <code>testEntryContentHasBeenSetXhtml</code>
      <code>testEntryEncodingDefaultIsUsedIfEncodingNotSetByHand</code>
      <code>testEntryEncodingHasBeenSet</code>
      <code>testEntryHoldsAnyAuthorAdded</code>
      <code>testEntryHoldsAnyEnclosureAdded</code>
      <code>testEntryIdHasBeenSet</code>
      <code>testEntryIdHasBeenSetUsingComplexTagUri</code>
      <code>testEntryIdHasBeenSetUsingSimpleTagUri</code>
      <code>testEntryIncludesLinkToHtmlVersionOfFeed</code>
      <code>testEntryPublishedDateHasBeenSet</code>
      <code>testEntryRendererEmitsNoticeDuringInstantiationWhenGooglePlayPodcastExtensionUnavailable</code>
      <code>testEntrySummaryDescriptionHasBeenSet</code>
      <code>testEntryTitleHasBeenSet</code>
      <code>testEntryUpdatedDateHasBeenSet</code>
      <code>testFeedContentIfMissingThrowsExceptionIfThereIsNoLink</code>
      <code>testFeedIdDefaultIsUsedIfNotSetByHand</code>
      <code>testFeedIdIfMissingThrowsException</code>
      <code>testFeedIdThrowsExceptionIfNotUri</code>
      <code>testFeedTitleIfMissingThrowsException</code>
      <code>testFeedUpdatedDateIfMissingThrowsException</code>
      <code>testRenderMethodRunsMinimalWriterContainerProperlyBeforeICheckAtomCompliance</code>
    </MissingReturnType>
    <MixedArgument occurrences="27">
      <code>$message</code>
      <code>$notices-&gt;messages</code>
      <code>$this-&gt;validEntry</code>
      <code>$this-&gt;validWriter</code>
      <code>$this-&gt;validWriter</code>
      <code>$this-&gt;validWriter</code>
      <code>$this-&gt;validWriter</code>
      <code>$this-&gt;validWriter</code>
      <code>$this-&gt;validWriter</code>
      <code>$this-&gt;validWriter</code>
      <code>$this-&gt;validWriter</code>
      <code>$this-&gt;validWriter</code>
      <code>$this-&gt;validWriter</code>
      <code>$this-&gt;validWriter</code>
      <code>$this-&gt;validWriter</code>
      <code>$this-&gt;validWriter</code>
      <code>$this-&gt;validWriter</code>
      <code>$this-&gt;validWriter</code>
      <code>$this-&gt;validWriter</code>
      <code>$this-&gt;validWriter</code>
      <code>$this-&gt;validWriter</code>
      <code>$this-&gt;validWriter</code>
      <code>$this-&gt;validWriter</code>
      <code>$this-&gt;validWriter</code>
      <code>$this-&gt;validWriter</code>
      <code>$this-&gt;validWriter</code>
      <code>$this-&gt;validWriter</code>
    </MixedArgument>
    <MixedArgumentTypeCoercion occurrences="1"/>
    <MixedArrayAssignment occurrences="1">
      <code>$notices-&gt;messages[]</code>
    </MixedArrayAssignment>
    <MixedAssignment occurrences="21">
      <code>$author</code>
      <code>$enc</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$message</code>
    </MixedAssignment>
    <MixedMethodCall occurrences="40">
      <code>addCategories</code>
      <code>getAuthor</code>
      <code>getAuthor</code>
      <code>getCategories</code>
      <code>getCommentCount</code>
      <code>getCommentFeedLink</code>
      <code>getCommentLink</code>
      <code>getContent</code>
      <code>getDateCreated</code>
      <code>getDateModified</code>
      <code>getDescription</code>
      <code>getEnclosure</code>
      <code>getEncoding</code>
      <code>getEncoding</code>
      <code>getId</code>
      <code>getId</code>
      <code>getId</code>
      <code>getId</code>
      <code>getLink</code>
      <code>getLink</code>
      <code>getTimestamp</code>
      <code>getTimestamp</code>
      <code>getTitle</code>
      <code>remove</code>
      <code>remove</code>
      <code>remove</code>
      <code>remove</code>
      <code>remove</code>
      <code>remove</code>
      <code>remove</code>
      <code>remove</code>
      <code>setCommentCount</code>
      <code>setCommentFeedLinks</code>
      <code>setCommentLink</code>
      <code>setEnclosure</code>
      <code>setEncoding</code>
      <code>setId</code>
      <code>setId</code>
      <code>setId</code>
      <code>setId</code>
    </MixedMethodCall>
    <MixedPropertyFetch occurrences="3">
      <code>$enc-&gt;length</code>
      <code>$enc-&gt;type</code>
      <code>$enc-&gt;url</code>
    </MixedPropertyFetch>
    <ReservedWord occurrences="22">
      <code>$this-&gt;assertEquals($entry-&gt;getLink(), $entry-&gt;getId())</code>
      <code>$this-&gt;assertEquals($expected, (array) $entry-&gt;getCategories())</code>
      <code>$this-&gt;assertEquals('1337', $enc-&gt;length)</code>
      <code>$this-&gt;assertEquals('&lt;p class="xhtml:"&gt;This is test content for &lt;em&gt;xhtml:&lt;/em&gt;&lt;/p&gt;', $entry-&gt;getContent())</code>
      <code>$this-&gt;assertEquals('This is a test entry description.', $entry-&gt;getDescription())</code>
      <code>$this-&gt;assertEquals('This is a test entry.', $entry-&gt;getTitle())</code>
      <code>$this-&gt;assertEquals('UTF-8', $entry-&gt;getEncoding())</code>
      <code>$this-&gt;assertEquals('audio/mpeg', $enc-&gt;type)</code>
      <code>$this-&gt;assertEquals('http://example.com/audio.mp3', $enc-&gt;url)</code>
      <code>$this-&gt;assertEquals('http://www.example.com/1', $entry-&gt;getLink())</code>
      <code>$this-&gt;assertEquals('http://www.example.com/atom/id/1', $entry-&gt;getCommentFeedLink('atom'))</code>
      <code>$this-&gt;assertEquals('http://www.example.com/id/1', $entry-&gt;getCommentLink())</code>
      <code>$this-&gt;assertEquals('iso-8859-1', $entry-&gt;getEncoding())</code>
      <code>$this-&gt;assertEquals('tag:example.org,2010:/foo/bar/', $entry-&gt;getId())</code>
      <code>$this-&gt;assertEquals('urn:uuid:60a76c80-d399-11d9-b93C-0003939e0af6', $entry-&gt;getId())</code>
      <code>$this-&gt;assertEquals(1234567000, $entry-&gt;getDateCreated()-&gt;getTimestamp())</code>
      <code>$this-&gt;assertEquals(1234567890, $entry-&gt;getDateModified()-&gt;getTimestamp())</code>
      <code>$this-&gt;assertEquals(22, $entry-&gt;getCommentCount())</code>
      <code>$this-&gt;markTestIncomplete('Pending Laminas\URI fix for validation')</code>
    </ReservedWord>
  </file>
  <file src="test/Writer/Renderer/Entry/RssTest.php">
    <InvalidArgument occurrences="6">
      <code>ExceptionInterface::class</code>
      <code>ExceptionInterface::class</code>
      <code>ExceptionInterface::class</code>
      <code>ExceptionInterface::class</code>
      <code>ExceptionInterface::class</code>
      <code>ExceptionInterface::class</code>
    </InvalidArgument>
    <MissingClosureParamType occurrences="4">
      <code>$errno</code>
      <code>$errstr</code>
      <code>$message</code>
      <code>$toReturn</code>
    </MissingClosureParamType>
    <MissingPropertyType occurrences="2">
      <code>$validEntry</code>
      <code>$validWriter</code>
    </MissingPropertyType>
    <MissingReturnType occurrences="37">
      <code>setUp</code>
      <code>tearDown</code>
      <code>testAddsEnclosureThrowsExceptionOnMissingLength</code>
      <code>testAddsEnclosureThrowsExceptionOnMissingType</code>
      <code>testAddsEnclosureThrowsExceptionOnNegativeLength</code>
      <code>testAddsEnclosureThrowsExceptionOnNonNumericLength</code>
      <code>testCategoriesCanBeSet</code>
      <code>testCategoriesCharDataEncoding</code>
      <code>testCommentCountRendered</code>
      <code>testCommentFeedLinksRendered</code>
      <code>testCommentLinkRendered</code>
      <code>testEnclosureWorksWithPositiveLength</code>
      <code>testEnclosureWorksWithPositiveLengthString</code>
      <code>testEnclosureWorksWithZeroLength</code>
      <code>testEntryAuthorCharDataEncoding</code>
      <code>testEntryContentCharDataEncoding</code>
      <code>testEntryContentHasBeenSet</code>
      <code>testEntryDescriptionCharDataEncoding</code>
      <code>testEntryDescriptionIfMissingThrowsExceptionIfAlsoNoTitle</code>
      <code>testEntryEncodingDefaultIsUsedIfEncodingNotSetByHand</code>
      <code>testEntryEncodingHasBeenSet</code>
      <code>testEntryHoldsAnyAuthorAdded</code>
      <code>testEntryHoldsAnyEnclosureAdded</code>
      <code>testEntryIdDefaultIsUsedIfNotSetByHand</code>
      <code>testEntryIdHasBeenSet</code>
      <code>testEntryIdHasBeenSetWithPermaLinkAsFalseWhenNotUri</code>
      <code>testEntryIncludesLinkToHtmlVersionOfFeed</code>
      <code>testEntryPublishedDateHasBeenSet</code>
      <code>testEntryRendererEmitsNoticeDuringInstantiationWhenGooglePlayPodcastExtensionUnavailable</code>
      <code>testEntrySummaryDescriptionHasBeenSet</code>
      <code>testEntryTitleCharDataEncoding</code>
      <code>testEntryTitleHasBeenSet</code>
      <code>testEntryTitleIfMissingThrowsExceptionIfDescriptionAlsoMissing</code>
      <code>testEntryUpdatedDateHasBeenSet</code>
      <code>testPermalinkShouldBeEqualToLinkOfEntry</code>
      <code>testPermalinkShouldBeNullOnNonAbsoluteUri</code>
      <code>testRenderMethodRunsMinimalWriterContainerProperlyBeforeICheckAtomCompliance</code>
    </MissingReturnType>
    <MixedArgument occurrences="36">
      <code>$message</code>
      <code>$notices-&gt;messages</code>
      <code>$this-&gt;validEntry</code>
      <code>$this-&gt;validWriter</code>
      <code>$this-&gt;validWriter</code>
      <code>$this-&gt;validWriter</code>
      <code>$this-&gt;validWriter</code>
      <code>$this-&gt;validWriter</code>
      <code>$this-&gt;validWriter</code>
      <code>$this-&gt;validWriter</code>
      <code>$this-&gt;validWriter</code>
      <code>$this-&gt;validWriter</code>
      <code>$this-&gt;validWriter</code>
      <code>$this-&gt;validWriter</code>
      <code>$this-&gt;validWriter</code>
      <code>$this-&gt;validWriter</code>
      <code>$this-&gt;validWriter</code>
      <code>$this-&gt;validWriter</code>
      <code>$this-&gt;validWriter</code>
      <code>$this-&gt;validWriter</code>
      <code>$this-&gt;validWriter</code>
      <code>$this-&gt;validWriter</code>
      <code>$this-&gt;validWriter</code>
      <code>$this-&gt;validWriter</code>
      <code>$this-&gt;validWriter</code>
      <code>$this-&gt;validWriter</code>
      <code>$this-&gt;validWriter</code>
      <code>$this-&gt;validWriter</code>
      <code>$this-&gt;validWriter</code>
      <code>$this-&gt;validWriter</code>
      <code>$this-&gt;validWriter</code>
      <code>$this-&gt;validWriter</code>
      <code>$this-&gt;validWriter</code>
      <code>$this-&gt;validWriter</code>
      <code>$this-&gt;validWriter</code>
      <code>$this-&gt;validWriter</code>
    </MixedArgument>
    <MixedArgumentTypeCoercion occurrences="1"/>
    <MixedArrayAssignment occurrences="1">
      <code>$notices-&gt;messages[]</code>
    </MixedArrayAssignment>
    <MixedAssignment occurrences="25">
      <code>$author</code>
      <code>$author</code>
      <code>$enc</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$entry</code>
      <code>$message</code>
    </MixedAssignment>
    <MixedMethodCall occurrences="56">
      <code>addAuthor</code>
      <code>addAuthor</code>
      <code>addCategories</code>
      <code>addCategories</code>
      <code>getAuthor</code>
      <code>getAuthor</code>
      <code>getAuthor</code>
      <code>getAuthor</code>
      <code>getCategories</code>
      <code>getCategories</code>
      <code>getCommentCount</code>
      <code>getCommentFeedLink</code>
      <code>getCommentLink</code>
      <code>getContent</code>
      <code>getContent</code>
      <code>getDateCreated</code>
      <code>getDateModified</code>
      <code>getDescription</code>
      <code>getDescription</code>
      <code>getEnclosure</code>
      <code>getEncoding</code>
      <code>getEncoding</code>
      <code>getId</code>
      <code>getId</code>
      <code>getLink</code>
      <code>getLink</code>
      <code>getLink</code>
      <code>getTimestamp</code>
      <code>getTimestamp</code>
      <code>getTitle</code>
      <code>getTitle</code>
      <code>remove</code>
      <code>remove</code>
      <code>remove</code>
      <code>remove</code>
      <code>remove</code>
      <code>setCommentCount</code>
      <code>setCommentFeedLinks</code>
      <code>setCommentLink</code>
      <code>setContent</code>
      <code>setContent</code>
      <code>setDateCreated</code>
      <code>setDateModified</code>
      <code>setDescription</code>
      <code>setEnclosure</code>
      <code>setEnclosure</code>
      <code>setEnclosure</code>
      <code>setEnclosure</code>
      <code>setEnclosure</code>
      <code>setEnclosure</code>
      <code>setEnclosure</code>
      <code>setEnclosure</code>
      <code>setEncoding</code>
      <code>setId</code>
      <code>setId</code>
      <code>setTitle</code>
    </MixedMethodCall>
    <MixedPropertyFetch occurrences="3">
      <code>$enc-&gt;length</code>
      <code>$enc-&gt;type</code>
      <code>$enc-&gt;url</code>
    </MixedPropertyFetch>
    <ReservedWord occurrences="26">
      <code>$this-&gt;assertEquals($entry-&gt;getLink(), $entry-&gt;getId())</code>
      <code>$this-&gt;assertEquals($expected, (array) $entry-&gt;getCategories())</code>
      <code>$this-&gt;assertEquals($expected, (array) $entry-&gt;getCategories())</code>
      <code>$this-&gt;assertEquals('1337', $enc-&gt;length)</code>
      <code>$this-&gt;assertEquals('&lt;&gt;&amp;\'"áéíóú', $entry-&gt;getContent())</code>
      <code>$this-&gt;assertEquals('&lt;&gt;&amp;\'"áéíóú', $entry-&gt;getDescription())</code>
      <code>$this-&gt;assertEquals('&lt;&gt;&amp;\'"áéíóú', $entry-&gt;getTitle())</code>
      <code>$this-&gt;assertEquals('This is a test entry description.', $entry-&gt;getDescription())</code>
      <code>$this-&gt;assertEquals('This is a test entry.', $entry-&gt;getTitle())</code>
      <code>$this-&gt;assertEquals('This is test entry content.', $entry-&gt;getContent())</code>
      <code>$this-&gt;assertEquals('UTF-8', $entry-&gt;getEncoding())</code>
      <code>$this-&gt;assertEquals('audio/mpeg', $enc-&gt;type)</code>
      <code>$this-&gt;assertEquals('http://example.com/audio.mp3', $enc-&gt;url)</code>
      <code>$this-&gt;assertEquals('http://www.example.com/1', $entry-&gt;getLink())</code>
      <code>$this-&gt;assertEquals('http://www.example.com/id/1', $entry-&gt;getCommentLink())</code>
      <code>$this-&gt;assertEquals('http://www.example.com/rss/id/1', $entry-&gt;getCommentFeedLink('rss'))</code>
      <code>$this-&gt;assertEquals('iso-8859-1', $entry-&gt;getEncoding())</code>
      <code>$this-&gt;assertEquals('urn:uuid:60a76c80-d399-11d9-b93C-0003939e0af6', $entry-&gt;getId())</code>
      <code>$this-&gt;assertEquals(1234567000, $entry-&gt;getDateCreated()-&gt;getTimestamp())</code>
      <code>$this-&gt;assertEquals(1234567890, $entry-&gt;getDateModified()-&gt;getTimestamp())</code>
      <code>$this-&gt;assertEquals(22, $entry-&gt;getCommentCount())</code>
      <code>$this-&gt;assertEquals(['name' =&gt; '&lt;&gt;&amp;\'"áéíóú'], $entry-&gt;getAuthor())</code>
      <code>$this-&gt;assertEquals(['name' =&gt; 'Jane'], $entry-&gt;getAuthor())</code>
      <code>$this-&gt;assertNull($entry-&gt;getPermalink())</code>
      <code>$this-&gt;markTestIncomplete('Untest due to LaminasR potential bug')</code>
    </ReservedWord>
  </file>
  <file src="test/Writer/Renderer/Feed/AtomTest.php">
    <InvalidArgument occurrences="4">
      <code>ExceptionInterface::class</code>
      <code>ExceptionInterface::class</code>
      <code>ExceptionInterface::class</code>
      <code>ExceptionInterface::class</code>
    </InvalidArgument>
    <MissingClosureParamType occurrences="4">
      <code>$errno</code>
      <code>$errstr</code>
      <code>$message</code>
      <code>$toReturn</code>
    </MissingClosureParamType>
    <MissingPropertyType occurrences="1">
      <code>$validWriter</code>
    </MissingPropertyType>
    <MissingReturnType occurrences="41">
      <code>setUp</code>
      <code>tearDown</code>
      <code>testBaseUrlCanBeSet</code>
      <code>testBuildMethodRunsMinimalWriterContainerProperlyBeforeICheckAtomCompliance</code>
      <code>testCategoriesCanBeSet</code>
      <code>testCategoriesCharDataEncoding</code>
      <code>testCopyrightCanBeSet</code>
      <code>testCopyrightCharDataEncoding</code>
      <code>testDateModifiedHasTheCorrectFormat</code>
      <code>testFeedAuthorCharDataEncoding</code>
      <code>testFeedAuthorIfNotSetThrowsExceptionIfAnyEntriesAlsoAreMissingAuthors</code>
      <code>testFeedAuthorIfNotSetThrowsNoExceptionIfAllEntriesIncludeAtLeastOneAuthor</code>
      <code>testFeedEncodingDefaultIsUsedIfEncodingNotSetByHand</code>
      <code>testFeedEncodingHasBeenSet</code>
      <code>testFeedGeneratorCharDataEncoding</code>
      <code>testFeedGeneratorDefaultIsUsedIfGeneratorNotSetByHand</code>
      <code>testFeedGeneratorHasBeenSet</code>
      <code>testFeedGeneratorIfMissingThrowsNoException</code>
      <code>testFeedHoldsAnyAuthorAdded</code>
      <code>testFeedIdDefaultOfHtmlLinkIsUsedIfNotSetByHand</code>
      <code>testFeedIdHasBeenSet</code>
      <code>testFeedIncludesLinkToHtmlVersionOfFeed</code>
      <code>testFeedIncludesLinkToXmlAtomWhereTheFeedWillBeAvailable</code>
      <code>testFeedLanguageDefaultIsUsedIfGeneratorNotSetByHand</code>
      <code>testFeedLanguageHasBeenSet</code>
      <code>testFeedLanguageIfMissingThrowsNoException</code>
      <code>testFeedLinkToHtmlVersionOfFeedIfMissingThrowsExceptionIfIdMissing</code>
      <code>testFeedLinkToHtmlVersionOfFeedIfMissingThrowsNoExceptionIfIdSet</code>
      <code>testFeedLinkToXmlAtomWhereTheFeedWillBeAvailableIfMissingThrowsException</code>
      <code>testFeedRendererEmitsNoticeDuringFeedImportWhenGooglePlayPodcastExtensionUnavailable</code>
      <code>testFeedSubtitleCharDataEncoding</code>
      <code>testFeedSubtitleHasBeenSet</code>
      <code>testFeedSubtitleThrowsNoExceptionIfMissing</code>
      <code>testFeedTitleCharDataEncoding</code>
      <code>testFeedTitleHasBeenSet</code>
      <code>testFeedTitleIfMissingThrowsException</code>
      <code>testFeedUpdatedDateHasBeenSet</code>
      <code>testFeedUpdatedDateIfMissingThrowsException</code>
      <code>testHubsCanBeSet</code>
      <code>testImageCanBeSet</code>
      <code>testSetsWriterInConstructor</code>
    </MissingReturnType>
    <MixedArgument occurrences="38">
      <code>$message</code>
      <code>$notices-&gt;messages</code>
      <code>$this-&gt;validWriter</code>
      <code>$this-&gt;validWriter</code>
      <code>$this-&gt;validWriter</code>
      <code>$this-&gt;validWriter</code>
      <code>$this-&gt;validWriter</code>
      <code>$this-&gt;validWriter</code>
      <code>$this-&gt;validWriter</code>
      <code>$this-&gt;validWriter</code>
      <code>$this-&gt;validWriter</code>
      <code>$this-&gt;validWriter</code>
      <code>$this-&gt;validWriter</code>
      <code>$this-&gt;validWriter</code>
      <code>$this-&gt;validWriter</code>
      <code>$this-&gt;validWriter</code>
      <code>$this-&gt;validWriter</code>
      <code>$this-&gt;validWriter</code>
      <code>$this-&gt;validWriter</code>
      <code>$this-&gt;validWriter</code>
      <code>$this-&gt;validWriter</code>
      <code>$this-&gt;validWriter</code>
      <code>$this-&gt;validWriter</code>
      <code>$this-&gt;validWriter</code>
      <code>$this-&gt;validWriter</code>
      <code>$this-&gt;validWriter</code>
      <code>$this-&gt;validWriter</code>
      <code>$this-&gt;validWriter</code>
      <code>$this-&gt;validWriter</code>
      <code>$this-&gt;validWriter</code>
      <code>$this-&gt;validWriter</code>
      <code>$this-&gt;validWriter</code>
      <code>$this-&gt;validWriter</code>
      <code>$this-&gt;validWriter</code>
      <code>$this-&gt;validWriter</code>
      <code>$this-&gt;validWriter</code>
      <code>$this-&gt;validWriter</code>
      <code>$this-&gt;validWriter</code>
    </MixedArgument>
    <MixedArgumentTypeCoercion occurrences="1"/>
    <MixedArrayAssignment occurrences="1">
      <code>$notices-&gt;messages[]</code>
    </MixedArrayAssignment>
    <MixedAssignment occurrences="1">
      <code>$message</code>
    </MixedAssignment>
    <MixedMethodCall occurrences="13">
      <code>addCategories</code>
      <code>addCategories</code>
      <code>addHubs</code>
      <code>setBaseUrl</code>
      <code>setCopyright</code>
      <code>setCopyright</code>
      <code>setDateModified</code>
      <code>setEncoding</code>
      <code>setGenerator</code>
      <code>setGenerator</code>
      <code>setId</code>
      <code>setImage</code>
      <code>setLanguage</code>
    </MixedMethodCall>
    <PossiblyNullReference occurrences="1">
      <code>getTimestamp</code>
    </PossiblyNullReference>
    <ReservedWord occurrences="30">
      <code>$this-&gt;assertEquals($expected, $feed-&gt;getImage())</code>
      <code>$this-&gt;assertEquals($expected, (array) $feed-&gt;getCategories())</code>
      <code>$this-&gt;assertEquals($expected, (array) $feed-&gt;getCategories())</code>
      <code>$this-&gt;assertEquals($expected, (array) $feed-&gt;getHubs())</code>
      <code>$this-&gt;assertEquals($feed-&gt;getLink(), $feed-&gt;getId())</code>
      <code>$this-&gt;assertEquals('&lt;&gt;&amp;\'"áéíóú', $feed-&gt;getCopyright())</code>
      <code>$this-&gt;assertEquals('&lt;&gt;&amp;\'"áéíóú', $feed-&gt;getDescription())</code>
      <code>$this-&gt;assertEquals('&lt;&gt;&amp;\'"áéíóú', $feed-&gt;getGenerator())</code>
      <code>$this-&gt;assertEquals('&lt;&gt;&amp;\'"áéíóú', $feed-&gt;getTitle())</code>
      <code>$this-&gt;assertEquals('Copyright © 2009 Paddy', $feed-&gt;getCopyright())</code>
      <code>$this-&gt;assertEquals('FooFeedBuilder', $feed-&gt;getGenerator())</code>
      <code>$this-&gt;assertEquals('Laminas_Feed_Writer', $feed-&gt;getGenerator())</code>
      <code>$this-&gt;assertEquals('This is a test description.', $feed-&gt;getDescription())</code>
      <code>$this-&gt;assertEquals('This is a test feed.', $feed-&gt;getTitle())</code>
      <code>$this-&gt;assertEquals('UTF-8', $feed-&gt;getEncoding())</code>
      <code>$this-&gt;assertEquals('fr', $feed-&gt;getLanguage())</code>
      <code>$this-&gt;assertEquals('http://www.example.com', $feed-&gt;getLink())</code>
      <code>$this-&gt;assertEquals('http://www.example.com/atom', $feed-&gt;getFeedLink())</code>
      <code>$this-&gt;assertEquals('http://www.example.com/base', $feed-&gt;getBaseUrl())</code>
      <code>$this-&gt;assertEquals('iso-8859-1', $feed-&gt;getEncoding())</code>
      <code>$this-&gt;assertEquals('urn:uuid:60a76c80-d399-11d9-b93C-0003939e0af6', $feed-&gt;getId())</code>
      <code>$this-&gt;assertEquals(1234567890, $feed-&gt;getDateModified()-&gt;getTimestamp())</code>
      <code>$this-&gt;assertEquals(null, $feed-&gt;getLanguage())</code>
      <code>$this-&gt;assertInstanceOf(Feed::class, $feed-&gt;getDataContainer())</code>
      <code>$this-&gt;markTestIncomplete('Not yet implemented...')</code>
      <code>$this-&gt;markTestIncomplete('Not yet implemented...')</code>
    </ReservedWord>
    <UndefinedInterfaceMethod occurrences="5">
      <code>getBaseUrl</code>
      <code>getEncoding</code>
      <code>getEncoding</code>
      <code>getHubs</code>
      <code>getImage</code>
    </UndefinedInterfaceMethod>
  </file>
  <file src="test/Writer/Renderer/Feed/RssTest.php">
    <InvalidArgument occurrences="14">
      <code>ExceptionInterface::class</code>
      <code>ExceptionInterface::class</code>
      <code>ExceptionInterface::class</code>
      <code>ExceptionInterface::class</code>
      <code>ExceptionInterface::class</code>
      <code>ExceptionInterface::class</code>
      <code>ExceptionInterface::class</code>
      <code>ExceptionInterface::class</code>
      <code>ExceptionInterface::class</code>
      <code>ExceptionInterface::class</code>
      <code>ExceptionInterface::class</code>
      <code>ExceptionInterface::class</code>
      <code>ExceptionInterface::class</code>
      <code>ExceptionInterface::class</code>
    </InvalidArgument>
    <MissingClosureParamType occurrences="4">
      <code>$errno</code>
      <code>$errstr</code>
      <code>$message</code>
      <code>$toReturn</code>
    </MissingClosureParamType>
    <MissingPropertyType occurrences="1">
      <code>$validWriter</code>
    </MissingPropertyType>
    <MissingReturnType occurrences="49">
      <code>setUp</code>
      <code>tearDown</code>
      <code>testBaseUrlCanBeSet</code>
      <code>testBuildMethodRunsMinimalWriterContainerProperlyBeforeICheckRssCompliance</code>
      <code>testCategoriesCanBeSet</code>
      <code>testCategoriesCharDataEncoding</code>
      <code>testCopyrightCanBeSet</code>
      <code>testCopyrightCharDataEncoding</code>
      <code>testFeedAuthorCharDataEncoding</code>
      <code>testFeedDescriptionCharDataEncoding</code>
      <code>testFeedDescriptionHasBeenSet</code>
      <code>testFeedDescriptionThrowsExceptionIfMissing</code>
      <code>testFeedEncodingDefaultIsUsedIfEncodingNotSetByHand</code>
      <code>testFeedEncodingHasBeenSet</code>
      <code>testFeedGeneratorDefaultIsUsedIfGeneratorNotSetByHand</code>
      <code>testFeedGeneratorHasBeenSet</code>
      <code>testFeedGeneratorIfMissingThrowsNoException</code>
      <code>testFeedHoldsAnyAuthorAdded</code>
      <code>testFeedIncludesLinkToHtmlVersionOfFeed</code>
      <code>testFeedIncludesLinkToXmlRssWhereRssAndAtomLinksAreProvided</code>
      <code>testFeedIncludesLinkToXmlRssWhereTheFeedWillBeAvailable</code>
      <code>testFeedLanguageDefaultIsUsedIfGeneratorNotSetByHand</code>
      <code>testFeedLanguageHasBeenSet</code>
      <code>testFeedLanguageIfMissingThrowsNoException</code>
      <code>testFeedLastBuildDateHasBeenSet</code>
      <code>testFeedLinkToHtmlVersionOfFeedIfMissingThrowsException</code>
      <code>testFeedLinkToXmlRssWhereTheFeedWillBeAvailableIfMissingThrowsNoException</code>
      <code>testFeedRendererEmitsNoticeDuringFeedImportWhenGooglePlayPodcastExtensionUnavailable</code>
      <code>testFeedSetDateCreated</code>
      <code>testFeedTitleCharDataEncoding</code>
      <code>testFeedTitleHasBeenSet</code>
      <code>testFeedTitleIfMissingThrowsException</code>
      <code>testFeedUpdatedDateHasBeenSet</code>
      <code>testFeedUpdatedDateIfMissingThrowsNoException</code>
      <code>testHubsCanBeSet</code>
      <code>testImageCanBeSet</code>
      <code>testImageCanBeSetWithOnlyRequiredElements</code>
      <code>testImageThrowsExceptionIfOptionalDescriptionEmpty</code>
      <code>testImageThrowsExceptionIfOptionalDescriptionInvalid</code>
      <code>testImageThrowsExceptionIfOptionalHeightEmpty</code>
      <code>testImageThrowsExceptionIfOptionalHeightGreaterThan400</code>
      <code>testImageThrowsExceptionIfOptionalHeightNotAnInteger</code>
      <code>testImageThrowsExceptionIfOptionalWidthEmpty</code>
      <code>testImageThrowsExceptionIfOptionalWidthGreaterThan144</code>
      <code>testImageThrowsExceptionIfOptionalWidthNotAnInteger</code>
      <code>testImageThrowsExceptionOnMissingLink</code>
      <code>testImageThrowsExceptionOnMissingTitle</code>
      <code>testImageThrowsExceptionOnMissingUri</code>
      <code>testSetsWriterInConstructor</code>
    </MissingReturnType>
    <MixedArgument occurrences="48">
      <code>$feed-&gt;getDomDocument()</code>
      <code>$message</code>
      <code>$notices-&gt;messages</code>
      <code>$this-&gt;validWriter</code>
      <code>$this-&gt;validWriter</code>
      <code>$this-&gt;validWriter</code>
      <code>$this-&gt;validWriter</code>
      <code>$this-&gt;validWriter</code>
      <code>$this-&gt;validWriter</code>
      <code>$this-&gt;validWriter</code>
      <code>$this-&gt;validWriter</code>
      <code>$this-&gt;validWriter</code>
      <code>$this-&gt;validWriter</code>
      <code>$this-&gt;validWriter</code>
      <code>$this-&gt;validWriter</code>
      <code>$this-&gt;validWriter</code>
      <code>$this-&gt;validWriter</code>
      <code>$this-&gt;validWriter</code>
      <code>$this-&gt;validWriter</code>
      <code>$this-&gt;validWriter</code>
      <code>$this-&gt;validWriter</code>
      <code>$this-&gt;validWriter</code>
      <code>$this-&gt;validWriter</code>
      <code>$this-&gt;validWriter</code>
      <code>$this-&gt;validWriter</code>
      <code>$this-&gt;validWriter</code>
      <code>$this-&gt;validWriter</code>
      <code>$this-&gt;validWriter</code>
      <code>$this-&gt;validWriter</code>
      <code>$this-&gt;validWriter</code>
      <code>$this-&gt;validWriter</code>
      <code>$this-&gt;validWriter</code>
      <code>$this-&gt;validWriter</code>
      <code>$this-&gt;validWriter</code>
      <code>$this-&gt;validWriter</code>
      <code>$this-&gt;validWriter</code>
      <code>$this-&gt;validWriter</code>
      <code>$this-&gt;validWriter</code>
      <code>$this-&gt;validWriter</code>
      <code>$this-&gt;validWriter</code>
      <code>$this-&gt;validWriter</code>
      <code>$this-&gt;validWriter</code>
      <code>$this-&gt;validWriter</code>
      <code>$this-&gt;validWriter</code>
      <code>$this-&gt;validWriter</code>
      <code>$this-&gt;validWriter</code>
      <code>$this-&gt;validWriter</code>
      <code>$this-&gt;validWriter</code>
    </MixedArgument>
    <MixedArgumentTypeCoercion occurrences="1"/>
    <MixedArrayAssignment occurrences="1">
      <code>$notices-&gt;messages[]</code>
    </MixedArrayAssignment>
    <MixedAssignment occurrences="1">
      <code>$message</code>
    </MixedAssignment>
    <MixedMethodCall occurrences="31">
      <code>addAuthor</code>
      <code>addAuthor</code>
      <code>addCategories</code>
      <code>addCategories</code>
      <code>addHubs</code>
      <code>getTimestamp</code>
      <code>setBaseUrl</code>
      <code>setCopyright</code>
      <code>setCopyright</code>
      <code>setDateCreated</code>
      <code>setDateModified</code>
      <code>setEncoding</code>
      <code>setFeedLink</code>
      <code>setFeedLink</code>
      <code>setFeedLink</code>
      <code>setGenerator</code>
      <code>setImage</code>
      <code>setImage</code>
      <code>setImage</code>
      <code>setImage</code>
      <code>setImage</code>
      <code>setImage</code>
      <code>setImage</code>
      <code>setImage</code>
      <code>setImage</code>
      <code>setImage</code>
      <code>setImage</code>
      <code>setImage</code>
      <code>setImage</code>
      <code>setLanguage</code>
      <code>setLastBuildDate</code>
    </MixedMethodCall>
    <MixedPropertyFetch occurrences="1">
      <code>$xpath-&gt;evaluate('/rss/channel/atom:link[@rel="self"]')-&gt;length</code>
    </MixedPropertyFetch>
    <PossiblyNullReference occurrences="1">
      <code>getTimestamp</code>
    </PossiblyNullReference>
    <ReservedWord occurrences="29">
      <code>$this-&gt;assertEquals($expected, $feed-&gt;getImage())</code>
      <code>$this-&gt;assertEquals($expected, $feed-&gt;getImage())</code>
      <code>$this-&gt;assertEquals($expected, (array) $feed-&gt;getCategories())</code>
      <code>$this-&gt;assertEquals($expected, (array) $feed-&gt;getCategories())</code>
      <code>$this-&gt;assertEquals($expected, (array) $feed-&gt;getHubs())</code>
      <code>$this-&gt;assertEquals($myDate, $feed-&gt;getDateCreated())</code>
      <code>$this-&gt;assertEquals('&lt;&gt;&amp;\'"áéíóú', $feed-&gt;getCopyright())</code>
      <code>$this-&gt;assertEquals('&lt;&gt;&amp;\'"áéíóú', $feed-&gt;getDescription())</code>
      <code>$this-&gt;assertEquals('&lt;&gt;&amp;\'"áéíóú', $feed-&gt;getTitle())</code>
      <code>$this-&gt;assertEquals('Copyright © 2009 Paddy', $feed-&gt;getCopyright())</code>
      <code>$this-&gt;assertEquals('FooFeedBuilder 1.00 (http://www.example.com)', $feed-&gt;getGenerator())</code>
      <code>$this-&gt;assertEquals('This is a test description.', $feed-&gt;getDescription())</code>
      <code>$this-&gt;assertEquals('This is a test feed.', $feed-&gt;getTitle())</code>
      <code>$this-&gt;assertEquals('UTF-8', $feed-&gt;getEncoding())</code>
      <code>$this-&gt;assertEquals('fr', $feed-&gt;getLanguage())</code>
      <code>$this-&gt;assertEquals('http://www.example.com', $feed-&gt;getLink())</code>
      <code>$this-&gt;assertEquals('http://www.example.com/base', $feed-&gt;getBaseUrl())</code>
      <code>$this-&gt;assertEquals('http://www.example.com/rss', $feed-&gt;getFeedLink())</code>
      <code>$this-&gt;assertEquals('http://www.example.com/rss', $feed-&gt;getFeedLink())</code>
      <code>$this-&gt;assertEquals('iso-8859-1', $feed-&gt;getEncoding())</code>
      <code>$this-&gt;assertEquals(1, $xpath-&gt;evaluate('/rss/channel/atom:link[@rel="self"]')-&gt;length)</code>
      <code>$this-&gt;assertEquals(1234567890, $feed-&gt;getDateModified()-&gt;getTimestamp())</code>
      <code>$this-&gt;assertEquals(1234567890, $feed-&gt;getLastBuildDate()-&gt;getTimestamp())</code>
      <code>$this-&gt;assertEquals(['name' =&gt; '&lt;&gt;&amp;\'"áéíóú'], $feed-&gt;getAuthor())</code>
      <code>$this-&gt;assertEquals(['name' =&gt; 'Joe'], $feed-&gt;getAuthor())</code>
      <code>$this-&gt;assertEquals(null, $feed-&gt;getLanguage())</code>
      <code>$this-&gt;assertInstanceOf(Feed::class, $feed-&gt;getDataContainer())</code>
    </ReservedWord>
    <UndefinedInterfaceMethod occurrences="8">
      <code>getBaseUrl</code>
      <code>getDomDocument</code>
      <code>getEncoding</code>
      <code>getEncoding</code>
      <code>getHubs</code>
      <code>getImage</code>
      <code>getImage</code>
      <code>getLastBuildDate</code>
    </UndefinedInterfaceMethod>
  </file>
  <file src="test/Writer/StandaloneExtensionManagerTest.php">
    <MissingParamType occurrences="6">
      <code>$pluginClass</code>
      <code>$pluginClass</code>
      <code>$pluginClass</code>
      <code>$pluginName</code>
      <code>$pluginName</code>
      <code>$pluginName</code>
    </MissingParamType>
    <MissingReturnType occurrences="9">
      <code>defaultPlugins</code>
      <code>setUp</code>
      <code>testAddAcceptsValidExtensionClasses</code>
      <code>testAddRejectsInvalidExtensions</code>
      <code>testCanRetrieveDefaultPluginInstances</code>
      <code>testEachPluginRetrievalReturnsNewInstance</code>
      <code>testExtensionRemoval</code>
      <code>testHasAllDefaultPlugins</code>
      <code>testIsAnExtensionManagerImplementation</code>
    </MissingReturnType>
    <MixedArgument occurrences="7">
      <code>$pluginClass</code>
      <code>$pluginClass</code>
      <code>$pluginClass</code>
      <code>$pluginName</code>
      <code>$pluginName</code>
      <code>$pluginName</code>
      <code>$pluginName</code>
    </MixedArgument>
    <MixedAssignment occurrences="3">
      <code>$extension</code>
      <code>$extension</code>
      <code>$test</code>
    </MixedAssignment>
    <ReservedWord occurrences="10">
      <code>$this-&gt;assertFalse($this-&gt;extensions-&gt;has('Test/Entry'))</code>
      <code>$this-&gt;assertInstanceOf($pluginClass, $extension)</code>
      <code>$this-&gt;assertInstanceOf($pluginClass, $extension)</code>
      <code>$this-&gt;assertInstanceOf($pluginClass, $test)</code>
      <code>$this-&gt;assertInstanceOf(ExtensionManagerInterface::class, $this-&gt;extensions)</code>
      <code>$this-&gt;assertTrue($this-&gt;extensions-&gt;has($pluginName))</code>
      <code>$this-&gt;assertTrue($this-&gt;extensions-&gt;has('Test/Entry'))</code>
      <code>$this-&gt;assertTrue($this-&gt;extensions-&gt;has('Test/Entry'))</code>
      <code>$this-&gt;assertTrue($this-&gt;extensions-&gt;has('Test/Feed'))</code>
      <code>$this-&gt;assertTrue($this-&gt;extensions-&gt;has('Test/Thing'))</code>
    </ReservedWord>
  </file>
  <file src="test/Writer/TestAsset/CustomExtensionManager.php">
    <MissingPropertyType occurrences="1">
      <code>$extensions</code>
    </MissingPropertyType>
    <MixedArgument occurrences="2">
      <code>$class</code>
      <code>$this-&gt;extensions</code>
    </MixedArgument>
    <MixedArrayAccess occurrences="1">
      <code>$this-&gt;extensions[$extension]</code>
    </MixedArrayAccess>
    <MixedAssignment occurrences="1">
      <code>$class</code>
    </MixedAssignment>
    <MixedMethodCall occurrences="1">
      <code>new $class()</code>
    </MixedMethodCall>
    <PossiblyFalseArgument occurrences="1">
      <code>$class</code>
    </PossiblyFalseArgument>
  </file>
</files>
